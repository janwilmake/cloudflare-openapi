openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}/assets-upload-session:
    post:
      description: >-
        Start uploading a collection of assets for use in a Worker version. To
        learn more about the direct uploads of assets, see
        https://developers.cloudflare.com/workers/static-assets/direct-upload/.
      operationId: namespace-worker-script-update-create-assets-upload-session
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            description: Identifier.
            example: 023e105f4ecef8ad9ca31a8372d0c353
            maxLength: 32
            type: string
            x-auditable: true
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            description: Name of the Workers for Platforms dispatch namespace.
            example: my-dispatch-namespace
            pattern: ^.+$
            type: string
            x-auditable: true
        - in: path
          name: script_name
          required: true
          schema:
            description: Name of the script, used in URLs and route configuration.
            example: this-is_my_script-01
            pattern: ^[a-z0-9_][a-z0-9-_]*$
            type: string
            x-auditable: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                manifest:
                  additionalProperties:
                    properties:
                      hash:
                        description: The hash of the file.
                        type: string
                      size:
                        description: The size of the file in bytes.
                        type: integer
                    required:
                      - hash
                      - size
                    type: object
                  description: >-
                    A manifest ([path]: {hash, size}) map of files to upload. As
                    an example, `/blog/hello-world.html` would be a valid path
                    key.
                  type: object
              required:
                - manifest
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      errors:
                        example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                      messages:
                        example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                      success:
                        description: Whether the API call was successful.
                        enum:
                          - true
                        example: true
                        type: boolean
                    required:
                      - success
                      - errors
                      - messages
                    type: object
                  - properties:
                      result:
                        properties:
                          buckets:
                            description: The requests to make to upload assets.
                            items:
                              description: >-
                                The set of assets to include in each request
                                while uploading.
                              items:
                                description: The file hash to include in this bucket.
                                type: string
                              type: array
                              x-stainless-collection-type: set
                            type: array
                            x-stainless-collection-type: set
                          jwt:
                            description: >-
                              A JWT to use as authentication for uploading
                              assets.
                            type: string
                            x-sensitive: true
                        type: object
                    type: object
          description: Create Assets Upload Session response.
        4XX:
          content:
            application/json:
              schema:
                properties:
                  errors:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example:
                      - code: 7003
                        message: No route for the URI
                    minLength: 1
                  messages:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example: []
                  result:
                    enum:
                      - null
                    nullable: true
                    type: object
                  success:
                    description: Whether the API call was successful.
                    enum:
                      - false
                    example: false
                    type: boolean
                required:
                  - success
                  - errors
                  - messages
                  - result
                type: object
          description: Create Assets Upload Session response failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Create Assets Upload Session
      tags:
        - Workers for Platforms
