openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/logs/rayids/{ray_id}:
    get:
      description: >-
        The `/rayids` api route allows lookups by specific rayid. The rayids
        route will return zero, one, or more records (ray ids are not unique).
      operationId: get-zones-zone_id-logs-rayids-ray_id
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            description: Identifier
            example: 023e105f4ecef8ad9ca31a8372d0c353
            maxLength: 32
            type: string
        - in: path
          name: ray_id
          required: true
          schema:
            description: Ray identifier.
            example: 41ddf1740f67442d
            maxLength: 16
            readOnly: true
            type: string
            x-auditable: true
        - in: query
          name: fields
          schema:
            description: >-
              The `/received` route by default returns a limited set of fields,
              and allows customers to override the default field set by
              specifying individual fields. The reasons for this are: 1. Most
              customers require only a small subset of fields, but that subset
              varies from customer to customer; 2. Flat schema is much easier to
              work with downstream (importing into BigTable etc); 3. Performance
              (time to process, file size). If `?fields=` is not specified,
              default field set is returned. This default field set may change
              at any time. When `?fields=` is provided, each record is returned
              with the specified fields. `fields` must be specified as a comma
              separated list without any whitespaces, and all fields must exist.
              The order in which fields are specified does not matter, and the
              order of fields in the response is not specified.
            example: ClientIP,RayID,EdgeStartTimestamp
            type: string
            x-auditable: true
        - in: query
          name: timestamps
          schema:
            default: unixnano
            description: >-
              By default, timestamps in responses are returned as Unix
              nanosecond integers. The `?timestamps=` argument can be set to
              change the format in which response timestamps are returned.
              Possible values are: `unix`, `unixnano`, `rfc3339`. Note that
              `unix` and `unixnano` return timestamps as integers; `rfc3339`
              returns timestamps as strings.
            enum:
              - unix
              - unixnano
              - rfc3339
            example: unixnano
            type: string
            x-auditable: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                  - type: string
                  - type: object
                example: >-
                  {"ClientIP":"192.0.2.1","RayID":"41ddf1740f67442d","EdgeStartTimestamp":1526810289280000000}

                  {"ClientIP":"192.0.2.1","RayID":"41ddf1740f67442d","EdgeStartTimestamp":1526810289280000000}

                  {"ClientIP":"192.0.2.1","RayID":"41ddf1740f67442d","EdgeStartTimestamp":1526810289280000000}
          description: Get logs RayIDs response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      errors:
                        allOf:
                          - example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                message:
                                  type: string
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                        example:
                          - code: 7003
                            message: No route for the URI
                        minLength: 1
                      messages:
                        allOf:
                          - example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                message:
                                  type: string
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                        example: []
                      result:
                        enum:
                          - null
                        nullable: true
                        type: object
                      success:
                        description: Whether the API call was successful
                        enum:
                          - false
                        example: false
                        type: boolean
                    required:
                      - success
                      - errors
                      - messages
                      - result
                    type: object
          description: Get logs RayIDs response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Get logs RayIDs
      tags:
        - Logs Received
      x-api-token-group:
        - Logs Write
        - Logs Read
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
