openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/schema_validation/schemas:
    get:
      operationId: schema-validation-list-schemas-paginated
      parameters:
        - description: Page number of paginated results.
          in: query
          name: page
          schema:
            default: 1
            minimum: 1
            type: integer
        - description: Maximum number of results per page.
          in: query
          name: per_page
          schema:
            default: 20
            maximum: 50
            minimum: 5
            type: integer
        - description: Omit the source-files of schemas and only retrieve their meta-data.
          in: query
          name: omit_source
          schema:
            default: false
            type: boolean
        - description: Filter for enabled schemas
          in: query
          name: validation_enabled
          schema:
            description: Flag whether schema is enabled for validation.
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - properties:
                          errors:
                            example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                documentation_url:
                                  type: string
                                message:
                                  type: string
                                source:
                                  properties:
                                    pointer:
                                      type: string
                                  type: object
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                          messages:
                            example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                documentation_url:
                                  type: string
                                message:
                                  type: string
                                source:
                                  properties:
                                    pointer:
                                      type: string
                                  type: object
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                          success:
                            description: Whether the API call was successful.
                            enum:
                              - true
                            example: true
                            type: boolean
                        required:
                          - success
                          - errors
                          - messages
                        type: object
                      - properties:
                          result_info:
                            properties:
                              count:
                                description: >-
                                  Total number of results for the requested
                                  service.
                                example: 1
                                type: number
                              page:
                                description: Current page within paginated list of results.
                                example: 1
                                type: number
                              per_page:
                                description: Number of results per page of results.
                                example: 20
                                type: number
                              total_count:
                                description: >-
                                  Total results available without any search
                                  parameters.
                                example: 2000
                                type: number
                            type: object
                        type: object
                    type: object
                  - properties:
                      result:
                        items:
                          description: A schema used in schema validation
                          properties:
                            created_at:
                              allOf:
                                - example: '2014-01-01T05:20:00.12345Z'
                                  format: date-time
                                  type: string
                                  x-auditable: true
                                - readOnly: true
                                  type: string
                                  x-auditable: true
                            kind:
                              description: The kind of the schema
                              enum:
                                - openapi_v3
                              example: openapi_v3
                              readOnly: true
                              type: string
                              x-auditable: true
                            name:
                              description: A human-readable name for the schema
                              example: petstore schema
                              readOnly: true
                              type: string
                              x-auditable: true
                            schema_id:
                              allOf:
                                - allOf:
                                    - minLength: 36
                                      type: string
                                      x-auditable: true
                                    - description: UUID.
                                      example: f174e90a-fafe-4643-bbbc-4a0ed4fc8415
                                      maxLength: 36
                                      type: string
                                      x-auditable: true
                                - description: A unique identifier of this schema
                                  format: uuid
                                  readOnly: true
                                  type: string
                              type: string
                              x-auditable: true
                            source:
                              description: >-
                                The raw schema, e.g., the OpenAPI schema, either
                                as JSON or YAML
                              example: <schema file contents>
                              readOnly: true
                              type: string
                              x-auditable: true
                            validation_enabled:
                              description: An indicator if this schema is enabled
                              type: boolean
                              x-auditable: true
                          required:
                            - schema_id
                            - name
                            - kind
                            - source
                            - created_at
                          type: object
                        type: array
                    required:
                      - result
                    type: object
          description: Success
        4XX:
          content:
            application/json:
              schema:
                properties:
                  errors:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example:
                      - code: 7003
                        message: No route for the URI
                    minLength: 1
                  messages:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example: []
                  result:
                    enum:
                      - null
                    nullable: true
                    type: object
                  success:
                    description: Whether the API call was successful.
                    enum:
                      - false
                    example: false
                    type: boolean
                required:
                  - success
                  - errors
                  - messages
                  - result
                type: object
          description: Failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: List all uploaded schemas
      tags:
        - Schema Validation
      x-api-token-group:
        - Account API Gateway
        - Account API Gateway Read
        - Domain API Gateway
        - Domain API Gateway Read
