openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/api_gateway/settings/schema_validation:
    put:
      deprecated: true
      description: Updates zone level schema validation settings on the zone
      operationId: api-shield-schema-validation-update-zone-level-settings
      requestBody:
        content:
          application/json:
            schema:
              properties:
                validation_default_mitigation_action:
                  description: >
                    The default mitigation action used when there is no
                    mitigation action defined on the operation


                    Mitigation actions are as follows:

                      * `log` - log request when request does not conform to schema
                      * `block` - deny access to the site when request does not conform to schema

                    A special value of of `none` will skip running schema
                    validation entirely for the request when there is no
                    mitigation action defined on the operation
                  enum:
                    - none
                    - log
                    - block
                  example: block
                  type: string
                  x-auditable: true
                validation_override_mitigation_action:
                  description: >
                    When set, this overrides both zone level and operation level
                    mitigation actions.

                      - `none` will skip running schema validation entirely for the request
                      - `null` indicates that no override is in place

                    To clear any override, use the special value
                    `disable_override` or `null`
                  enum:
                    - none
                    - disable_override
                    - null
                  example: none
                  nullable: true
                  type: string
                  x-auditable: true
              required:
                - validation_default_mitigation_action
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  validation_default_mitigation_action:
                    description: >
                      The default mitigation action used when there is no
                      mitigation action defined on the operation


                      Mitigation actions are as follows:

                        * `log` - log request when request does not conform to schema
                        * `block` - deny access to the site when request does not conform to schema

                      A special value of of `none` will skip running schema
                      validation entirely for the request when there is no
                      mitigation action defined on the operation
                    enum:
                      - none
                      - log
                      - block
                    example: block
                    type: string
                    x-auditable: true
                  validation_override_mitigation_action:
                    description: >
                      When set, this overrides both zone level and operation
                      level mitigation actions.

                        - `none` will skip running schema validation entirely for the request
                        - `null` indicates that no override is in place
                    enum:
                      - none
                      - null
                    example: disable_override
                    nullable: true
                    type: string
                    x-auditable: true
                type: object
          description: Update zone level schema validation settings response
        4XX:
          content:
            application/json:
              schema:
                properties:
                  errors:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example:
                      - code: 7003
                        message: No route for the URI
                    minLength: 1
                  messages:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example: []
                  result:
                    enum:
                      - null
                    nullable: true
                    type: object
                  success:
                    description: Whether the API call was successful.
                    enum:
                      - false
                    example: false
                    type: boolean
                required:
                  - success
                  - errors
                  - messages
                  - result
                type: object
          description: Update zone level schema validation settings response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update zone level schema validation settings
      tags:
        - API Shield Schema Validation 2.0
      x-api-token-group:
        - Account API Gateway
        - Domain API Gateway
      x-stainless-deprecation-message: >-
        Use [Schema Validation
        API](https://developers.cloudflare.com/api/resources/schema_validation/)
        instead.
