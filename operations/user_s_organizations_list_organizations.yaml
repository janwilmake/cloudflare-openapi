openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /user/organizations:
    get:
      deprecated: true
      description: Lists organizations the user is associated with.
      operationId: user'-s-organizations-list-organizations
      parameters:
        - in: query
          name: name
          schema:
            description: Organization name.
            example: Cloudflare, Inc.
            maxLength: 100
            type: string
            x-auditable: true
        - in: query
          name: page
          schema:
            default: 1
            description: Page number of paginated results.
            minimum: 1
            type: number
        - in: query
          name: per_page
          schema:
            default: 20
            description: Number of organizations per page.
            maximum: 50
            minimum: 5
            type: number
        - in: query
          name: order
          schema:
            description: Field to order organizations by.
            enum:
              - id
              - name
              - status
            example: status
            type: string
        - in: query
          name: direction
          schema:
            description: Direction to order organizations.
            enum:
              - asc
              - desc
            example: desc
            type: string
        - in: query
          name: match
          schema:
            default: all
            description: Whether to match all search requirements or at least one (any).
            enum:
              - any
              - all
            type: string
        - in: query
          name: status
          schema:
            description: >-
              Whether the user is a member of the organization or has an
              inivitation pending.
            enum:
              - member
              - invited
            example: member
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - properties:
                          errors:
                            example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                documentation_url:
                                  type: string
                                message:
                                  type: string
                                source:
                                  properties:
                                    pointer:
                                      type: string
                                  type: object
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                          messages:
                            example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                documentation_url:
                                  type: string
                                message:
                                  type: string
                                source:
                                  properties:
                                    pointer:
                                      type: string
                                  type: object
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                          success:
                            description: Whether the API call was successful.
                            enum:
                              - true
                            example: true
                            type: boolean
                        required:
                          - success
                          - errors
                          - messages
                        type: object
                      - properties:
                          result_info:
                            properties:
                              count:
                                description: >-
                                  Total number of results for the requested
                                  service
                                example: 1
                                type: number
                              page:
                                description: Current page within paginated list of results
                                example: 1
                                type: number
                              per_page:
                                description: Number of results per page of results
                                example: 20
                                type: number
                              total_count:
                                description: >-
                                  Total results available without any search
                                  parameters
                                example: 2000
                                type: number
                            type: object
                    type: object
                  - properties:
                      result:
                        items:
                          properties:
                            id:
                              description: Identifier
                              example: 023e105f4ecef8ad9ca31a8372d0c353
                              maxLength: 32
                              minLength: 32
                              type: string
                              x-auditable: true
                            name:
                              description: Organization name.
                              example: Cloudflare, Inc.
                              maxLength: 100
                              type: string
                              x-auditable: true
                            permissions:
                              description: Access permissions for this User.
                              items:
                                example: '#zones:read'
                                maxLength: 160
                                type: string
                                x-auditable: true
                              readOnly: true
                              type: array
                            roles:
                              description: >-
                                List of roles that a user has within an
                                organization.
                              items:
                                example: All Privileges - Super Administrator
                                maxLength: 120
                                type: string
                                x-auditable: true
                              readOnly: true
                              type: array
                            status:
                              description: >-
                                Whether the user is a member of the organization
                                or has an invitation pending.
                              enum:
                                - member
                                - invited
                              example: member
                              type: string
                              x-auditable: true
                          type: object
                        type: array
                    type: object
          description: List Organizations response
        4XX:
          content:
            application/json:
              schema:
                properties:
                  errors:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example:
                      - code: 7003
                        message: No route for the URI
                    minLength: 1
                  messages:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example: []
                  result:
                    enum:
                      - null
                    nullable: true
                    type: object
                  success:
                    description: Whether the API call was successful.
                    enum:
                      - false
                    example: false
                    type: boolean
                required:
                  - success
                  - errors
                  - messages
                  - result
                type: object
          description: List Organizations response failure
      security:
        - api_email: []
          api_key: []
      summary: List Organizations
      tags:
        - User's Organizations
      x-api-token-group:
        - Memberships Write
        - Memberships Read
      x-cfDeprecation:
        description: >-
          This endpoint and its related APIs are deprecated in favor of the
          `/accounts` equivalent APIs, which have a broader range of features
          and are backwards compatible with these API.
        display: true
        eol: '2020-02-04'
        id: org_deprecation
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
