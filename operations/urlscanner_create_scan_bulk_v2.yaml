openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/urlscanner/v2/bulk:
    post:
      description: >-
        Submit URLs to scan. Check limits at
        https://developers.cloudflare.com/security-center/investigate/scan-limits/
        and take into account scans submitted in bulk have lower priority and
        may take longer to finish.
      operationId: urlscanner-create-scan-bulk-v2
      parameters:
        - description: Account ID.
          in: path
          name: account_id
          required: true
          schema:
            description: Account ID.
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: List of urls to scan (up to a 100).
              items:
                properties:
                  customHeaders:
                    additionalProperties:
                      type: string
                    description: Set custom headers.
                    type: object
                  customagent:
                    maxLength: 4096
                    type: string
                  referer:
                    maxLength: 4096
                    type: string
                  screenshotsResolutions:
                    default:
                      - desktop
                    description: >-
                      Take multiple screenshots targeting different device
                      types.
                    items:
                      default: desktop
                      description: Device resolutions.
                      enum:
                        - desktop
                        - mobile
                        - tablet
                      type: string
                    type: array
                  url:
                    example: https://www.example.com
                    type: string
                  visibility:
                    default: Public
                    description: >-
                      The option `Public` means it will be included in listings
                      like recent scans and search results. `Unlisted` means it
                      will not be included in the aforementioned listings, users
                      will need to have the scan's ID to access it. A a scan
                      will be automatically marked as unlisted if it fails, if
                      it contains potential PII or other sensitive material.
                    enum:
                      - Public
                      - Unlisted
                    type: string
                required:
                  - url
                type: object
              type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    api:
                      description: URL to api report.
                      type: string
                    options:
                      properties:
                        useragent:
                          type: string
                      type: object
                    result:
                      description: URL to report.
                      type: string
                    url:
                      description: Submitted URL
                      type: string
                    uuid:
                      description: Scan ID.
                      format: uuid
                      type: string
                    visibility:
                      description: Submitted visibility status.
                      enum:
                        - public
                        - unlisted
                      example: public
                      type: string
                  required:
                    - uuid
                    - result
                    - api
                    - visibility
                    - url
                  type: object
                type: array
          description: Scan bulk request accepted successfully.
        '400':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    items:
                      properties:
                        detail:
                          type: string
                        status:
                          description: Status code.
                          example: 400
                          type: integer
                        title:
                          example: Invalid url
                          type: string
                      required:
                        - title
                        - detail
                        - status
                      type: object
                    type: array
                  message:
                    type: string
                  status:
                    description: Status code.
                    example: 400
                    type: integer
                required:
                  - message
                  - status
                  - errors
                type: object
          description: Invalid input.
        '429':
          content:
            application/json:
              schema:
                properties:
                  description:
                    type: string
                  errors:
                    items:
                      properties:
                        detail:
                          example: DNS Error - Could not resolve domain.
                          type: string
                        status:
                          example: 400
                          type: number
                        title:
                          example: DNS Error - Could not resolve domain.
                          type: string
                      required:
                        - title
                        - detail
                        - status
                      type: object
                    type: array
                  message:
                    type: string
                  status:
                    example: 429
                    type: number
                required:
                  - message
                  - status
                  - errors
                type: object
          description: 'Scan request denied: rate limited.'
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Bulk create URL Scans
      tags:
        - URL Scanner
      x-api-token-group:
        - URL Scanner Write
        - URL Scanner Read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
