openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/r2/buckets/{bucket_name}/lifecycle:
    put:
      description: Set the object lifecycle rules for a bucket.
      operationId: r2-put-bucket-lifecycle-configuration
      parameters:
        - in: path
          name: bucket_name
          required: true
          schema:
            description: Name of the bucket.
            example: example-bucket
            maxLength: 64
            minLength: 3
            pattern: ^[a-z0-9][a-z0-9-]*[a-z0-9]
            type: string
            x-auditable: true
        - in: path
          name: account_id
          required: true
          schema:
            description: Account ID.
            example: 023e105f4ecef8ad9ca31a8372d0c353
            maxLength: 32
            type: string
        - in: header
          name: cf-r2-jurisdiction
          schema:
            default: default
            description: >-
              Jurisdiction where objects in this bucket are guaranteed to be
              stored.
            enum:
              - default
              - eu
              - fedramp
            type: string
            x-auditable: true
            x-stainless-param: jurisdiction
      requestBody:
        content:
          application/json:
            schema:
              properties:
                rules:
                  items:
                    properties:
                      abortMultipartUploadsTransition:
                        description: Transition to abort ongoing multipart uploads.
                        properties:
                          condition:
                            allOf:
                              - description: >-
                                  Condition for lifecycle transitions to apply
                                  after an object reaches an age in seconds.
                                properties:
                                  maxAge:
                                    type: integer
                                    x-auditable: true
                                  type:
                                    enum:
                                      - Age
                                    type: string
                                    x-auditable: true
                                required:
                                  - type
                                  - maxAge
                                type: object
                        type: object
                      conditions:
                        description: Conditions that apply to all transitions of this rule.
                        properties:
                          prefix:
                            description: >-
                              Transitions will only apply to objects/uploads in
                              the bucket that start with the given prefix, an
                              empty prefix can be provided to scope rule to all
                              objects/uploads.
                            type: string
                            x-auditable: true
                        required:
                          - prefix
                        type: object
                      deleteObjectsTransition:
                        description: Transition to delete objects.
                        properties:
                          condition:
                            oneOf:
                              - description: >-
                                  Condition for lifecycle transitions to apply
                                  after an object reaches an age in seconds.
                                properties:
                                  maxAge:
                                    type: integer
                                    x-auditable: true
                                  type:
                                    enum:
                                      - Age
                                    type: string
                                    x-auditable: true
                                required:
                                  - type
                                  - maxAge
                                type: object
                              - description: >-
                                  Condition for lifecycle transitions to apply
                                  on a specific date.
                                properties:
                                  date:
                                    format: date
                                    type: string
                                    x-auditable: true
                                  type:
                                    enum:
                                      - Date
                                    type: string
                                    x-auditable: true
                                required:
                                  - type
                                  - date
                                type: object
                        type: object
                      enabled:
                        description: Whether or not this rule is in effect.
                        type: boolean
                        x-auditable: true
                      id:
                        description: Unique identifier for this rule.
                        example: Expire all objects older than 24 hours
                        type: string
                        x-auditable: true
                      storageClassTransitions:
                        description: Transitions to change the storage class of objects.
                        items:
                          allOf:
                            - properties:
                                condition:
                                  oneOf:
                                    - description: >-
                                        Condition for lifecycle transitions to
                                        apply after an object reaches an age in
                                        seconds.
                                      properties:
                                        maxAge:
                                          type: integer
                                          x-auditable: true
                                        type:
                                          enum:
                                            - Age
                                          type: string
                                          x-auditable: true
                                      required:
                                        - type
                                        - maxAge
                                      type: object
                                    - description: >-
                                        Condition for lifecycle transitions to
                                        apply on a specific date.
                                      properties:
                                        date:
                                          format: date
                                          type: string
                                          x-auditable: true
                                        type:
                                          enum:
                                            - Date
                                          type: string
                                          x-auditable: true
                                      required:
                                        - type
                                        - date
                                      type: object
                                storageClass:
                                  enum:
                                    - InfrequentAccess
                                  type: string
                                  x-auditable: true
                              required:
                                - condition
                                - storageClass
                              type: object
                        type: array
                    required:
                      - id
                      - conditions
                      - enabled
                    type: object
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      errors:
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                      messages:
                        items:
                          type: string
                        type: array
                      result:
                        type: object
                      success:
                        description: Whether the API call was successful.
                        enum:
                          - true
                        type: boolean
                    required:
                      - success
                      - errors
                      - messages
                      - result
                    type: object
                  - type: object
          description: Success Response.
        4XX:
          content:
            application/json:
              schema:
                properties:
                  errors:
                    items:
                      properties:
                        code:
                          minimum: 1000
                          type: integer
                        message:
                          type: string
                      required:
                        - code
                        - message
                      type: object
                      uniqueItems: true
                    type: array
                  messages:
                    items:
                      type: string
                    type: array
                  result:
                    enum:
                      - null
                    nullable: true
                    type: object
                  success:
                    description: Whether the API call was successful.
                    enum:
                      - false
                    example: false
                    type: boolean
                required:
                  - success
                  - errors
                  - messages
                  - result
                type: object
          description: Error Response.
      security:
        - api_token: []
      summary: Put Object Lifecycle Rules
      tags:
        - R2 Bucket
