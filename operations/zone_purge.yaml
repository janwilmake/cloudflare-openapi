openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/purge_cache:
    post:
      description: >
        ### Purge All Cached Content

        Removes ALL files from Cloudflare's cache. All tiers can purge
        everything.

        ```

        {"purge_everything": true}

        ```


        ### Purge Cached Content by URL

        Granularly removes one or more files from Cloudflare's cache by
        specifying URLs. All tiers can purge by URL.


        To purge files with custom cache keys, include the headers used to
        compute the cache key as in the example. If you have a device type or
        geo in your cache key, you will need to include the CF-Device-Type or
        CF-IPCountry headers. If you have lang in your cache key, you will need
        to include the Accept-Language header.


        **NB:** When including the Origin header, be sure to include the
        **scheme** and **hostname**. The port number can be omitted if it is the
        default port (80 for http, 443 for https), but must be included
        otherwise.


        Single file purge example with files:

        ```

        {"files": ["http://www.example.com/css/styles.css",
        "http://www.example.com/js/index.js"]}

        ```

        Single file purge example with url and header pairs:

        ```

        {"files": [{url: "http://www.example.com/cat_picture.jpg", headers: {
        "CF-IPCountry": "US", "CF-Device-Type": "desktop", "Accept-Language":
        "zh-CN" }}, {url: "http://www.example.com/dog_picture.jpg", headers: {
        "CF-IPCountry": "EU", "CF-Device-Type": "mobile", "Accept-Language":
        "en-US" }}]}

        ```


        ### Purge Cached Content by Tag, Host or Prefix

        Granularly removes one or more files from Cloudflare's cache either by
        specifying the host, the associated Cache-Tag, or a Prefix.


        Flex purge with tags:

        ```

        {"tags": ["a-cache-tag", "another-cache-tag"]}

        ```

        Flex purge with hosts:

        ```

        {"hosts": ["www.example.com", "images.example.com"]}

        ```

        Flex purge with prefixes:

        ```

        {"prefixes": ["www.example.com/foo", "images.example.com/bar/baz"]}

        ```


        ### Availability and limits

        please refer to [purge cache availability and limits documentation
        page](https://developers.cloudflare.com/cache/how-to/purge-cache/#availability-and-limits).
      operationId: zone-purge
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            example: 023e105f4ecef8ad9ca31a8372d0c353
            maxLength: 32
            type: string
      requestBody:
        content:
          application/json:
            examples:
              Flex Purge with Hosts:
                summary: Flex purge example with hosts list
                value:
                  hosts:
                    - www.example.com
                    - images.example.com
              Flex Purge with Prefixes:
                summary: Flex purge example with prefixes list
                value:
                  prefixes:
                    - www.example.com/foo
                    - images.example.com/bar/baz
              Flex Purge with Tags:
                summary: Flex purge example with tags list
                value:
                  tags:
                    - a-cache-tag
                    - another-cache-tag
              Purge Everything:
                summary: Purge everything example
                value:
                  purge_everything: true
              Single File Purge:
                summary: Single file purge example with files list
                value:
                  files:
                    - http://www.example.com/css/styles.css
                    - http://www.example.com/js/index.js
              Single File Purge with UrlAndHeaders:
                summary: Single file purge example with url and headers list
                value:
                  files:
                    - headers:
                        Accept-Language: zh-CN
                        CF-Device-Type: desktop
                        CF-IPCountry: US
                      url: http://www.example.com/cat_picture.jpg
                    - headers:
                        Accept-Language: en-US
                        CF-Device-Type: mobile
                        CF-IPCountry: EU
                      url: http://www.example.com/dog_picture.jpg
            schema:
              anyOf:
                - properties:
                    tags:
                      description: >-
                        For more information on cache tags and purging by tags,
                        please refer to [purge by cache-tags documentation
                        page](https://developers.cloudflare.com/cache/how-to/purge-cache/purge-by-tags/).
                      example:
                        - a-cache-tag
                        - another-cache-tag
                      items:
                        type: string
                        x-auditable: true
                      type: array
                  title: Purge by tags
                  type: object
                - properties:
                    hosts:
                      description: >-
                        For more information purging by hostnames, please refer
                        to [purge by hostname documentation
                        page](https://developers.cloudflare.com/cache/how-to/purge-cache/purge-by-hostname/).
                      example:
                        - www.example.com
                        - images.example.com
                      items:
                        type: string
                        x-auditable: true
                      type: array
                  title: Purge by hostnames
                  type: object
                - properties:
                    prefixes:
                      description: >-
                        For more information on purging by prefixes, please
                        refer to [purge by prefix documentation
                        page](https://developers.cloudflare.com/cache/how-to/purge-cache/purge_by_prefix/).
                      example:
                        - www.example.com/foo
                        - images.example.com/bar/baz
                      items:
                        type: string
                        x-auditable: true
                      type: array
                  title: Purge by prefixes
                  type: object
                - properties:
                    purge_everything:
                      description: >-
                        For more information, please refer to [purge everything
                        documentation
                        page](https://developers.cloudflare.com/cache/how-to/purge-cache/purge-everything/).
                      example: true
                      type: boolean
                      x-auditable: true
                  title: Purge everything
                  type: object
                - properties:
                    files:
                      description: >-
                        For more information on purging files, please refer to
                        [purge by single-file documentation
                        page](https://developers.cloudflare.com/cache/how-to/purge-cache/purge-by-single-file/).
                      example:
                        - http://www.example.com/css/styles.css
                        - http://www.example.com/js/index.js
                      items:
                        type: string
                        x-auditable: true
                      type: array
                  title: Purge files
                  type: object
                - properties:
                    files:
                      description: >-
                        For more information on purging files with URL and
                        headers, please refer to [purge by single-file
                        documentation
                        page](https://developers.cloudflare.com/cache/how-to/purge-cache/purge-by-single-file/).
                      example:
                        - headers:
                            Accept-Language: zh-CN
                            CF-Device-Type: desktop
                            CF-IPCountry: US
                          url: http://www.example.com/cat_picture.jpg
                        - headers:
                            Accept-Language: en-US
                            CF-Device-Type: mobile
                            CF-IPCountry: EU
                          url: http://www.example.com/dog_picture.jpg
                      items:
                        properties:
                          headers:
                            additionalProperties:
                              type: string
                              x-auditable: true
                            example: <HTTP header object>
                            type: object
                          url:
                            example: http://www.example.com/cat_picture.jpg
                            type: string
                            x-auditable: true
                        type: object
                      type: array
                  title: Purge files with URL and headers
                  type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    example: []
                    items:
                      properties:
                        code:
                          minimum: 1000
                          type: integer
                        message:
                          type: string
                      required:
                        - code
                        - message
                      type: object
                      uniqueItems: true
                    type: array
                  messages:
                    example: []
                    items:
                      properties:
                        code:
                          minimum: 1000
                          type: integer
                        message:
                          type: string
                      required:
                        - code
                        - message
                      type: object
                      uniqueItems: true
                    type: array
                  result:
                    nullable: true
                    properties:
                      id:
                        example: 023e105f4ecef8ad9ca31a8372d0c353
                        maxLength: 32
                        type: string
                    required:
                      - id
                    type: object
                  success:
                    description: Indicates the API call's success or failure.
                    example: true
                    type: boolean
                required:
                  - success
                  - errors
                  - messages
                type: object
          description: Request to purge cached content successfull.
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      errors:
                        example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                      messages:
                        example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                      result:
                        nullable: true
                        properties:
                          id:
                            example: 023e105f4ecef8ad9ca31a8372d0c353
                            maxLength: 32
                            type: string
                        required:
                          - id
                        type: object
                      success:
                        description: Indicates the API call's success or failure.
                        example: true
                        type: boolean
                    required:
                      - success
                      - errors
                      - messages
                    type: object
                  - properties:
                      errors:
                        allOf:
                          - example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                message:
                                  type: string
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                        example:
                          - code: 7003
                            message: No route for the URI
                        minLength: 1
                      messages:
                        allOf:
                          - example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                message:
                                  type: string
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                        example: []
                      result:
                        nullable: true
                        type: object
                      success:
                        description: Indicates the API call's success or failure.
                        example: false
                        type: boolean
                    required:
                      - success
                      - errors
                      - messages
                      - result
                    type: object
          description: Request to purge cached content failed.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Purge Cached Content
      tags:
        - Zone
      x-api-token-group:
        - Cache Purge
      x-cfPermissionsRequired:
        enum:
          - '#cache_purge:edit'
