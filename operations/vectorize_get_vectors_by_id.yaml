openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/vectorize/v2/indexes/{index_name}/get_by_ids:
    post:
      description: Get a set of vectors from an index by their vector identifiers.
      operationId: vectorize-get-vectors-by-id
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            description: Identifier
            example: 023e105f4ecef8ad9ca31a8372d0c353
            maxLength: 32
            readOnly: true
            type: string
            x-auditable: true
        - in: path
          name: index_name
          required: true
          schema:
            example: example-index
            pattern: ^([a-z]+[a-z0-9_-]*[a-z0-9]+)$
            type: string
            x-auditable: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ids:
                  description: >-
                    A list of vector identifiers to retrieve from the index
                    indicated by the path.
                  example:
                    - 5121db81354a40c6aedc3fe1ace51c59
                    - f90eb49c2107486abdfd78c67e853430
                  items:
                    description: Identifier for a Vector
                    example: some-vector-id-023e105f4ecef8ad9ca31a8372d0c353
                    maxLength: 64
                    readOnly: true
                    type: string
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - properties:
                          errors:
                            example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                message:
                                  type: string
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                          messages:
                            example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                message:
                                  type: string
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                          result:
                            anyOf:
                              - type: object
                              - items: {}
                                type: array
                              - type: string
                          success:
                            description: Whether the API call was successful
                            enum:
                              - true
                            example: true
                            type: boolean
                        required:
                          - success
                          - errors
                          - messages
                          - result
                        type: object
                      - properties:
                          result:
                            anyOf:
                              - type: object
                              - type: string
                            nullable: true
                            type: object
                    type: object
                  - properties:
                      result:
                        description: Array of vectors with matching ids.
                        example:
                          - id: some-vector-id
                            metadata:
                              another-key: another-value
                              customer-id: 442
                            values:
                              - 0.812
                              - 0.621
                              - 0.261
                          - id: other-vector-id
                            metadata:
                              another-key: with-a-value
                              customer-id: 2151
                            namespace: namespaced
                            values:
                              - 0.961
                              - 0.751
                              - 0.661
                        items:
                          properties:
                            id:
                              description: Identifier for a Vector
                              example: some-vector-id-023e105f4ecef8ad9ca31a8372d0c353
                              maxLength: 64
                              readOnly: true
                              type: string
                            metadata:
                              type: object
                            namespace:
                              nullable: true
                              type: string
                            values:
                              items:
                                type: number
                              type: array
                          type: object
                        type: array
          description: Get Vectors By Identifier Response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - allOf:
                          - properties:
                              errors:
                                example: []
                                items:
                                  properties:
                                    code:
                                      minimum: 1000
                                      type: integer
                                    message:
                                      type: string
                                  required:
                                    - code
                                    - message
                                  type: object
                                  uniqueItems: true
                                type: array
                              messages:
                                example: []
                                items:
                                  properties:
                                    code:
                                      minimum: 1000
                                      type: integer
                                    message:
                                      type: string
                                  required:
                                    - code
                                    - message
                                  type: object
                                  uniqueItems: true
                                type: array
                              result:
                                anyOf:
                                  - type: object
                                  - items: {}
                                    type: array
                                  - type: string
                              success:
                                description: Whether the API call was successful
                                enum:
                                  - true
                                example: true
                                type: boolean
                            required:
                              - success
                              - errors
                              - messages
                              - result
                            type: object
                          - properties:
                              result:
                                anyOf:
                                  - type: object
                                  - type: string
                                nullable: true
                                type: object
                        type: object
                      - properties:
                          result:
                            nullable: true
                            type: object
                        type: object
                  - properties:
                      errors:
                        allOf:
                          - example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                message:
                                  type: string
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                        example:
                          - code: 7003
                            message: No route for the URI
                        minLength: 1
                      messages:
                        allOf:
                          - example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                message:
                                  type: string
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                        example: []
                      result:
                        enum:
                          - null
                        nullable: true
                        type: object
                      success:
                        description: Whether the API call was successful
                        enum:
                          - false
                        example: false
                        type: boolean
                    required:
                      - success
                      - errors
                      - messages
                      - result
                    type: object
          description: Get Vectors By Identifier Failure Response
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get Vectors By Identifier
      tags:
        - Vectorize
      x-api-token-group:
        - Vectorize Write
        - Vectorize Read
