openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/page_shield/connections:
    get:
      description: Lists all connections detected by Page Shield.
      operationId: page-shield-list-connections
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            description: Identifier
            example: 023e105f4ecef8ad9ca31a8372d0c353
            maxLength: 32
            readOnly: true
            type: string
            x-auditable: true
        - in: query
          name: exclude_urls
          schema:
            description: >
              Excludes connections whose URL contains one of the URL-encoded
              URLs separated by commas.
            example: blog.cloudflare.com,www.example
            type: string
        - in: query
          name: urls
          schema:
            description: >
              Includes connections whose URL contain one or more URL-encoded
              URLs separated by commas.
            example: blog.cloudflare.com,www.example
            type: string
        - in: query
          name: hosts
          schema:
            description: >
              Includes connections that match one or more URL-encoded hostnames
              separated by commas.


              Wildcards are supported at the start and end of each hostname to
              support starts with, ends with

              and contains. If no wildcards are used, results will be filtered
              by exact match
            example: blog.cloudflare.com,www.example*,*cloudflare.com
            type: string
        - in: query
          name: page
          schema:
            description: >
              The current page number of the paginated results.


              We additionally support a special value "all". When "all" is used,
              the API will return all the connections

              with the applied filters in a single page. This feature is
              best-effort and it may only work for zones with

              a low number of connections
            example: 2
            type: string
        - in: query
          name: per_page
          schema:
            description: The number of results per page.
            example: 100
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: order_by
          schema:
            description: The field used to sort returned connections.
            enum:
              - first_seen_at
              - last_seen_at
            example: first_seen_at
            type: string
        - in: query
          name: direction
          schema:
            description: The direction used to sort returned connections.
            enum:
              - asc
              - desc
            example: asc
            type: string
        - in: query
          name: prioritize_malicious
          schema:
            description: >-
              When true, malicious connections appear first in the returned
              connections.
            example: true
            type: boolean
        - in: query
          name: exclude_cdn_cgi
          schema:
            description: >-
              When true, excludes connections seen in a `/cdn-cgi` path from the
              returned connections. The default value is true.
            example: true
            type: boolean
        - in: query
          name: status
          schema:
            description: >-
              Filters the returned connections using a comma-separated list of
              connection statuses. Accepted values: `active`, `infrequent`, and
              `inactive`. The default value is `active`.
            example: active,inactive
            type: string
        - in: query
          name: page_url
          schema:
            description: >
              Includes connections that match one or more page URLs (separated
              by commas) where they were last seen


              Wildcards are supported at the start and end of each page URL to
              support starts with, ends with

              and contains. If no wildcards are used, results will be filtered
              by exact match
            example: example.com/page,*/checkout,example.com/*,*checkout*
            type: string
        - in: query
          name: export
          schema:
            description: Export the list of connections as a file.
            enum:
              - csv
            example: csv
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - properties:
                          errors:
                            example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                message:
                                  type: string
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                          messages:
                            example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                message:
                                  type: string
                              required:
                                - code
                                - message
                              type: object
                              uniqueItems: true
                            type: array
                          success:
                            description: Whether the API call was successful
                            enum:
                              - true
                            example: true
                            type: boolean
                        required:
                          - success
                        type: object
                      - properties:
                          result_info:
                            properties:
                              count:
                                description: >-
                                  Total number of results for the requested
                                  service
                                example: 1
                                type: number
                              page:
                                description: Current page within paginated list of results
                                example: 1
                                type: number
                              per_page:
                                description: Number of results per page of results
                                example: 20
                                type: number
                              total_count:
                                description: >-
                                  Total results available without any search
                                  parameters
                                example: 2000
                                type: number
                              total_pages:
                                description: Total number of pages
                                example: 100
                                type: number
                            required:
                              - page
                              - per_page
                              - count
                              - total_count
                              - total_pages
                            type: object
                        required:
                          - result_info
                    type: object
                  - properties:
                      result:
                        items:
                          properties:
                            added_at:
                              example: '2021-08-18T10:51:10.09615Z'
                              format: date-time
                              type: string
                            domain_reported_malicious:
                              example: false
                              type: boolean
                            first_page_url:
                              example: blog.cloudflare.com/page
                              type: string
                            first_seen_at:
                              example: '2021-08-18T10:51:08Z'
                              format: date-time
                              type: string
                            host:
                              example: blog.cloudflare.com
                              type: string
                            id:
                              description: Identifier
                              example: 023e105f4ecef8ad9ca31a8372d0c353
                              maxLength: 32
                              readOnly: true
                              type: string
                              x-auditable: true
                            last_seen_at:
                              example: '2021-09-02T09:57:54Z'
                              format: date-time
                              type: string
                            malicious_domain_categories:
                              example:
                                - Malware
                              items:
                                type: string
                              type: array
                            malicious_url_categories:
                              example:
                                - Malware
                              items:
                                type: string
                              type: array
                            page_urls:
                              example:
                                - blog.cloudflare.com/page1
                                - blog.cloudflare.com/page2
                              items:
                                type: string
                              type: array
                            url:
                              example: >-
                                https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js
                              type: string
                            url_contains_cdn_cgi_path:
                              example: false
                              type: boolean
                            url_reported_malicious:
                              example: false
                              type: boolean
                          required:
                            - id
                            - url
                            - added_at
                            - first_seen_at
                            - last_seen_at
                            - host
                            - url_contains_cdn_cgi_path
                        type: array
                    type: object
          description: List Page Shield connections response
        4XX:
          content:
            application/json:
              schema:
                properties:
                  errors:
                    example: []
                    items:
                      properties:
                        code:
                          minimum: 1000
                          type: integer
                        message:
                          type: string
                      required:
                        - code
                        - message
                      type: object
                      uniqueItems: true
                    type: array
                  messages:
                    example: []
                    items:
                      properties:
                        code:
                          minimum: 1000
                          type: integer
                        message:
                          type: string
                      required:
                        - code
                        - message
                      type: object
                      uniqueItems: true
                    type: array
                  result:
                    enum:
                      - null
                    nullable: true
                    type: object
                  success:
                    description: Whether the API call was successful
                    enum:
                      - false
                    example: false
                    type: boolean
                required:
                  - success
                  - errors
                type: object
          description: List Page Shield connections response failure
      security:
        - api_email: []
          api_key: []
      summary: List Page Shield connections
      tags:
        - Page Shield
      x-api-token-group:
        - Page Shield
        - Domain Page Shield Read
        - Domain Page Shield
        - Page Shield Read
        - Zone Settings Write
        - Zone Settings Read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: false
