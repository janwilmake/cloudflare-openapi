openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/stream/live_inputs:
    get:
      description: >-
        Lists the live inputs created for an account. To get the credentials
        needed to stream to a specific live input, request a single live input.
      operationId: stream-live-inputs-list-live-inputs
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            description: Identifier.
            example: 023e105f4ecef8ad9ca31a8372d0c353
            maxLength: 32
            type: string
            x-auditable: true
        - in: query
          name: include_counts
          schema:
            default: false
            description: >-
              Includes the total number of videos associated with the submitted
              query parameters.
            example: true
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      errors:
                        example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                      messages:
                        example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                      success:
                        description: Whether the API call was successful.
                        enum:
                          - true
                        example: true
                        type: boolean
                    required:
                      - success
                      - errors
                      - messages
                    type: object
                  - properties:
                      result:
                        properties:
                          liveInputs:
                            items:
                              properties:
                                created:
                                  description: >-
                                    The date and time the live input was
                                    created.
                                  example: '2014-01-02T02:20:00Z'
                                  format: date-time
                                  type: string
                                  x-auditable: true
                                deleteRecordingAfterDays:
                                  description: >-
                                    Indicates the number of days after which the
                                    live inputs recordings will be deleted. When
                                    a stream completes and the recording is
                                    ready, the value is used to calculate a
                                    scheduled deletion date for that recording.
                                    Omit the field to indicate no change, or
                                    include with a `null` value to remove an
                                    existing scheduled deletion.
                                  example: 45
                                  minimum: 30
                                  type: number
                                  x-auditable: true
                                meta:
                                  description: >-
                                    A user modifiable key-value store used to
                                    reference other systems of record for
                                    managing live inputs.
                                  example:
                                    name: test stream 1
                                  type: object
                                modified:
                                  description: >-
                                    The date and time the live input was last
                                    modified.
                                  example: '2014-01-02T02:20:00Z'
                                  format: date-time
                                  type: string
                                  x-auditable: true
                                uid:
                                  description: A unique identifier for a live input.
                                  example: 66be4bf738797e01e1fca35a7bdecdcd
                                  maxLength: 32
                                  type: string
                                  x-auditable: true
                            type: array
                          range:
                            description: >-
                              The total number of remaining live inputs based on
                              cursor position.
                            example: 1000
                            type: integer
                          total:
                            description: >-
                              The total number of live inputs that match the
                              provided filters.
                            example: 35586
                            type: integer
                        type: object
                    type: object
          description: List live inputs response.
        4XX:
          content:
            application/json:
              schema:
                properties:
                  errors:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example:
                      - code: 7003
                        message: No route for the URI
                    minLength: 1
                  messages:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            documentation_url:
                              type: string
                            message:
                              type: string
                            source:
                              properties:
                                pointer:
                                  type: string
                              type: object
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example: []
                  result:
                    enum:
                      - null
                    nullable: true
                    type: object
                  success:
                    description: Whether the API call was successful.
                    enum:
                      - false
                    example: false
                    type: boolean
                required:
                  - success
                  - errors
                  - messages
                  - result
                type: object
          description: List live inputs response failure.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: List live inputs
      tags:
        - Stream Live Inputs
      x-api-token-group:
        - Stream Write
        - Stream Read
