openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/event_notifications/r2/{bucket_name}/configuration/queues/{queue_id}:
    put:
      description: Create event notification rule.
      operationId: r2-put-event-notification-config
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            description: Queue ID.
            example: 11111aa1-11aa-111a-a1a1-a1a111a11a11
            maxLength: 32
            type: string
            x-auditable: true
        - in: path
          name: bucket_name
          required: true
          schema:
            description: Name of the bucket.
            example: example-bucket
            maxLength: 64
            minLength: 3
            pattern: ^[a-z0-9][a-z0-9-]*[a-z0-9]
            type: string
            x-auditable: true
        - in: path
          name: account_id
          required: true
          schema:
            description: Account ID.
            example: 023e105f4ecef8ad9ca31a8372d0c353
            maxLength: 32
            type: string
        - in: header
          name: cf-r2-jurisdiction
          schema:
            default: default
            description: >-
              Jurisdiction where objects in this bucket are guaranteed to be
              stored.
            enum:
              - default
              - eu
              - fedramp
            type: string
            x-auditable: true
            x-stainless-param: jurisdiction
      requestBody:
        content:
          application/json:
            schema:
              properties:
                rules:
                  description: Array of rules to drive notifications.
                  items:
                    properties:
                      actions:
                        description: >-
                          Array of R2 object actions that will trigger
                          notifications.
                        example:
                          - PutObject
                          - CopyObject
                        items:
                          enum:
                            - PutObject
                            - CopyObject
                            - DeleteObject
                            - CompleteMultipartUpload
                            - LifecycleDeletion
                          type: string
                          x-auditable: true
                        type: array
                        uniqueItems: true
                      description:
                        description: >-
                          A description that can be used to identify the event
                          notification rule after creation.
                        example: Notifications from source bucket to queue
                        type: string
                        x-auditable: true
                      prefix:
                        description: >-
                          Notifications will be sent only for objects with this
                          prefix.
                        example: img/
                        type: string
                        x-auditable: true
                      suffix:
                        description: >-
                          Notifications will be sent only for objects with this
                          suffix.
                        example: .jpeg
                        type: string
                        x-auditable: true
                    required:
                      - actions
                    type: object
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      errors:
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                      messages:
                        items:
                          type: string
                        type: array
                      result:
                        type: object
                      success:
                        description: Whether the API call was successful.
                        enum:
                          - true
                        type: boolean
                    required:
                      - success
                      - errors
                      - messages
                      - result
                    type: object
                  - type: object
          description: Create Configuration response.
        4XX:
          content:
            application/json:
              schema:
                properties:
                  errors:
                    items:
                      properties:
                        code:
                          minimum: 1000
                          type: integer
                        message:
                          type: string
                      required:
                        - code
                        - message
                      type: object
                      uniqueItems: true
                    type: array
                  messages:
                    items:
                      type: string
                    type: array
                  result:
                    enum:
                      - null
                    nullable: true
                    type: object
                  success:
                    description: Whether the API call was successful.
                    enum:
                      - false
                    example: false
                    type: boolean
                required:
                  - success
                  - errors
                  - messages
                  - result
                type: object
          description: Create Configuration failure.
      security:
        - api_token: []
      summary: Create Event Notification Rule
      tags:
        - R2 Bucket
      x-api-token-group:
        - Workers R2 Storage Write
