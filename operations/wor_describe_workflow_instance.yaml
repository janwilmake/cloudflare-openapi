openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/workflows/{workflow_name}/instances/{instance_id}:
    get:
      operationId: wor-describe-workflow-instance
      parameters:
        - in: path
          name: workflow_name
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9_][a-zA-Z0-9-_]*$
            type: string
        - in: path
          name: instance_id
          required: true
          schema:
            maxLength: 100
            minLength: 1
            pattern: ^[a-zA-Z0-9_][a-zA-Z0-9-_]*$
            type: string
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    items:
                      properties:
                        code:
                          type: number
                        message:
                          type: string
                      required:
                        - code
                        - message
                      type: object
                    type: array
                  messages:
                    items:
                      properties:
                        code:
                          type: number
                        message:
                          type: string
                      required:
                        - code
                        - message
                      type: object
                    type: array
                  result:
                    properties:
                      end:
                        format: date-time
                        nullable: true
                        type: string
                      error:
                        nullable: true
                        properties:
                          message:
                            type: string
                          name:
                            type: string
                        required:
                          - name
                          - message
                        type: object
                      output:
                        anyOf:
                          - type: string
                          - type: number
                      params:
                        type: object
                      queued:
                        format: date-time
                        type: string
                      start:
                        format: date-time
                        nullable: true
                        type: string
                      status:
                        enum:
                          - queued
                          - running
                          - paused
                          - errored
                          - terminated
                          - complete
                          - waitingForPause
                          - waiting
                        type: string
                      steps:
                        items:
                          anyOf:
                            - properties:
                                attempts:
                                  items:
                                    properties:
                                      end:
                                        format: date-time
                                        nullable: true
                                        type: string
                                      error:
                                        nullable: true
                                        properties:
                                          message:
                                            type: string
                                          name:
                                            type: string
                                        required:
                                          - name
                                          - message
                                        type: object
                                      start:
                                        format: date-time
                                        type: string
                                      success:
                                        nullable: true
                                        type: boolean
                                    required:
                                      - start
                                      - end
                                      - success
                                      - error
                                    type: object
                                  type: array
                                config:
                                  properties:
                                    retries:
                                      properties:
                                        backoff:
                                          enum:
                                            - constant
                                            - linear
                                            - exponential
                                          type: string
                                        delay:
                                          anyOf:
                                            - {}
                                            - type: number
                                        limit:
                                          type: number
                                      required:
                                        - limit
                                        - delay
                                      type: object
                                    timeout:
                                      anyOf:
                                        - {}
                                        - type: number
                                  required:
                                    - retries
                                    - timeout
                                  type: object
                                end:
                                  format: date-time
                                  nullable: true
                                  type: string
                                name:
                                  type: string
                                output:
                                  type: object
                                start:
                                  format: date-time
                                  type: string
                                success:
                                  nullable: true
                                  type: boolean
                                type:
                                  enum:
                                    - step
                                  type: string
                              required:
                                - name
                                - start
                                - end
                                - attempts
                                - config
                                - output
                                - success
                                - type
                              type: object
                            - properties:
                                end:
                                  format: date-time
                                  type: string
                                error:
                                  nullable: true
                                  properties:
                                    message:
                                      type: string
                                    name:
                                      type: string
                                  required:
                                    - name
                                    - message
                                  type: object
                                finished:
                                  type: boolean
                                name:
                                  type: string
                                start:
                                  format: date-time
                                  type: string
                                type:
                                  enum:
                                    - sleep
                                  type: string
                              required:
                                - name
                                - start
                                - end
                                - finished
                                - type
                                - error
                              type: object
                            - properties:
                                trigger:
                                  properties:
                                    source:
                                      type: string
                                  required:
                                    - source
                                  type: object
                                type:
                                  enum:
                                    - termination
                                  type: string
                              required:
                                - type
                                - trigger
                              type: object
                            - properties:
                                end:
                                  format: date-time
                                  type: string
                                error:
                                  nullable: true
                                  properties:
                                    message:
                                      type: string
                                    name:
                                      type: string
                                  required:
                                    - name
                                    - message
                                  type: object
                                finished:
                                  type: boolean
                                name:
                                  type: string
                                output:
                                  anyOf:
                                    - type: object
                                    - type: string
                                    - type: number
                                    - type: boolean
                                start:
                                  format: date-time
                                  type: string
                                type:
                                  enum:
                                    - waitForEvent
                                  type: string
                              required:
                                - name
                                - start
                                - end
                                - finished
                                - type
                                - output
                                - error
                              type: object
                        type: array
                      success:
                        nullable: true
                        type: boolean
                      trigger:
                        properties:
                          source:
                            enum:
                              - unknown
                              - api
                              - binding
                              - event
                              - cron
                            type: string
                        required:
                          - source
                        type: object
                      versionId:
                        format: uuid
                        type: string
                    required:
                      - params
                      - trigger
                      - versionId
                      - queued
                      - start
                      - end
                      - steps
                      - success
                      - error
                      - status
                      - output
                    type: object
                  result_info:
                    properties:
                      count:
                        type: number
                      page:
                        type: number
                      per_page:
                        type: number
                      total_count:
                        type: number
                    required:
                      - page
                      - per_page
                      - count
                      - total_count
                    type: object
                  success:
                    enum:
                      - true
                    type: boolean
                required:
                  - success
                  - errors
                  - result
                  - messages
                type: object
          description: Get all logs and status from the instance.
        '400':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    items:
                      properties:
                        code:
                          type: number
                        message:
                          type: string
                      required:
                        - code
                        - message
                      type: object
                    type: array
                  messages:
                    items:
                      type: string
                    type: array
                  result:
                    enum:
                      - null
                    nullable: true
                    type: object
                  success:
                    enum:
                      - false
                    type: boolean
                required:
                  - success
                  - messages
                  - errors
                  - result
                type: object
          description: Bad Request.
        '404':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    items:
                      properties:
                        code:
                          type: number
                        message:
                          type: string
                      required:
                        - code
                        - message
                      type: object
                    type: array
                  messages:
                    items:
                      type: string
                    type: array
                  result:
                    enum:
                      - null
                    nullable: true
                    type: object
                  success:
                    enum:
                      - false
                    type: boolean
                required:
                  - success
                  - messages
                  - errors
                  - result
                type: object
          description: Instance not found.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Get logs and status from instance
      tags:
        - Workflows
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.workers.write
          - com.cloudflare.api.workers.read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
