openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/d1/database/{database_id}:
    get:
      description: Returns the specified D1 database.
      operationId: cloudflare-d1-get-database
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            description: Account identifier tag.
            example: 023e105f4ecef8ad9ca31a8372d0c353
            maxLength: 32
            readOnly: true
            type: string
            x-auditable: true
        - in: path
          name: database_id
          required: true
          schema:
            oneOf:
              - description: D1 database identifier (UUID).
                example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                readOnly: true
                type: string
                x-auditable: true
              - description: D1 database name.
                example: my-database
                pattern: ^[a-z0-9][a-z0-9-_]*$
                type: string
                x-auditable: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      errors:
                        example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                      messages:
                        example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                      result:
                        type: object
                      success:
                        description: Whether the API call was successful
                        enum:
                          - true
                        example: true
                        type: boolean
                    required:
                      - success
                      - errors
                      - messages
                      - result
                    type: object
                  - properties:
                      result:
                        description: The details of the D1 database.
                        properties:
                          created_at:
                            description: >-
                              Specifies the timestamp the resource was created
                              as an ISO8601 string.
                            example: '2022-11-15T18:25:44.442097Z'
                            format: date-time
                            readOnly: true
                            type: string
                            x-auditable: true
                          file_size:
                            description: The D1 database's size, in bytes.
                            example: 12
                            type: number
                            x-auditable: true
                          name:
                            description: D1 database name.
                            example: my-database
                            pattern: ^[a-z0-9][a-z0-9-_]*$
                            type: string
                            x-auditable: true
                          num_tables:
                            example: 12
                            type: number
                            x-auditable: true
                          read_replication:
                            description: Configuration for D1 read replication.
                            properties:
                              mode:
                                description: >-
                                  The read replication mode for the database.
                                  Use 'auto' to create replicas and allow D1
                                  automatically place them around the world, or
                                  'disabled' to not use any database replicas
                                  (it can take a few hours for all replicas to
                                  be deleted).
                                enum:
                                  - auto
                                  - disabled
                                example: auto
                                type: string
                                x-auditable: true
                            required:
                              - mode
                            type: object
                          uuid:
                            description: D1 database identifier (UUID).
                            example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                            readOnly: true
                            type: string
                            x-auditable: true
                          version:
                            example: production
                            pattern: ^(alpha|beta|production)$
                            type: string
                            x-auditable: true
                        type: object
          description: Database details response
        4XX:
          content:
            application/json:
              schema:
                properties:
                  errors:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example:
                      - code: 7003
                        message: No route for the URI
                    minLength: 1
                  messages:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example: []
                  result:
                    enum:
                      - null
                    nullable: true
                    type: object
                  success:
                    description: Whether the API call was successful
                    enum:
                      - false
                    example: false
                    type: boolean
                required:
                  - success
                  - errors
                  - messages
                  - result
                type: object
          description: Database details response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get D1 Database
      tags:
        - D1
      x-api-token-group:
        - D1 Read
        - D1 Write
