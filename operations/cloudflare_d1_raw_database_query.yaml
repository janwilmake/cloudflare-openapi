openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/d1/database/{database_id}/raw:
    post:
      description: >-
        Returns the query result rows as arrays rather than objects. This is a
        performance-optimized version of the /query endpoint.
      operationId: cloudflare-d1-raw-database-query
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            description: Account identifier tag.
            example: 023e105f4ecef8ad9ca31a8372d0c353
            maxLength: 32
            readOnly: true
            type: string
            x-auditable: true
        - in: path
          name: database_id
          required: true
          schema:
            description: D1 database identifier (UUID).
            example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            readOnly: true
            type: string
            x-auditable: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                params:
                  example:
                    - firstParam
                    - secondParam
                  items:
                    type: string
                  type: array
                sql:
                  description: >-
                    Your SQL query. Supports multiple statements, joined by
                    semicolons, which will be executed as a batch.
                  example: SELECT * FROM myTable WHERE field = ? OR field = ?;
                  type: string
              required:
                - sql
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      errors:
                        example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                      messages:
                        example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                      result:
                        type: object
                      success:
                        description: Whether the API call was successful
                        enum:
                          - true
                        example: true
                        type: boolean
                    required:
                      - success
                      - errors
                      - messages
                      - result
                    type: object
                  - properties:
                      result:
                        items:
                          properties:
                            meta:
                              properties:
                                changed_db:
                                  description: >-
                                    Denotes if the database has been altered in
                                    some way, like deleting rows.
                                  type: boolean
                                  x-auditable: true
                                changes:
                                  description: >-
                                    Rough indication of how many rows were
                                    modified by the query, as provided by
                                    SQLite's `sqlite3_total_changes()`.
                                  type: number
                                  x-auditable: true
                                duration:
                                  description: >-
                                    The duration of the SQL query execution
                                    inside the database. Does not include any
                                    network communication.
                                  type: number
                                  x-auditable: true
                                last_row_id:
                                  description: >-
                                    The row ID of the last inserted row in a
                                    table with an `INTEGER PRIMARY KEY` as
                                    provided by SQLite. Tables created with
                                    `WITHOUT ROWID` do not populate this.
                                  type: number
                                  x-auditable: true
                                rows_read:
                                  description: >-
                                    Number of rows read during the SQL query
                                    execution, including indices (not all rows
                                    are necessarily returned).
                                  type: number
                                  x-auditable: true
                                rows_written:
                                  description: >-
                                    Number of rows written during the SQL query
                                    execution, including indices.
                                  type: number
                                  x-auditable: true
                                served_by_primary:
                                  description: >-
                                    Denotes if the query has been handled by the
                                    database primary instance.
                                  type: boolean
                                  x-auditable: true
                                served_by_region:
                                  description: >-
                                    Region location hint of the database
                                    instance that handled the query.
                                  enum:
                                    - WNAM
                                    - ENAM
                                    - WEUR
                                    - EEUR
                                    - APAC
                                    - OC
                                  example: EEUR
                                  type: string
                                  x-auditable: true
                                size_after:
                                  description: >-
                                    Size of the database after the query
                                    committed, in bytes.
                                  type: number
                                  x-auditable: true
                                timings:
                                  description: Various durations for the query.
                                  properties:
                                    sql_duration_ms:
                                      description: >-
                                        The duration of the SQL query execution
                                        inside the database. Does not include
                                        any network communication.
                                      type: number
                                      x-auditable: true
                                  type: object
                              type: object
                            results:
                              properties:
                                columns:
                                  items:
                                    type: string
                                  type: array
                                rows:
                                  items:
                                    items:
                                      anyOf:
                                        - type: number
                                        - type: string
                                        - type: object
                                    type: array
                                  type: array
                              type: object
                            success:
                              type: boolean
                          type: object
                        type: array
          description: Raw query response
        4XX:
          content:
            application/json:
              schema:
                properties:
                  errors:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example:
                      - code: 7003
                        message: No route for the URI
                    minLength: 1
                  messages:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                          uniqueItems: true
                        type: array
                    example: []
                  result:
                    enum:
                      - null
                    nullable: true
                    type: object
                  success:
                    description: Whether the API call was successful
                    enum:
                      - false
                    example: false
                    type: boolean
                required:
                  - success
                  - errors
                  - messages
                  - result
                type: object
          description: Query response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Raw D1 Database query
      tags:
        - D1
