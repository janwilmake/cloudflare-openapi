openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/storage/kv/namespaces/{namespace_id}/bulk/get:
    post:
      description: >-
        Retrieve up to 100 KV pairs from the namespace. Keys must contain
        text-based values. JSON values can optionally be parsed instead of being
        returned as a string value. Metadata can be included if `withMetadata`
        is true.
      operationId: workers-kv-namespace-get-multiple-key-value-pairs
      parameters:
        - in: path
          name: namespace_id
          required: true
          schema:
            description: Namespace identifier tag.
            example: 0f2ac74b498b48028cb68387c421e279
            maxLength: 32
            readOnly: true
            type: string
            x-auditable: true
        - in: path
          name: account_id
          required: true
          schema:
            description: Identifier.
            example: 023e105f4ecef8ad9ca31a8372d0c353
            maxLength: 32
            readOnly: true
            type: string
            x-auditable: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                keys:
                  description: Array of keys to retrieve (maximum of 100).
                  items:
                    description: >-
                      A key's name. The name may be at most 512 bytes. All
                      printable, non-whitespace characters are valid.
                    example: My-Key
                    maxLength: 512
                    type: string
                  maxItems: 100
                  type: array
                type:
                  default: text
                  description: Whether to parse JSON values in the response.
                  enum:
                    - text
                    - json
                  type: string
                withMetadata:
                  default: false
                  description: Whether to include metadata in the response.
                  type: boolean
              required:
                - keys
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - properties:
                          errors:
                            example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                message:
                                  type: string
                              required:
                                - code
                                - message
                              type: object
                            type: array
                            uniqueItems: true
                          messages:
                            example: []
                            items:
                              properties:
                                code:
                                  minimum: 1000
                                  type: integer
                                message:
                                  type: string
                              required:
                                - code
                                - message
                              type: object
                            type: array
                            uniqueItems: true
                          success:
                            description: Whether the API call was successful.
                            enum:
                              - true
                            example: true
                            type: boolean
                        required:
                          - success
                          - errors
                          - messages
                        type: object
                      - properties:
                          result:
                            nullable: true
                            type: object
                            x-stainless-empty-object: true
                        type: object
                  - properties:
                      result:
                        oneOf:
                          - properties:
                              values:
                                additionalProperties:
                                  description: The value associated with the key.
                                  oneOf:
                                    - type: string
                                    - type: number
                                    - type: boolean
                                    - additionalProperties: true
                                      type: object
                                description: >-
                                  Requested keys are paired with their values in
                                  an object.
                                example:
                                  key1: value1
                                  key2: value2
                                type: object
                            type: object
                          - properties:
                              values:
                                additionalProperties:
                                  nullable: true
                                  properties:
                                    expiration:
                                      description: >-
                                        Expires the key at a certain time,
                                        measured in number of seconds since the
                                        UNIX epoch.
                                      example: 1578435000
                                      type: number
                                    metadata:
                                      allOf:
                                        - anyOf:
                                            - type: string
                                            - type: number
                                            - type: integer
                                            - type: boolean
                                            - additionalProperties: true
                                              nullable: true
                                              type: object
                                            - items:
                                                $ref: '#/components/schemas/workers-kv_any'
                                              type: array
                                          x-stainless-override-schema:
                                            type: unknown
                                        - description: The metadata associated with the key.
                                    value:
                                      allOf:
                                        - anyOf:
                                            - type: string
                                            - type: number
                                            - type: integer
                                            - type: boolean
                                            - additionalProperties: true
                                              nullable: true
                                              type: object
                                            - items:
                                                $ref: '#/components/schemas/workers-kv_any'
                                              type: array
                                          x-stainless-override-schema:
                                            type: unknown
                                        - description: The value associated with the key.
                                  required:
                                    - value
                                    - metadata
                                  type: object
                                description: >-
                                  Requested keys are paired with their values
                                  and metadata in an object.
                                example:
                                  key1:
                                    expiration: 1577836800
                                    metadata:
                                      someMetadataKey: someMetadataValue
                                    value: value1
                                  key2:
                                    metadata:
                                      anotherKey: anotherValue
                                    value: value2
                                type: object
                            type: object
                    type: object
          description: Get multiple key-value pairs response.
        4XX:
          content:
            application/json:
              schema:
                properties:
                  errors:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                        type: array
                        uniqueItems: true
                    example:
                      - code: 7003
                        message: No route for the URI
                    minLength: 1
                  messages:
                    allOf:
                      - example: []
                        items:
                          properties:
                            code:
                              minimum: 1000
                              type: integer
                            message:
                              type: string
                          required:
                            - code
                            - message
                          type: object
                        type: array
                        uniqueItems: true
                    example: []
                  result:
                    nullable: true
                    type: object
                    x-stainless-empty-object: true
                  success:
                    description: Whether the API call was successful.
                    enum:
                      - false
                    example: false
                    type: boolean
                required:
                  - success
                  - errors
                  - messages
                  - result
                type: object
          description: Get multiple key-value pairs response failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get multiple key-value pairs
      tags:
        - Workers KV Namespace
      x-api-token-group:
        - Workers KV Storage Write
        - Workers KV Storage Read
components:
  schemas:
    workers-kv_any:
      anyOf:
        - type: string
        - type: number
        - type: integer
        - type: boolean
        - additionalProperties: true
          nullable: true
          type: object
        - items:
            $ref: '#/components/schemas/workers-kv_any'
          type: array
      x-stainless-override-schema:
        type: unknown
