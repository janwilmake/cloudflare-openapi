openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/dlp/limits:
    get:
      operationId: dlp-limits-get
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dlp_Limits'
                    type: object
          description: Limits retrieved successfully.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: Limits get failed.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Fetch limits associated with DLP for account
      tags:
        - DLP Settings
      x-api-token-group:
        - Zero Trust Read
        - Zero Trust Write
  /accounts/{account_id}/dlp/patterns/validate:
    post:
      description: >-
        Validates whether this pattern is a valid regular expression. Rejects it
        if

        the regular expression is too complex or can match an unbounded-length

        string. The regex will be rejected if it uses `*` or `+`. Bound the
        maximum

        number of characters that can be matched using a range, e.g. `{1,100}`.
      operationId: dlp-pattern-validate
      parameters:
        - description: Account ID.
          in: path
          name: account_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_RegexValidationQuery'
        description: Validation query.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dlp_RegexValidationResult'
                    type: object
          description: Validation response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: Failed to validate.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Validate a DLP regex pattern
      tags:
        - DLP Settings
      x-api-token-group:
        - Zero Trust Write
  /accounts/{account_id}/dlp/payload_log:
    get:
      operationId: dlp-payload-log-get
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dlp_PayloadLogSetting'
                    type: object
          description: Payload log settings.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: Failed to get payload log settings.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Get payload log settings
      tags:
        - DLP Settings
      x-api-token-group:
        - Zero Trust Read
        - Zero Trust Write
    put:
      operationId: dlp-payload-log-put
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_PayloadLogSettingUpdate'
        description: New payload log settings.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dlp_PayloadLogSetting'
                    type: object
          description: Payload log settings.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: Failed to set payload log settings.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Set payload log settings
      tags:
        - DLP Settings
      x-api-token-group:
        - Zero Trust Write
components:
  schemas:
    dlp_Limits:
      properties:
        max_dataset_cells:
          format: int64
          minimum: 0
          type: integer
      required:
        - max_dataset_cells
      type: object
    dlp_PayloadLogSetting:
      properties:
        public_key:
          nullable: true
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - updated_at
      type: object
    dlp_PayloadLogSettingUpdate:
      properties:
        public_key:
          nullable: true
          type: string
      type: object
    dlp_RegexValidationQuery:
      properties:
        max_match_bytes:
          description: >-
            Maximum number of bytes that the regular expression can match.


            If this is `null` then there is no limit on the length. Patterns can
            use

            `*` and `+`. Otherwise repeats should use a range `{m,n}` to
            restrict

            patterns to the length. If this field is missing, then a default
            length

            limit is used.


            Note that the length is specified in bytes. Since regular
            expressions

            use UTF-8 the pattern `.` can match up to 4 bytes. Hence `.{1,256}`

            has a maximum length of 1024 bytes.
          format: int32
          minimum: 0
          nullable: true
          type: integer
        regex:
          type: string
      required:
        - regex
      type: object
    dlp_RegexValidationResult:
      properties:
        valid:
          type: boolean
      required:
        - valid
      type: object
    dlp_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/dlp_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/dlp_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    dlp_api-response-single:
      allOf:
        - $ref: '#/components/schemas/dlp_api-response-common'
      type: object
