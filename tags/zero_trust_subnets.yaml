openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/zerotrust/subnets:
    get:
      description: Lists and filters subnets in an account.
      operationId: zero-trust-networks-subnets-list
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_account_id'
        - description: If set, only list subnets with the given name
          in: query
          name: name
          schema:
            $ref: '#/components/schemas/tunnel_subnet_query_name'
        - in: query
          name: comment
          schema:
            $ref: '#/components/schemas/tunnel_subnet_query_comment'
        - in: query
          name: network
          schema:
            allOf:
              - $ref: '#/components/schemas/tunnel_ip_network_encoded'
            description: >-
              If set, only list the subnet whose network exactly matches the
              given CIDR.
        - in: query
          name: existed_at
          schema:
            $ref: '#/components/schemas/tunnel_existed_at'
        - description: >-
            If set, only include subnets in the given address family - `v4` or
            `v6`
          in: query
          name: address_family
          schema:
            $ref: '#/components/schemas/tunnel_address_family'
        - in: query
          name: is_default_network
          schema:
            description: >-
              If `true`, only include default subnets. If `false`, exclude
              default subnets subnets. If not set, all subnets will be included.
            type: boolean
        - in: query
          name: is_deleted
          schema:
            description: >-
              If `true`, only include deleted subnets. If `false`, exclude
              deleted subnets. If not set, all subnets will be included.
            type: boolean
        - in: query
          name: sort_order
          schema:
            description: >-
              Sort order of the results. `asc` means oldest to newest, `desc`
              means newest to oldest. If not set, they will not be in any
              particular order.
            enum:
              - asc
              - desc
            type: string
        - in: query
          name: subnet_types
          schema:
            description: If set, the types of subnets to include, separated by comma.
            enum:
              - cloudflare_source
              - warp
            example: cloudflare_source,warp
            type: string
        - in: query
          name: per_page
          schema:
            $ref: '#/components/schemas/tunnel_per_page'
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/tunnel_page_number'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_subnet_response_collection'
          description: List subnets response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_subnet_response_collection'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
          description: List subnets response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
        - user_service_key: []
      summary: List Subnets
      tags:
        - Zero Trust Subnets
      x-api-token-group:
        - Cloudflare One Networks Write
        - Cloudflare One Networks Read
  /accounts/{account_id}/zerotrust/subnets/cloudflare_source/{address_family}:
    patch:
      description: Updates the Cloudflare Source subnet of the given address family
      operationId: zero-trust-networks-subnet-update-cloudflare-source
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_account_id'
        - in: path
          name: address_family
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_address_family'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  $ref: '#/components/schemas/tunnel_subnet_comment'
                name:
                  $ref: '#/components/schemas/tunnel_subnet_name'
                network:
                  $ref: '#/components/schemas/tunnel_subnet_ip_network'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_subnet_response_single'
          description: Update subnet response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_subnet_response_single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
          description: Update subnet response failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
        - user_service_key: []
      summary: Update Cloudflare Source Subnet
      tags:
        - Zero Trust Subnets
      x-api-token-group:
        - Cloudflare One Networks Write
components:
  schemas:
    tunnel_account_id:
      description: Cloudflare account ID
      example: 699d98642c564d2e855e9661899b7252
      maxLength: 32
      readOnly: true
      type: string
      x-auditable: true
    tunnel_address_family:
      description: IP address family, either `v4` (IPv4) or `v6` (IPv6)
      enum:
        - v4
        - v6
      example: v4
      type: string
    tunnel_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/tunnel_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/tunnel_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    tunnel_existed_at:
      description: >-
        If provided, include only resources that were created (and not deleted)
        before this time. URL encoded.
      example: 2019-10-12T07%3A20%3A50.52Z
      format: url-encoded-date-time
      type: string
    tunnel_ip_network_encoded:
      description: IP/CIDR range in URL-encoded format
      example: 172.16.0.0%2F16
      type: string
    tunnel_page_number:
      default: 1
      description: Page number of paginated results.
      minimum: 1
      type: number
    tunnel_per_page:
      description: Number of results to display.
      maximum: 1000
      minimum: 1
      type: number
    tunnel_subnet_comment:
      description: An optional description of the subnet.
      example: example comment
      type: string
      x-auditable: true
    tunnel_subnet_ip_network:
      description: The private IPv4 or IPv6 range defining the subnet, in CIDR notation.
      example: 100.64.0.0/12
      type: string
      x-auditable: true
    tunnel_subnet_name:
      description: A user-friendly name for the subnet.
      example: IPv4 Cloudflare Source IPs
      type: string
      x-auditable: true
    tunnel_subnet_query_comment:
      description: If set, only list subnets with the given comment.
      example: example%20comment
      type: string
    tunnel_subnet_query_name:
      description: If set, only list subnets with the given name
      example: IPv4%20Cloudflare%20Source%20IPs
      type: string
    tunnel_subnet_response_collection:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/tunnel_subnet'
              type: array
          type: object
    tunnel_subnet_response_single:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/tunnel_subnet'
          type: object
