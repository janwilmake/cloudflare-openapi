openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/dlp/entries:
    get:
      description: Lists all DLP entries in an account.
      operationId: dlp-entries-list-all-entries
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/dlp_Entry'
                        type: array
                    type: object
          description: List all entries response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: List all entries failure response.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: List all entries
      tags:
        - DLP Entries
      x-api-token-group:
        - Zero Trust Read
        - Zero Trust Write
    post:
      description: Creates a DLP custom entry.
      operationId: dlp-entries-create-entry
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_NewEntry'
        description: A new entry to create.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dlp_CustomEntry'
                    type: object
          description: Create new custom entry response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: Create new custom entry failure response.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Create custom entry
      tags:
        - DLP Entries
      x-api-token-group:
        - Zero Trust Write
  /accounts/{account_id}/dlp/entries/custom/{entry_id}:
    put:
      description: Updates a DLP custom entry.
      operationId: dlp-entries-update-custom-entry
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: entry_id
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_CustomEntryUpdate'
        description: Update to be applied to the entry.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dlp_CustomEntry'
                    type: object
          description: Update entry response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: Update entry failure response.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update custom entry
      tags:
        - DLP Entries
      x-api-token-group:
        - Zero Trust Write
  /accounts/{account_id}/dlp/entries/predefined/{entry_id}:
    put:
      description: Updates a DLP entry.
      operationId: dlp-entries-update-predefined-entry
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: entry_id
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_PredefinedEntryUpdate'
        description: settings to enable or disable predefined entry in owning profile
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dlp_PredefinedEntry'
                    type: object
          description: Update predefined entry response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: Update entry failure response.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update predefined entry
      tags:
        - DLP Entries
      x-api-token-group:
        - Zero Trust Write
  /accounts/{account_id}/dlp/entries/{entry_id}:
    get:
      description: Fetches a DLP entry by ID.
      operationId: dlp-entries-get-dlp-entry
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: entry_id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dlp_Entry'
                    type: object
          description: Get entry response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: Get entry failure response.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Get DLP Entry
      tags:
        - DLP Entries
      x-api-token-group:
        - Zero Trust Read
        - Zero Trust Write
    put:
      description: Updates a DLP entry.
      operationId: dlp-entries-update-entry
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: entry_id
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_EntryUpdate'
        description: Update to be applied to the entry.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dlp_Entry'
                    type: object
          description: Update entry response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: Update entry failure response.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update entry
      tags:
        - DLP Entries
      x-api-token-group:
        - Zero Trust Write
    delete:
      description: Deletes a DLP custom entry.
      operationId: dlp-entries-delete-entry
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: entry_id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dlp_Empty'
                    type: object
          description: Delete custom entry response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: Delete custom entry failure response.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Delete custom entry
      tags:
        - DLP Entries
      x-api-token-group:
        - Zero Trust Write
components:
  schemas:
    dlp_CustomEntry:
      properties:
        created_at:
          format: date-time
          type: string
        enabled:
          type: boolean
        id:
          format: uuid
          type: string
        name:
          type: string
        pattern:
          $ref: '#/components/schemas/dlp_Pattern'
        profile_id:
          format: uuid
          nullable: true
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - id
        - name
        - created_at
        - updated_at
        - pattern
        - enabled
      type: object
    dlp_CustomEntryUpdate:
      allOf:
        - $ref: '#/components/schemas/dlp_CustomEntryUpdateType'
        - properties:
            enabled:
              type: boolean
          required:
            - enabled
          type: object
    dlp_Empty:
      nullable: true
      type: object
    dlp_Entry:
      oneOf:
        - allOf:
            - $ref: '#/components/schemas/dlp_CustomEntry'
            - properties:
                type:
                  enum:
                    - custom
                  type: string
              required:
                - type
              type: object
          title: Custom Entry
        - allOf:
            - $ref: '#/components/schemas/dlp_PredefinedEntry'
            - properties:
                type:
                  enum:
                    - predefined
                  type: string
              required:
                - type
              type: object
          title: Predefined Entry
        - allOf:
            - $ref: '#/components/schemas/dlp_IntegrationEntry'
            - properties:
                type:
                  enum:
                    - integration
                  type: string
              required:
                - type
              type: object
          title: Integration Entry
        - allOf:
            - $ref: '#/components/schemas/dlp_ExactDataEntry'
            - properties:
                type:
                  enum:
                    - exact_data
                  type: string
              required:
                - type
              type: object
          title: Exact Data Entry
        - allOf:
            - $ref: '#/components/schemas/dlp_DocumentFingerprintEntry'
            - properties:
                type:
                  enum:
                    - document_fingerprint
                  type: string
              required:
                - type
              type: object
          title: Document Fingerprint Entry
        - allOf:
            - $ref: '#/components/schemas/dlp_WordListEntry'
            - properties:
                type:
                  enum:
                    - word_list
                  type: string
              required:
                - type
              type: object
          title: Word List Entry
    dlp_EntryUpdate:
      allOf:
        - $ref: '#/components/schemas/dlp_EntryUpdateType'
        - properties:
            enabled:
              type: boolean
          required:
            - enabled
          type: object
    dlp_NewEntry:
      properties:
        enabled:
          type: boolean
        name:
          type: string
        pattern:
          $ref: '#/components/schemas/dlp_Pattern'
        profile_id:
          format: uuid
          type: string
      required:
        - name
        - profile_id
        - pattern
        - enabled
      type: object
    dlp_PredefinedEntry:
      properties:
        confidence:
          $ref: '#/components/schemas/dlp_EntryConfidence'
        enabled:
          type: boolean
        id:
          format: uuid
          type: string
        name:
          type: string
        profile_id:
          format: uuid
          nullable: true
          type: string
      required:
        - id
        - name
        - enabled
        - confidence
      type: object
    dlp_PredefinedEntryUpdate:
      properties:
        enabled:
          type: boolean
      required:
        - enabled
      type: object
    dlp_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/dlp_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/dlp_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    dlp_api-response-single:
      allOf:
        - $ref: '#/components/schemas/dlp_api-response-common'
      type: object
