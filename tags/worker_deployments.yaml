openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/workers/scripts/{script_name}/deployments:
    get:
      description: >-
        List of Worker Deployments. The first deployment in the list is the
        latest deployment actively serving traffic.
      operationId: worker-deployments-list-deployments
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - properties:
                      result:
                        properties:
                          deployments:
                            items:
                              $ref: '#/components/schemas/workers_deployment'
                            type: array
                        required:
                          - deployments
                        type: object
                    required:
                      - result
                    type: object
          description: List Deployments response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: List Deployments response failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: List Deployments
      tags:
        - Worker Deployments
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
    post:
      description: >-
        Deployments configure how [Worker
        Versions](https://developers.cloudflare.com/api/operations/worker-versions-list-versions)
        are deployed to traffic. A deployment can consist of one or two versions
        of a Worker.
      operationId: worker-deployments-create-deployment
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - description: >-
            If set to true, the deployment will be created even if normally
            blocked by something such rolling back to an older version when a
            secret has changed.
          in: query
          name: force
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers_deployment'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/workers_deployment'
                    required:
                      - result
                    type: object
          description: Create Deployment response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Create Deployment response failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Create Deployment
      tags:
        - Worker Deployments
      x-api-token-group:
        - Workers Scripts Write
  /accounts/{account_id}/workers/scripts/{script_name}/deployments/{deployment_id}:
    get:
      description: Get information about a Worker Deployment.
      operationId: worker-deployments-get-deployment
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - in: path
          name: deployment_id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/workers_deployment'
                    required:
                      - result
                    type: object
          description: Get Deployment response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Get Deployment response failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get Deployment
      tags:
        - Worker Deployments
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
    delete:
      description: >-
        Delete a Worker Deployment. The latest deployment, which is actively
        serving traffic, cannot be deleted. All other deployments can be
        deleted.
      operationId: worker-deployments-delete-deployment
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - in: path
          name: deployment_id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
          description: Delete Deployment response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Delete Deployment response failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Delete Deployment
      tags:
        - Worker Deployments
      x-api-token-group:
        - Workers Scripts Write
components:
  schemas:
    workers_api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/workers_messages'
        messages:
          $ref: '#/components/schemas/workers_messages'
        success:
          description: Whether the API call was successful.
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
      type: object
    workers_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/workers_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/workers_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    workers_deployment:
      properties:
        annotations:
          properties:
            workers/message:
              description: >-
                Human-readable message about the deployment. Truncated to 100
                bytes.
              example: Deploy bug fix.
              maxLength: 100
              type: string
              x-auditable: true
          type: object
        author_email:
          format: email
          readOnly: true
          type: string
          x-auditable: true
        created_on:
          format: date-time
          readOnly: true
          type: string
          x-auditable: true
        id:
          format: uuid
          readOnly: true
          type: string
          x-auditable: true
        source:
          example: api
          readOnly: true
          type: string
          x-auditable: true
        strategy:
          enum:
            - percentage
          type: string
          x-auditable: true
        versions:
          items:
            properties:
              percentage:
                example: 100
                maximum: 100
                minimum: 0.01
                type: number
                x-auditable: true
              version_id:
                format: uuid
                type: string
                x-auditable: true
            required:
              - version_id
              - percentage
            type: object
          type: array
          x-auditable: true
      required:
        - id
        - source
        - strategy
        - versions
        - created_on
      type: object
    workers_identifier:
      description: Identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      type: string
      x-auditable: true
    workers_script_name:
      description: Name of the script, used in URLs and route configuration.
      example: this-is_my_script-01
      pattern: ^[a-z0-9_][a-z0-9-_]*$
      type: string
      x-auditable: true
