openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/cache/cache_reserve:
    get:
      description: >-
        Increase cache lifetimes by automatically storing all cacheable files
        into Cloudflare's persistent object storage buckets. Requires Cache
        Reserve subscription. Note: using Tiered Cache with Cache Reserve is
        highly recommended to reduce Reserve operations costs. See the
        [developer
        docs](https://developers.cloudflare.com/cache/about/cache-reserve) for
        more information.
      operationId: zone-cache-settings-get-cache-reserve-setting
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      responses:
        '200':
          content:
            application/json:
              examples:
                'off':
                  $ref: '#/components/examples/cache-rules_cache_reserve_off'
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache-rules_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache-rules_cache_reserve_response_value
                type: object
          description: Get Cache Reserve setting response
        4XX:
          content:
            application/json:
              examples:
                Error:
                  $ref: '#/components/examples/cache-rules_dummy_error_response'
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Get Cache Reserve setting response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get Cache Reserve setting
      tags:
        - Zone Cache Settings
      x-api-token-group:
        - Zone Settings Write
        - Zone Settings Read
        - Zone Read
        - Zone Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: >-
        Increase cache lifetimes by automatically storing all cacheable files
        into Cloudflare's persistent object storage buckets. Requires Cache
        Reserve subscription. Note: using Tiered Cache with Cache Reserve is
        highly recommended to reduce Reserve operations costs. See the
        [developer
        docs](https://developers.cloudflare.com/cache/about/cache-reserve) for
        more information.
      operationId: zone-cache-settings-change-cache-reserve-setting
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/cache-rules_cache_reserve_value'
              required:
                - value
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                'on':
                  $ref: '#/components/examples/cache-rules_cache_reserve_on'
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache-rules_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache-rules_cache_reserve_response_value
                type: object
          description: Change Cache Reserve setting response
        4XX:
          content:
            application/json:
              examples:
                Denied:
                  $ref: >-
                    #/components/examples/cache-rules_cache_reserve_denied_clearing
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Change Cache Reserve setting response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Change Cache Reserve setting
      tags:
        - Zone Cache Settings
      x-api-token-group:
        - Zone Settings Write
        - Zone Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /zones/{zone_id}/cache/cache_reserve_clear:
    get:
      description: >-
        You can use Cache Reserve Clear to clear your Cache Reserve, but you
        must first disable Cache Reserve. In most cases, this will be
        accomplished within 24 hours. You cannot re-enable Cache Reserve while
        this process is ongoing. Keep in mind that you cannot undo or cancel
        this operation.
      operationId: zone-cache-settings-get-cache-reserve-clear
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      responses:
        '200':
          content:
            application/json:
              examples:
                Completed:
                  $ref: >-
                    #/components/examples/cache-rules_cache_reserve_clear_completed
                In-progress:
                  $ref: >-
                    #/components/examples/cache-rules_cache_reserve_clear_in_progress
              schema:
                allOf:
                  - $ref: '#/components/schemas/cache-rules_api-response-common'
                  - $ref: >-
                      #/components/schemas/cache-rules_cache_reserve_clear_response_value
                type: object
          description: Get Cache Reserve Clear response
        4XX:
          content:
            application/json:
              examples:
                Not found:
                  $ref: >-
                    #/components/examples/cache-rules_cache_reserve_clear_not_found
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Get Cache Reserve Clear failure response
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get Cache Reserve Clear
      tags:
        - Zone Cache Settings
      x-api-token-group:
        - Zone Settings Write
        - Zone Settings Read
        - Zone Read
        - Zone Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: >-
        You can use Cache Reserve Clear to clear your Cache Reserve, but you
        must first disable Cache Reserve. In most cases, this will be
        accomplished within 24 hours. You cannot re-enable Cache Reserve while
        this process is ongoing. Keep in mind that you cannot undo or cancel
        this operation.
      operationId: zone-cache-settings-start-cache-reserve-clear
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      requestBody:
        content:
          application/json:
            example: '{}'
        description: The request body is currently not used.
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                In-progress:
                  $ref: >-
                    #/components/examples/cache-rules_cache_reserve_clear_in_progress
              schema:
                allOf:
                  - $ref: '#/components/schemas/cache-rules_api-response-common'
                  - $ref: >-
                      #/components/schemas/cache-rules_cache_reserve_clear_response_value
                type: object
          description: Start Cache Reserve Clear response
        4XX:
          content:
            application/json:
              examples:
                Rejected:
                  $ref: >-
                    #/components/examples/cache-rules_cache_reserve_clear_rejected_cr_on
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Start Cache Reserve Clear failure response
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Start Cache Reserve Clear
      tags:
        - Zone Cache Settings
      x-api-token-group:
        - Zone Settings Write
        - Zone Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /zones/{zone_id}/cache/regional_tiered_cache:
    get:
      description: >-
        Instructs Cloudflare to check a regional hub data center on the way to
        your upper tier. This can help improve performance for smart and custom
        tiered cache topologies.
      operationId: zone-cache-settings-get-regional-tiered-cache-setting
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache-rules_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache-rules_regional_tiered_cache_response_value
                type: object
          description: Get Regional Tiered Cache setting response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Get Regional Tiered Cache setting response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get Regional Tiered Cache setting
      tags:
        - Zone Cache Settings
      x-api-token-group:
        - Zone Settings Write
        - Zone Settings Read
        - Zone Read
        - Zone Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    patch:
      description: >-
        Instructs Cloudflare to check a regional hub data center on the way to
        your upper tier. This can help improve performance for smart and custom
        tiered cache topologies.
      operationId: zone-cache-settings-change-regional-tiered-cache-setting
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/cache-rules_regional_tiered_cache_value'
              required:
                - value
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache-rules_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache-rules_regional_tiered_cache_response_value
                type: object
          description: Change Regional Tiered Cache setting response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Change Regional Tiered Cache setting response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Change Regional Tiered Cache setting
      tags:
        - Zone Cache Settings
      x-api-token-group:
        - Zone Settings Write
        - Zone Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  /zones/{zone_id}/cache/variants:
    get:
      description: >-
        Variant support enables caching variants of images with certain file
        extensions in addition to the original. This only applies when the
        origin server sends the 'Vary: Accept' response header. If the origin
        server sends 'Vary: Accept' but does not serve the variant requested,
        the response will not be cached. This will be indicated with BYPASS
        cache status in the response headers.
      operationId: zone-cache-settings-get-variants-setting
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache-rules_zone_cache_settings_response_single
                  - $ref: '#/components/schemas/cache-rules_variants_response_value'
                type: object
          description: Get variants setting response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Get variants setting response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get variants setting
      tags:
        - Zone Cache Settings
      x-api-token-group:
        - Zone Settings Write
        - Zone Settings Read
        - Zone Read
        - Zone Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    patch:
      description: >-
        Variant support enables caching variants of images with certain file
        extensions in addition to the original. This only applies when the
        origin server sends the 'Vary: Accept' response header. If the origin
        server sends 'Vary: Accept' but does not serve the variant requested,
        the response will not be cached. This will be indicated with BYPASS
        cache status in the response headers.
      operationId: zone-cache-settings-change-variants-setting
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  $ref: '#/components/schemas/cache-rules_variants_value'
              required:
                - value
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache-rules_zone_cache_settings_response_single
                  - $ref: '#/components/schemas/cache-rules_variants_response_value'
                type: object
          description: Change variants setting response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Change variants setting response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Change variants setting
      tags:
        - Zone Cache Settings
      x-api-token-group:
        - Zone Settings Write
        - Zone Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    delete:
      description: >-
        Variant support enables caching variants of images with certain file
        extensions in addition to the original. This only applies when the
        origin server sends the 'Vary: Accept' response header. If the origin
        server sends 'Vary: Accept' but does not serve the variant requested,
        the response will not be cached. This will be indicated with BYPASS
        cache status in the response headers.
      operationId: zone-cache-settings-delete-variants-setting
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache-rules_zone_cache_settings_delete_response_single
                  - properties:
                      result:
                        $ref: '#/components/schemas/cache-rules_variants'
                    type: object
                type: object
          description: Delete variants setting response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Delete variants setting response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Delete variants setting
      tags:
        - Zone Cache Settings
      x-api-token-group:
        - Zone Settings Write
        - Zone Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
components:
  schemas:
    cache-rules_api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/cache-rules_messages'
        messages:
          $ref: '#/components/schemas/cache-rules_messages'
        success:
          description: Whether the API call was successful
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
      type: object
    cache-rules_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/cache-rules_messages'
          example:
            - code: 7003
              message: No route for the URI
          items:
            type: object
          minLength: 1
          type: array
        messages:
          allOf:
            - $ref: '#/components/schemas/cache-rules_messages'
          example: []
          items:
            type: object
          type: array
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    cache-rules_cache_reserve_clear_response_value:
      properties:
        result:
          allOf:
            - $ref: '#/components/schemas/cache-rules_cache_reserve_clear'
            - properties:
                end_ts:
                  $ref: '#/components/schemas/cache-rules_cache_reserve_clear_end_ts'
                start_ts:
                  $ref: >-
                    #/components/schemas/cache-rules_cache_reserve_clear_start_ts
                state:
                  $ref: '#/components/schemas/cache-rules_cache_reserve_clear_state'
              required:
                - state
                - start_ts
              type: object
          type: object
      type: object
    cache-rules_cache_reserve_response_value:
      properties:
        result:
          allOf:
            - $ref: '#/components/schemas/cache-rules_cache_reserve'
            - properties:
                value:
                  $ref: '#/components/schemas/cache-rules_cache_reserve_value'
              required:
                - value
              type: object
          type: object
      type: object
    cache-rules_cache_reserve_value:
      default: 'off'
      description: Value of the Cache Reserve zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
      x-auditable: true
    cache-rules_identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
      x-auditable: true
    cache-rules_regional_tiered_cache_response_value:
      properties:
        result:
          allOf:
            - $ref: '#/components/schemas/cache-rules_regional_tiered_cache'
            - properties:
                value:
                  $ref: '#/components/schemas/cache-rules_regional_tiered_cache_value'
              required:
                - value
              type: object
          type: object
      type: object
    cache-rules_regional_tiered_cache_value:
      default: 'off'
      description: Value of the Regional Tiered Cache zone setting.
      enum:
        - 'on'
        - 'off'
      type: string
      x-auditable: true
    cache-rules_variants:
      allOf:
        - $ref: '#/components/schemas/cache-rules_base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - variants
              example: variants
              type: string
              x-auditable: true
          type: object
      description: >-
        Variant support enables caching variants of images with certain file
        extensions in addition to the original. This only applies when the
        origin server sends the 'Vary: Accept' response header. If the origin
        server sends 'Vary: Accept' but does not serve the variant requested,
        the response will not be cached. This will be indicated with BYPASS
        cache status in the response headers.
      title: Variants Caching
      type: object
    cache-rules_variants_response_value:
      properties:
        result:
          allOf:
            - $ref: '#/components/schemas/cache-rules_variants'
            - properties:
                value:
                  $ref: '#/components/schemas/cache-rules_variants_value'
              required:
                - value
              type: object
          type: object
      type: object
    cache-rules_variants_value:
      description: Value of the zone setting.
      properties:
        avif:
          description: >-
            List of strings with the MIME types of all the variants that should
            be served for avif.
          example:
            - image/webp
            - image/jpeg
          items:
            type: string
            x-auditable: true
          type: array
          uniqueItems: true
        bmp:
          description: >-
            List of strings with the MIME types of all the variants that should
            be served for bmp.
          example:
            - image/webp
            - image/jpeg
          items:
            type: string
            x-auditable: true
          type: array
          uniqueItems: true
        gif:
          description: >-
            List of strings with the MIME types of all the variants that should
            be served for gif.
          example:
            - image/webp
            - image/jpeg
          items:
            type: string
            x-auditable: true
          type: array
          uniqueItems: true
        jp2:
          description: >-
            List of strings with the MIME types of all the variants that should
            be served for jp2.
          example:
            - image/webp
            - image/avif
          items:
            type: string
            x-auditable: true
          type: array
          uniqueItems: true
        jpeg:
          description: >-
            List of strings with the MIME types of all the variants that should
            be served for jpeg.
          example:
            - image/webp
            - image/avif
          items:
            type: string
            x-auditable: true
          type: array
          uniqueItems: true
        jpg:
          description: >-
            List of strings with the MIME types of all the variants that should
            be served for jpg.
          example:
            - image/webp
            - image/avif
          items:
            type: string
            x-auditable: true
          type: array
          uniqueItems: true
        jpg2:
          description: >-
            List of strings with the MIME types of all the variants that should
            be served for jpg2.
          example:
            - image/webp
            - image/avif
          items:
            type: string
            x-auditable: true
          type: array
          uniqueItems: true
        png:
          description: >-
            List of strings with the MIME types of all the variants that should
            be served for png.
          example:
            - image/webp
            - image/avif
          items:
            type: string
            x-auditable: true
          type: array
          uniqueItems: true
        tif:
          description: >-
            List of strings with the MIME types of all the variants that should
            be served for tif.
          example:
            - image/webp
            - image/avif
          items:
            type: string
            x-auditable: true
          type: array
          uniqueItems: true
        tiff:
          description: >-
            List of strings with the MIME types of all the variants that should
            be served for tiff.
          example:
            - image/webp
            - image/avif
          items:
            type: string
            x-auditable: true
          type: array
          uniqueItems: true
        webp:
          description: >-
            List of strings with the MIME types of all the variants that should
            be served for webp.
          example:
            - image/jpeg
            - image/avif
          items:
            type: string
            x-auditable: true
          type: array
          uniqueItems: true
      type: object
    cache-rules_zone_cache_settings_delete_response_single:
      allOf:
        - $ref: '#/components/schemas/cache-rules_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/cache-rules_result-object-delete'
          type: object
      type: object
    cache-rules_zone_cache_settings_response_single:
      allOf:
        - $ref: '#/components/schemas/cache-rules_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/cache-rules_result-object'
          type: object
      type: object
  examples:
    cache-rules_cache_reserve_clear_completed:
      value:
        errors: []
        messages: []
        result:
          end_ts: '2023-10-02T12:00:00.12345Z'
          id: cache_reserve_clear
          start_ts: '2023-10-02T10:00:00.12345Z'
          state: Completed
        success: true
    cache-rules_cache_reserve_clear_in_progress:
      value:
        errors: []
        messages: []
        result:
          id: cache_reserve_clear
          start_ts: '2023-10-02T10:00:00.12345Z'
          state: In-progress
        success: true
    cache-rules_cache_reserve_clear_not_found:
      value:
        errors:
          - code: 1142
            message: >-
              Unable to retrieve cache_reserve_clear setting value. The zone
              setting does not exist because you never performed a Cache Reserve
              Clear operation.
        messages: []
        result: null
        success: false
    cache-rules_cache_reserve_clear_rejected_cr_on:
      value:
        errors:
          - code: 1152
            message: Turn off Cache Reserve sync to proceed with deletion.
        messages: []
        result: null
        success: false
    cache-rules_cache_reserve_denied_clearing:
      value:
        errors:
          - code: 1153
            message: >-
              Cache Reserve cannot be enabled because a deletion is already in
              progress.
        messages: []
        result: null
        success: false
    cache-rules_cache_reserve_off:
      value:
        errors: []
        messages: []
        result:
          editable: true
          id: cache_reserve
          value: 'off'
        success: true
    cache-rules_cache_reserve_on:
      value:
        errors: []
        messages: []
        result:
          editable: true
          id: cache_reserve
          value: 'on'
        success: true
    cache-rules_dummy_error_response:
      value:
        errors:
          - code: 12345
            message: Some error message
        messages: []
        result: null
        success: false
