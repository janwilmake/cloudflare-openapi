openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/email/routing/rules:
    get:
      description: Lists existing routing rules.
      operationId: email-routing-routing-rules-list-routing-rules
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
        - in: query
          name: page
          schema:
            default: 1
            description: Page number of paginated results.
            minimum: 1
            type: number
        - in: query
          name: per_page
          schema:
            default: 20
            description: Maximum number of results per page.
            maximum: 50
            minimum: 5
            type: number
        - in: query
          name: enabled
          schema:
            description: Filter by enabled routing rules.
            enum:
              - true
              - false
            example: true
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_rules_response_collection'
          description: List routing rules response
      security:
        - api_email: []
          api_key: []
      summary: List routing rules
      tags:
        - Email Routing routing rules
      x-api-token-group:
        - Email Routing Rules Write
        - Email Routing Rules Read
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.list
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: >-
        Rules consist of a set of criteria for matching emails (such as an email
        being sent to a specific custom email address) plus a set of actions to
        take on the email (like forwarding it to a specific destination
        address).
      operationId: email-routing-routing-rules-create-routing-rule
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/email_create_rule_properties'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_rule_response_single'
          description: Create routing rule response
      security:
        - api_email: []
          api_key: []
      summary: Create routing rule
      tags:
        - Email Routing routing rules
      x-api-token-group:
        - Email Routing Rules Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.create
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /zones/{zone_id}/email/routing/rules/catch_all:
    get:
      description: Get information on the default catch-all routing rule.
      operationId: email-routing-routing-rules-get-catch-all-rule
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_catch_all_rule_response_single'
          description: Get catch-all rule response
      security:
        - api_email: []
          api_key: []
      summary: Get catch-all rule
      tags:
        - Email Routing routing rules
      x-api-token-group:
        - Email Routing Rules Write
        - Email Routing Rules Read
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: >-
        Enable or disable catch-all routing rule, or change action to forward to
        specific destination address.
      operationId: email-routing-routing-rules-update-catch-all-rule
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/email_update_catch_all_rule_properties'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_catch_all_rule_response_single'
          description: Update catch-all rule response
      security:
        - api_email: []
          api_key: []
      summary: Update catch-all rule
      tags:
        - Email Routing routing rules
      x-api-token-group:
        - Email Routing Rules Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.update
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /zones/{zone_id}/email/routing/rules/{rule_identifier}:
    get:
      description: Get information for a specific routing rule already created.
      operationId: email-routing-routing-rules-get-routing-rule
      parameters:
        - in: path
          name: rule_identifier
          required: true
          schema:
            $ref: '#/components/schemas/email_rule_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_rule_response_single'
          description: Get routing rule response
      security:
        - api_email: []
          api_key: []
      summary: Get routing rule
      tags:
        - Email Routing routing rules
      x-api-token-group:
        - Email Routing Rules Write
        - Email Routing Rules Read
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Update actions and matches, or enable/disable specific routing rules.
      operationId: email-routing-routing-rules-update-routing-rule
      parameters:
        - in: path
          name: rule_identifier
          required: true
          schema:
            $ref: '#/components/schemas/email_rule_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/email_update_rule_properties'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_rule_response_single'
          description: Update routing rule response
      security:
        - api_email: []
          api_key: []
      summary: Update routing rule
      tags:
        - Email Routing routing rules
      x-api-token-group:
        - Email Routing Rules Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.update
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    delete:
      description: Delete a specific routing rule.
      operationId: email-routing-routing-rules-delete-routing-rule
      parameters:
        - in: path
          name: rule_identifier
          required: true
          schema:
            $ref: '#/components/schemas/email_rule_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_rule_response_single'
          description: Delete routing rule response
      security:
        - api_email: []
          api_key: []
      summary: Delete routing rule
      tags:
        - Email Routing routing rules
      x-api-token-group:
        - Email Routing Rules Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.api.account.zone.email.routing.rule.delete
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
components:
  schemas:
    email_catch_all_rule_response_single:
      allOf:
        - $ref: '#/components/schemas/email_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/email_catch_all_rule'
    email_create_rule_properties:
      properties:
        actions:
          $ref: '#/components/schemas/email_rule_actions'
        enabled:
          $ref: '#/components/schemas/email_rule_enabled'
        matchers:
          $ref: '#/components/schemas/email_rule_matchers'
        name:
          $ref: '#/components/schemas/email_rule_name'
        priority:
          $ref: '#/components/schemas/email_rule_priority'
      required:
        - actions
        - matchers
      type: object
    email_identifier:
      description: Identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      type: string
      x-auditable: true
    email_rule_identifier:
      description: Routing rule identifier.
      example: a7e6fb77503c41d8a7f3113c6918f10c
      maxLength: 32
      readOnly: true
      type: string
      x-auditable: true
    email_rule_response_single:
      allOf:
        - $ref: '#/components/schemas/email_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/email_rules'
    email_rules_response_collection:
      allOf:
        - $ref: '#/components/schemas/email_api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/email_rules'
              type: array
            result_info:
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 20
                total_count:
                  example: 1
              type: object
    email_update_catch_all_rule_properties:
      properties:
        actions:
          $ref: '#/components/schemas/email_rule_catchall-actions'
        enabled:
          $ref: '#/components/schemas/email_rule_enabled'
        matchers:
          $ref: '#/components/schemas/email_rule_catchall-matchers'
        name:
          $ref: '#/components/schemas/email_rule_name'
      required:
        - actions
        - matchers
      type: object
    email_update_rule_properties:
      properties:
        actions:
          $ref: '#/components/schemas/email_rule_actions'
        enabled:
          $ref: '#/components/schemas/email_rule_enabled'
        matchers:
          $ref: '#/components/schemas/email_rule_matchers'
        name:
          $ref: '#/components/schemas/email_rule_name'
        priority:
          $ref: '#/components/schemas/email_rule_priority'
      required:
        - actions
        - matchers
      type: object
