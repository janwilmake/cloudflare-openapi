openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/workers/dispatch/namespaces:
    get:
      description: Fetch a list of Workers for Platforms namespaces.
      operationId: namespace-worker-list
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_namespace-list-response'
          description: Fetch a list of Workers for Platforms namespaces.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Failure to get list of Workers for Platforms namespaces.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: List dispatch namespaces
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
    post:
      description: Create a new Workers for Platforms namespace.
      operationId: namespace-worker-create
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name of the dispatch namespace.
                  example: my-dispatch-namespace
                  type: string
                  x-auditable: true
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_namespace-single-response'
          description: Fetch a list of Workers for Platforms namespaces.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Failure to get list of Workers for Platforms namespaces.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Create dispatch namespace
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Scripts Write
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}:
    get:
      description: Get a Workers for Platforms namespace.
      operationId: namespace-worker-get-namespace
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_namespace-single-response'
          description: Get a Workers for Platforms namespace.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Failure to get Workers for Platforms namespace.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get dispatch namespace
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
    delete:
      description: Delete a Workers for Platforms namespace.
      operationId: namespace-worker-delete-namespace
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-null-result'
          description: Delete a Workers for Platforms namespace.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Failure to delete Workers for Platforms namespace.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Delete dispatch namespace
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Scripts Write
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}:
    get:
      description: >-
        Fetch information about a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-script-worker-details
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_namespace-script-response-single'
          description: Worker Details Response (Workers for Platforms).
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Worker Details Failure (Workers for Platforms).
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Worker Details
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
    put:
      description: >-
        Upload a worker module to a Workers for Platforms namespace. You can
        find more about the multipart metadata on our docs:
        https://developers.cloudflare.com/workers/configuration/multipart-upload-metadata/.
      operationId: namespace-worker-script-upload-worker-module
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      requestBody:
        $ref: '#/components/requestBodies/workers_script_upload'
      responses:
        '200':
          $ref: '#/components/responses/workers_200'
        4XX:
          $ref: '#/components/responses/workers_4XX'
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Upload Worker Module
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Scripts Write
    delete:
      description: >-
        Delete a worker from a Workers for Platforms namespace. This call has no
        response body on a successful delete.
      operationId: namespace-worker-script-delete-worker
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - description: >-
            If set to true, delete will not be stopped by associated service
            binding, durable object, or other binding. Any of these associated
            bindings/durable objects will be deleted along with the script.
          in: query
          name: force
          schema:
            type: boolean
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-null-result'
          description: Delete Worker response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Delete Worker response failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Delete Worker
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Scripts Write
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}/assets-upload-session:
    post:
      description: >-
        Start uploading a collection of assets for use in a Worker version. To
        learn more about the direct uploads of assets, see
        https://developers.cloudflare.com/workers/static-assets/direct-upload/.
      operationId: namespace-worker-script-update-create-assets-upload-session
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers_create-assets-upload-session-object'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/workers_create-assets-upload-session-response
          description: Create Assets Upload Session response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Create Assets Upload Session response failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Create Assets Upload Session
      tags:
        - Workers for Platforms
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}/bindings:
    get:
      description: >-
        Fetch script bindings from a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-get-script-bindings
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/workers_bindings'
                    required:
                      - result
                    type: object
          description: Fetch script bindings (Workers for Platforms).
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Fetch script bindings failure (Workers for Platforms).
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get Script Bindings
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}/content:
    get:
      description: >-
        Fetch script content from a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-get-script-content
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          content:
            string:
              schema:
                example: |
                  export default {
                    async fetch(request, env, ctx) {
                      return new Response("Hello, world!");
                    }
                  };
                type: string
          description: Get script content.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Get script content failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get Script Content
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
    put:
      description: >-
        Put script content for a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-put-script-content
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - description: >-
            The multipart name of a script upload part containing script content
            in service worker format. Alternative to including in a metadata
            part.
          in: header
          name: CF-WORKER-BODY-PART
          schema:
            type: string
        - description: >-
            The multipart name of a script upload part containing script content
            in es module format. Alternative to including in a metadata part.
          in: header
          name: CF-WORKER-MAIN-MODULE-PART
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            encoding:
              files:
                contentType: >-
                  application/javascript+module, text/javascript+module,
                  application/javascript, text/javascript, text/x-python,
                  text/x-python-requirement, application/wasm, text/plain,
                  application/octet-stream, application/source-map
            schema:
              properties:
                files:
                  description: >-
                    An array of modules (often JavaScript files) comprising a
                    Worker script. At least one module must be present and
                    referenced in the metadata as `main_module` or `body_part`
                    by filename.<br/>Possible Content-Type(s) are:
                    `application/javascript+module`, `text/javascript+module`,
                    `application/javascript`, `text/javascript`,
                    `text/x-python`, `text/x-python-requirement`,
                    `application/wasm`, `text/plain`,
                    `application/octet-stream`, `application/source-map`.
                  items:
                    format: binary
                    type: string
                  type: array
                  x-stainless-collection-type: set
                metadata:
                  description: >-
                    JSON encoded metadata about the uploaded parts and Worker
                    configuration.
                  properties:
                    body_part:
                      description: >-
                        Name of the part in the multipart request that contains
                        the script (e.g. the file adding a listener to the
                        `fetch` event). Indicates a `service worker syntax`
                        Worker.
                      example: worker.js
                      type: string
                    main_module:
                      description: >-
                        Name of the part in the multipart request that contains
                        the main module (e.g. the file exporting a `fetch`
                        handler). Indicates a `module syntax` Worker.
                      example: worker.js
                      type: string
                  type: object
              required:
                - metadata
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-response-single'
          description: Put script content (Workers for Platforms).
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Put script content failure (Workers for Platforms).
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Put Script Content
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Scripts Write
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}/secrets:
    get:
      description: >-
        List secrets bound to a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-list-script-secrets
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/workers_secret'
                        type: array
                    required:
                      - result
                    type: object
          description: List script secrets.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: List script secrets failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: List Script Secrets
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
    put:
      description: Add a secret to a script uploaded to a Workers for Platforms namespace.
      operationId: namespace-worker-put-script-secrets
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers_secret'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/workers_secret'
                    required:
                      - result
                    type: object
          description: Fetch script bindings (Workers for Platforms).
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Fetch script bindings failure (Workers for Platforms).
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Add script secret
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Scripts Write
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}/secrets/{secret_name}:
    get:
      description: >-
        Get a given secret binding (value omitted) on a script uploaded to a
        Workers for Platforms namespace.
      operationId: namespace-worker-get-script-secrets
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - in: path
          name: secret_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_secret_name'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/workers_secret'
                    required:
                      - result
                    type: object
          description: Get script secret (Workers for Platforms).
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Get script secret failure (Workers for Platforms).
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get secret binding
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
    delete:
      description: >-
        Remove a secret from a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-delete-script-secret
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - in: path
          name: secret_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_secret_name'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-null-result'
          description: Delete script secret binding (Workers for Platforms).
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Delete script secret failure (Workers for Platforms).
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Delete script secret
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Scripts Write
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}/settings:
    get:
      description: >-
        Get script settings from a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-get-script-settings
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/workers_script-and-version-settings-item
                    type: object
          description: Fetch script settings.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Fetch script settings failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get Script Settings
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
    patch:
      description: Patch script metadata, such as bindings.
      operationId: namespace-worker-patch-script-settings
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                settings:
                  $ref: >-
                    #/components/schemas/workers_script-and-version-settings-item
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/workers_script-and-version-settings-item
                    type: object
          description: Patch script settings.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Patch script settings failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Patch Script Settings
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Scripts Write
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}/tags:
    get:
      description: Fetch tags from a script uploaded to a Workers for Platforms namespace.
      operationId: namespace-worker-get-script-tags
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - properties:
                      result:
                        example:
                          - free
                          - customer
                        items:
                          $ref: '#/components/schemas/workers_tag'
                        type: array
                    type: object
          description: Fetch script tags.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Fetch script tags failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get Script Tags
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
    put:
      description: >-
        Put script tags for a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-put-script-tags
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers_tags'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - properties:
                      result:
                        example:
                          - my-tag
                        items:
                          $ref: '#/components/schemas/workers_tag'
                        type: array
                    required:
                      - result
                    type: object
          description: Fetch script tags.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Fetch script tags failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Put Script Tags
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Scripts Write
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}/tags/{tag}:
    put:
      description: >-
        Put a single tag on a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-put-script-tag
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - in: path
          name: tag
          required: true
          schema:
            $ref: '#/components/schemas/workers_tag'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-null-result'
          description: Put script tag.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Put script tag failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Put Script Tag
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Scripts Write
    delete:
      description: >-
        Delete script tag for a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-delete-script-tag
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: dispatch_namespace
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - in: path
          name: tag
          required: true
          schema:
            $ref: '#/components/schemas/workers_tag'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-null-result'
          description: Delete script tag.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Delete script tag failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Delete Script Tag
      tags:
        - Workers for Platforms
      x-api-token-group:
        - Workers Scripts Write
components:
  schemas:
    workers_api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/workers_messages'
        messages:
          $ref: '#/components/schemas/workers_messages'
        success:
          description: Whether the API call was successful.
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
      type: object
    workers_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/workers_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/workers_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    workers_api-response-null-result:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              enum:
                - null
              nullable: true
              type: object
          type: object
    workers_bindings:
      description: >-
        List of bindings attached to a Worker. You can find more about bindings
        on our docs:
        https://developers.cloudflare.com/workers/configuration/multipart-upload-metadata/#bindings.
      example:
        - name: MY_ENV_VAR
          text: my_data
          type: plain_text
      items:
        $ref: '#/components/schemas/workers_binding_item'
      type: array
      x-stainless-collection-type: set
    workers_create-assets-upload-session-object:
      properties:
        manifest:
          additionalProperties:
            $ref: '#/components/schemas/workers_manifest-value'
          description: >-
            A manifest ([path]: {hash, size}) map of files to upload. As an
            example, `/blog/hello-world.html` would be a valid path key.
          type: object
      required:
        - manifest
      type: object
    workers_create-assets-upload-session-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              properties:
                buckets:
                  description: The requests to make to upload assets.
                  items:
                    description: >-
                      The set of assets to include in each request while
                      uploading.
                    items:
                      description: The file hash to include in this bucket.
                      type: string
                    type: array
                    x-stainless-collection-type: set
                  type: array
                  x-stainless-collection-type: set
                jwt:
                  description: A JWT to use as authentication for uploading assets.
                  type: string
                  x-sensitive: true
              type: object
          type: object
    workers_dispatch_namespace_name:
      description: Name of the Workers for Platforms dispatch namespace.
      example: my-dispatch-namespace
      pattern: ^.+$
      type: string
      x-auditable: true
    workers_identifier:
      description: Identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      type: string
      x-auditable: true
    workers_namespace-list-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/workers_namespace-response'
              type: array
          type: object
    workers_namespace-script-response-single:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/workers_namespace-script-response'
          required:
            - result
          type: object
    workers_namespace-single-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/workers_namespace-response'
          type: object
    workers_script-and-version-settings-item:
      properties:
        bindings:
          allOf:
            - $ref: '#/components/schemas/workers_bindings'
            - default: []
              items:
                $ref: '#/components/schemas/workers_binding_item'
              type: array
              x-stainless-collection-type: set
        compatibility_date:
          allOf:
            - $ref: '#/components/schemas/workers_compatibility_date'
            - default: ''
              type: string
              x-auditable: true
        compatibility_flags:
          allOf:
            - $ref: '#/components/schemas/workers_compatibility_flags'
            - default: []
              items:
                type: string
                x-auditable: true
              type: array
              x-stainless-collection-type: set
        limits:
          $ref: '#/components/schemas/workers_limits'
        logpush:
          $ref: '#/components/schemas/workers_logpush'
        migrations:
          description: |
            Migrations to apply for Durable Objects associated with this Worker.
          oneOf:
            - $ref: '#/components/schemas/workers_single_step_migrations'
            - $ref: '#/components/schemas/workers_multiple_step_migrations'
          writeOnly: true
        observability:
          $ref: '#/components/schemas/workers_observability'
        placement:
          allOf:
            - $ref: '#/components/schemas/workers_placement_info_no_status'
            - default: {}
              type: object
        tags:
          allOf:
            - $ref: '#/components/schemas/workers_tags'
            - default: []
              items:
                type: string
                x-auditable: true
              type: array
              x-stainless-collection-type: set
        tail_consumers:
          allOf:
            - $ref: '#/components/schemas/workers_tail_consumers'
            - default: []
              items:
                $ref: '#/components/schemas/workers_tail_consumers_script'
              type: array
              x-stainless-collection-type: set
        usage_model:
          $ref: '#/components/schemas/workers_usage_model'
      type: object
    workers_script-response-single:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/workers_script-response'
          required:
            - result
          type: object
          x-cfLinkErrors:
            '10001': Unsupported or unexpected Content Type
            '10002': Unexpected internal server error
            '10003': Missing required URL parameter
            '10004': Malformed URL parameter
            '10006': Unparseable script body
            '10007': Resource not found (similar to HTTP 404)
            '10014': Internal error while attempting authorization checks
            '10015': The current account is not authorized to use workers
            '10018': Attempted to update a script where the e-tag does not match
            '10021': >-
              Script content failed validation checks, but was otherwise
              parseable
            '10023': Unauthorized access attempt
            '10027': Script body was too large
            '10075': Requires a Workers Paid plan
    workers_script_name:
      description: Name of the script, used in URLs and route configuration.
      example: this-is_my_script-01
      pattern: ^[a-z0-9_][a-z0-9-_]*$
      type: string
      x-auditable: true
    workers_secret:
      description: A secret value accessible through a binding.
      discriminator:
        mapping:
          secret_key: '#/components/schemas/workers_binding_kind_secret_key'
          secret_text: '#/components/schemas/workers_binding_kind_secret_text'
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/workers_binding_kind_secret_text'
        - $ref: '#/components/schemas/workers_binding_kind_secret_key'
      type: object
    workers_secret_name:
      description: A JavaScript variable name for the secret binding.
      example: mySecret
      readOnly: true
      type: string
      x-auditable: true
    workers_tag:
      description: Tag to help you manage your Worker.
      example: my-tag
      type: string
      x-auditable: true
    workers_tags:
      description: Tags to help you manage your Workers.
      items:
        $ref: '#/components/schemas/workers_tag'
      type: array
      x-stainless-collection-type: set
  responses:
    workers_200:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/workers_script-response-upload-single'
              - example:
                  errors: []
                  messages: []
                  result:
                    created_on: '2022-05-05T05:15:11.602148Z'
                    etag: >-
                      777f24a43bef5f69174aa69ceaf1dea67968d510a31d1vw3e49d34a0187c06d1
                    handlers:
                      - fetch
                    id: this-is_my_script-01
                    logpush: false
                    modified_on: '2022-05-20T19:02:56.446492Z'
                    placement_mode: smart
                    startup_time_ms: 10
                    tail_consumers:
                      - environment: production
                        service: my-log-consumer
                    usage_model: standard
                  success: true
                type: object
      description: Upload Worker Module response.
    workers_4XX:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/workers_api-response-common-failure'
      description: Upload Worker Module response failure.
  requestBodies:
    workers_script_upload:
      content:
        application/javascript:
          schema:
            description: >-
              Raw javascript content comprising a Worker. Must be in service
              worker syntax.
            example: >-
              addEventListener('fetch', (event) => event.respondWith(new
              Response('OK')))
            type: string
        multipart/form-data:
          encoding:
            files:
              contentType: >-
                application/javascript+module, text/javascript+module,
                application/javascript, text/javascript, text/x-python,
                text/x-python-requirement, application/wasm, text/plain,
                application/octet-stream, application/source-map
          schema:
            $ref: '#/components/schemas/workers_multipart-script'
        text/javascript:
          schema:
            description: >-
              Raw javascript content comprising a Worker. Must be in service
              worker syntax.
            example: >-
              addEventListener('fetch', (event) => event.respondWith(new
              Response('OK')))
            type: string
      required: true
