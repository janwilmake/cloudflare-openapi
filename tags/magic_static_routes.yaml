openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/magic/routes:
    get:
      description: List all Magic static routes.
      operationId: magic-static-routes-list-routes
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_routes_collection_response'
          description: List Routes response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_routes_collection_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
          description: List Routes response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: List Routes
      tags:
        - Magic Static Routes
      x-api-token-group:
        - Magic WAN Write
        - Magic WAN Read
        - Magic Transit Read
        - Magic Transit Write
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    post:
      description: >-
        Creates a new Magic static route. Use `?validate_only=true` as an
        optional query parameter to run validation only without persisting
        changes.
      operationId: magic-static-routes-create-routes
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_create_route_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_create_route_response'
          description: Create Routes response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_routes_collection_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
          description: Create Routes response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Create a Route
      tags:
        - Magic Static Routes
      x-api-token-group:
        - Magic WAN Write
        - Magic Transit Write
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: >-
        Update multiple Magic static routes. Use `?validate_only=true` as an
        optional query parameter to run validation only without persisting
        changes. Only fields for a route that need to be changed need be
        provided.
      operationId: magic-static-routes-update-many-routes
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_route_update_many_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_multiple_route_modified_response'
          description: Update Many Routes response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic_multiple_route_modified_response
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
          description: Update Many Routes response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update Many Routes
      tags:
        - Magic Static Routes
      x-api-token-group:
        - Magic WAN Write
        - Magic Transit Write
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    delete:
      description: Delete multiple Magic static routes.
      operationId: magic-static-routes-delete-many-routes
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_route_delete_many_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_multiple_route_delete_response'
          description: Delete Many Routes response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_multiple_route_delete_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
          description: Delete Many Routes response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Delete Many Routes
      tags:
        - Magic Static Routes
      x-api-token-group:
        - Magic WAN Write
        - Magic Transit Write
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
  /accounts/{account_id}/magic/routes/{route_id}:
    get:
      description: Get a specific Magic static route.
      operationId: magic-static-routes-route-details
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_route_single_response'
          description: Route Details response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_route_single_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
          description: Route Details response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Route Details
      tags:
        - Magic Static Routes
      x-api-token-group:
        - Magic WAN Write
        - Magic WAN Read
        - Magic Transit Read
        - Magic Transit Write
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    put:
      description: >-
        Update a specific Magic static route. Use `?validate_only=true` as an
        optional query parameter to run validation only without persisting
        changes.
      operationId: magic-static-routes-update-route
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_route_update_request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_route_modified_response'
          description: Update Route response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_route_modified_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
          description: Update Route response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update Route
      tags:
        - Magic Static Routes
      x-api-token-group:
        - Magic WAN Write
        - Magic Transit Write
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
    delete:
      description: Disable and remove a specific Magic static route.
      operationId: magic-static-routes-delete-route
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_route_deleted_response'
          description: Delete Route response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_route_deleted_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
          description: Delete Route response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Delete Route
      tags:
        - Magic Static Routes
      x-api-token-group:
        - Magic WAN Write
        - Magic Transit Write
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: false
        enterprise: true
        free: false
        pro: false
components:
  schemas:
    magic_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/magic_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/magic_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    magic_create_route_request:
      properties:
        description:
          $ref: '#/components/schemas/magic_description'
        nexthop:
          $ref: '#/components/schemas/magic_nexthop'
        prefix:
          $ref: '#/components/schemas/magic_prefix'
        priority:
          $ref: '#/components/schemas/magic_priority'
        scope:
          $ref: '#/components/schemas/magic_scope'
        weight:
          $ref: '#/components/schemas/magic_weight'
      required:
        - prefix
        - nexthop
        - priority
      type: object
    magic_create_route_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/magic_route'
    magic_identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    magic_multiple_route_delete_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                deleted:
                  example: true
                  type: boolean
                deleted_routes:
                  items:
                    $ref: '#/components/schemas/magic_route'
                  type: array
    magic_multiple_route_modified_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                modified:
                  example: true
                  type: boolean
                modified_routes:
                  items:
                    $ref: '#/components/schemas/magic_route'
                  type: array
    magic_route_delete_many_request:
      properties:
        routes:
          items:
            $ref: '#/components/schemas/magic_route_delete_id'
          type: array
      required:
        - routes
      type: object
    magic_route_deleted_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                deleted:
                  example: true
                  type: boolean
                deleted_route:
                  $ref: '#/components/schemas/magic_route'
              type: object
    magic_route_modified_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                modified:
                  example: true
                  type: boolean
                modified_route:
                  $ref: '#/components/schemas/magic_route'
              type: object
    magic_route_single_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                route:
                  $ref: '#/components/schemas/magic_route'
              type: object
    magic_route_update_many_request:
      properties:
        routes:
          items:
            $ref: '#/components/schemas/magic_route_update_single_request'
          type: array
      required:
        - routes
      type: object
    magic_route_update_request:
      allOf:
        - $ref: '#/components/schemas/magic_route_add_single_request'
    magic_routes_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                routes:
                  items:
                    $ref: '#/components/schemas/magic_route'
                  type: array
