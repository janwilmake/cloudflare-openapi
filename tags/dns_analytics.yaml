openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/dns_analytics/report:
    get:
      description: >-
        Retrieves a list of summarised aggregate metrics over a given time
        period.


        See [Analytics API
        properties](https://developers.cloudflare.com/dns/reference/analytics-api-properties/)
        for detailed information about the available query parameters.
      operationId: dns-analytics-table
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/dns-analytics_identifier'
        - in: query
          name: metrics
          schema:
            $ref: '#/components/schemas/dns-analytics_metrics'
        - in: query
          name: dimensions
          schema:
            $ref: '#/components/schemas/dns-analytics_dimensions'
        - in: query
          name: since
          schema:
            $ref: '#/components/schemas/dns-analytics_since'
        - in: query
          name: until
          schema:
            $ref: '#/components/schemas/dns-analytics_until'
        - in: query
          name: limit
          schema:
            $ref: '#/components/schemas/dns-analytics_limit'
        - in: query
          name: sort
          schema:
            $ref: '#/components/schemas/dns-analytics_sort'
        - in: query
          name: filters
          schema:
            $ref: '#/components/schemas/dns-analytics_filters'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns-analytics_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dns-analytics_report'
                    type: object
          description: Table response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/dns-analytics_api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/dns-analytics_report'
                        type: object
                  - $ref: >-
                      #/components/schemas/dns-analytics_api-response-common-failure
          description: Table response failure
      security:
        - api_email: []
          api_key: []
      summary: Table
      tags:
        - DNS Analytics
      x-api-token-group:
        - Analytics Read
      x-cfPermissionsRequired:
        enum:
          - '#analytics:read'
  /zones/{zone_id}/dns_analytics/report/bytime:
    get:
      description: >-
        Retrieves a list of aggregate metrics grouped by time interval.


        See [Analytics API
        properties](https://developers.cloudflare.com/dns/reference/analytics-api-properties/)
        for detailed information about the available query parameters.
      operationId: dns-analytics-by-time
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/dns-analytics_identifier'
        - in: query
          name: metrics
          schema:
            $ref: '#/components/schemas/dns-analytics_metrics'
        - in: query
          name: dimensions
          schema:
            $ref: '#/components/schemas/dns-analytics_dimensions'
        - in: query
          name: since
          schema:
            $ref: '#/components/schemas/dns-analytics_since'
        - in: query
          name: until
          schema:
            $ref: '#/components/schemas/dns-analytics_until'
        - in: query
          name: limit
          schema:
            $ref: '#/components/schemas/dns-analytics_limit'
        - in: query
          name: sort
          schema:
            $ref: '#/components/schemas/dns-analytics_sort'
        - in: query
          name: filters
          schema:
            $ref: '#/components/schemas/dns-analytics_filters'
        - in: query
          name: time_delta
          schema:
            $ref: '#/components/schemas/dns-analytics_time_delta'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns-analytics_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dns-analytics_report_bytime'
                    type: object
          description: By Time response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/dns-analytics_api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/dns-analytics_report_bytime'
                        type: object
                  - $ref: >-
                      #/components/schemas/dns-analytics_api-response-common-failure
          description: By Time response failure
      security:
        - api_email: []
          api_key: []
      summary: By Time
      tags:
        - DNS Analytics
      x-api-token-group:
        - Analytics Read
      x-cfPermissionsRequired:
        enum:
          - '#analytics:read'
components:
  schemas:
    dns-analytics_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/dns-analytics_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/dns-analytics_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    dns-analytics_api-response-single:
      allOf:
        - $ref: '#/components/schemas/dns-analytics_api-response-common'
      type: object
    dns-analytics_dimensions:
      description: A comma-separated list of dimensions to group results by.
      example: queryType
      type: string
    dns-analytics_filters:
      description: Segmentation filter in 'attribute operator value' format.
      example: responseCode==NOERROR,queryType==A
      type: string
    dns-analytics_identifier:
      description: Identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      type: string
      x-auditable: true
    dns-analytics_limit:
      default: 100000
      description: Limit number of returned metrics.
      example: 100
      type: integer
    dns-analytics_metrics:
      description: A comma-separated list of metrics to query.
      example: queryCount,uncachedCount
      type: string
    dns-analytics_report:
      allOf:
        - $ref: '#/components/schemas/dns-analytics_result'
        - properties:
            data:
              items:
                properties:
                  metrics:
                    description: >-
                      Array with one item per requested metric. Each item is a
                      single value.
                    items:
                      description: Nominal metric value.
                      type: number
                    type: array
                required:
                  - metrics
          required:
            - data
    dns-analytics_report_bytime:
      allOf:
        - $ref: '#/components/schemas/dns-analytics_result'
        - properties:
            data:
              items:
                properties:
                  metrics:
                    description: >-
                      Array with one item per requested metric. Each item is an
                      array of values, broken down by time interval.
                    items:
                      description: Nominal metric values, broken down by time interval.
                      items: {}
                      properties:
                        items:
                          description: Nominal metric value.
                          type: number
                      type: array
                    type: array
                required:
                  - metrics
            query:
              properties:
                time_delta:
                  $ref: '#/components/schemas/dns-analytics_time_delta'
              required:
                - time_delta
              type: object
            time_intervals:
              description: >
                Array of time intervals in the response data. Each interval is
                represented as an array containing two values: the start time,
                and the end time.
              items:
                description: >-
                  Array with exactly two items, representing the start and end
                  time (respectively) of this time interval.
                items:
                  description: Time value.
                  example: '2023-11-11T12:00:00Z'
                  format: date-time
                  type: string
                type: array
              type: array
          required:
            - time_intervals
            - query
            - data
    dns-analytics_since:
      description: Start date and time of requesting data period in ISO 8601 format.
      example: '2023-11-11T12:00:00Z'
      format: date-time
      type: string
    dns-analytics_sort:
      description: >-
        A comma-separated list of dimensions to sort by, where each dimension
        may be prefixed by - (descending) or + (ascending).
      example: +responseCode,-queryName
      type: string
    dns-analytics_time_delta:
      description: Unit of time to group data by.
      enum:
        - all
        - auto
        - year
        - quarter
        - month
        - week
        - day
        - hour
        - dekaminute
        - minute
      example: hour
      type: string
    dns-analytics_until:
      description: End date and time of requesting data period in ISO 8601 format.
      example: '2023-11-11T13:00:00Z'
      format: date-time
      type: string
