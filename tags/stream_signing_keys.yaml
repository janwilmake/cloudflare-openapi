openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/stream/keys:
    get:
      description: >-
        Lists the video ID and creation date and time when a signing key was
        created.
      operationId: stream-signing-keys-list-signing-keys
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_key_response_collection'
          description: List signing keys response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
          description: List signing keys response failure.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: List signing keys
      tags:
        - Stream Signing Keys
      x-api-token-group:
        - Stream Write
        - Stream Read
    post:
      description: >-
        Creates an RSA private key in PEM and JWK formats. Key files are only
        displayed once after creation. Keys are created, used, and deleted
        independently of videos, and every key can sign any video.
      operationId: stream-signing-keys-create-signing-keys
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_key_generation_response'
          description: Create signing keys response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
          description: Create signing keys response failure.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Create signing keys
      tags:
        - Stream Signing Keys
      x-api-token-group:
        - Stream Write
  /accounts/{account_id}/stream/keys/{identifier}:
    delete:
      description: Deletes signing keys and revokes all signed URLs generated with the key.
      operationId: stream-signing-keys-delete-signing-keys
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_deleted_response'
          description: Delete signing keys response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
          description: Delete signing keys response failure.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Delete signing keys
      tags:
        - Stream Signing Keys
      x-api-token-group:
        - Stream Write
components:
  schemas:
    stream_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/stream_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/stream_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    stream_deleted_response:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-single'
        - properties:
            result:
              example: ok
              type: string
          type: object
    stream_key_generation_response:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/stream_keys'
          type: object
    stream_key_response_collection:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-common'
        - properties:
            result:
              items:
                properties:
                  created:
                    $ref: '#/components/schemas/stream_signing_key_created'
                  id:
                    $ref: '#/components/schemas/stream_schemas-identifier'
                type: object
              type: array
          type: object
    stream_schemas-identifier:
      description: Identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      type: string
      x-auditable: true
