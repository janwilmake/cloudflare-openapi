openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/workers/services/{service_name}/environments/{environment_name}/content:
    get:
      description: Get script content from a worker with an environment.
      operationId: worker-environment-get-script-content
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: service_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_service'
        - in: path
          name: environment_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_environment'
      responses:
        '200':
          content:
            string:
              schema:
                example: |
                  export default {
                    async fetch(request, env, ctx) {
                      return new Response("Hello, world!");
                    }
                  };
                type: string
          description: Get script content.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Get script content failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get script content
      tags:
        - Worker Environment
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
    put:
      description: Put script content from a worker with an environment.
      operationId: worker-environment-put-script-content
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: service_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_service'
        - in: path
          name: environment_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_environment'
        - description: >-
            The multipart name of a script upload part containing script content
            in service worker format. Alternative to including in a metadata
            part.
          in: header
          name: CF-WORKER-BODY-PART
          schema:
            type: string
        - description: >-
            The multipart name of a script upload part containing script content
            in es module format. Alternative to including in a metadata part.
          in: header
          name: CF-WORKER-MAIN-MODULE-PART
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            encoding:
              files:
                contentType: >-
                  application/javascript+module, text/javascript+module,
                  application/javascript, text/javascript, text/x-python,
                  text/x-python-requirement, application/wasm, text/plain,
                  application/octet-stream, application/source-map
            schema:
              properties:
                files:
                  description: >-
                    An array of modules (often JavaScript files) comprising a
                    Worker script. At least one module must be present and
                    referenced in the metadata as `main_module` or `body_part`
                    by filename.<br/>Possible Content-Type(s) are:
                    `application/javascript+module`, `text/javascript+module`,
                    `application/javascript`, `text/javascript`,
                    `text/x-python`, `text/x-python-requirement`,
                    `application/wasm`, `text/plain`,
                    `application/octet-stream`, `application/source-map`.
                  items:
                    format: binary
                    type: string
                  type: array
                  x-stainless-collection-type: set
                metadata:
                  description: >-
                    JSON encoded metadata about the uploaded parts and Worker
                    configuration.
                  properties:
                    body_part:
                      description: >-
                        Name of the part in the multipart request that contains
                        the script (e.g. the file adding a listener to the
                        `fetch` event). Indicates a `service worker syntax`
                        Worker.
                      example: worker.js
                      type: string
                    main_module:
                      description: >-
                        Name of the part in the multipart request that contains
                        the main module (e.g. the file exporting a `fetch`
                        handler). Indicates a `module syntax` Worker.
                      example: worker.js
                      type: string
                  type: object
              required:
                - metadata
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-response-single'
          description: Put script content.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Put script content failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Put script content
      tags:
        - Worker Environment
      x-api-token-group:
        - Workers Scripts Write
  /accounts/{account_id}/workers/services/{service_name}/environments/{environment_name}/settings:
    get:
      description: Get script settings from a worker with an environment.
      operationId: worker-script-environment-get-settings
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: service_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_service'
        - in: path
          name: environment_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_environment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-settings-response'
          description: Fetch script settings.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Fetch script settings failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get Script Settings
      tags:
        - Worker Environment
      x-api-token-group:
        - Workers Tail Read
        - Workers Scripts Write
        - Workers Scripts Read
    patch:
      description: Patch script metadata, such as bindings.
      operationId: worker-script-environment-patch-settings
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: service_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_service'
        - in: path
          name: environment_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_environment'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers_script-settings-response'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-settings-response'
          description: Patch script settings.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Patch script settings failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Patch Script Settings
      tags:
        - Worker Environment
components:
  schemas:
    workers_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/workers_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/workers_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    workers_environment:
      description: Optional environment if the Worker utilizes one.
      example: production
      type: string
      x-auditable: true
    workers_identifier:
      description: Identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      type: string
      x-auditable: true
    workers_script-response-single:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/workers_script-response'
          required:
            - result
          type: object
          x-cfLinkErrors:
            '10001': Unsupported or unexpected Content Type
            '10002': Unexpected internal server error
            '10003': Missing required URL parameter
            '10004': Malformed URL parameter
            '10006': Unparseable script body
            '10007': Resource not found (similar to HTTP 404)
            '10014': Internal error while attempting authorization checks
            '10015': The current account is not authorized to use workers
            '10018': Attempted to update a script where the e-tag does not match
            '10021': >-
              Script content failed validation checks, but was otherwise
              parseable
            '10023': Unauthorized access attempt
            '10027': Script body was too large
            '10075': Requires a Workers Paid plan
    workers_script-settings-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/workers_script-settings-item'
          required:
            - result
          type: object
    workers_service:
      description: Name of Worker to bind to.
      example: my-worker
      type: string
      x-auditable: true
