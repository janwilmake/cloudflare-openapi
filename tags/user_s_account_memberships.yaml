openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /memberships:
    get:
      description: List memberships of accounts the user can access.
      operationId: user'-s-account-memberships-list-memberships
      parameters:
        - in: query
          name: account.name
          schema:
            $ref: '#/components/schemas/iam_properties-name'
        - in: query
          name: page
          schema:
            default: 1
            description: Page number of paginated results.
            minimum: 1
            type: number
        - in: query
          name: per_page
          schema:
            default: 20
            description: Number of memberships per page.
            maximum: 50
            minimum: 5
            type: number
        - in: query
          name: order
          schema:
            description: Field to order memberships by.
            enum:
              - id
              - account.name
              - status
            example: status
            type: string
        - in: query
          name: direction
          schema:
            description: Direction to order memberships.
            enum:
              - asc
              - desc
            example: desc
            type: string
        - in: query
          name: name
          schema:
            $ref: '#/components/schemas/iam_properties-name'
        - in: query
          name: status
          schema:
            description: Status of this membership.
            enum:
              - accepted
              - pending
              - rejected
            example: accepted
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/iam_collection_membership_response'
                  - $ref: >-
                      #/components/schemas/iam_collection_membership_response_with_policies
          description: List Memberships response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_api-response-common-failure'
          description: List Memberships response failure
      security:
        - api_email: []
          api_key: []
      summary: List Memberships
      tags:
        - User's Account Memberships
      x-api-token-group:
        - Memberships Write
        - Memberships Read
  /memberships/{membership_id}:
    get:
      description: Get a specific membership.
      operationId: user'-s-account-memberships-membership-details
      parameters:
        - in: path
          name: membership_id
          required: true
          schema:
            $ref: '#/components/schemas/iam_membership_components-schemas-identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/iam_single_membership_response_with_policies
          description: Membership Details response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_api-response-common-failure'
          description: Membership Details response failure
      security:
        - api_email: []
          api_key: []
      summary: Membership Details
      tags:
        - User's Account Memberships
      x-api-token-group:
        - Memberships Write
        - Memberships Read
    put:
      description: Accept or reject this account invitation.
      operationId: user'-s-account-memberships-update-membership
      parameters:
        - in: path
          name: membership_id
          required: true
          schema:
            $ref: '#/components/schemas/iam_membership_components-schemas-identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status:
                  description: Whether to accept or reject this account invitation.
                  enum:
                    - accepted
                    - rejected
                  example: accepted
              required:
                - status
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/iam_single_membership_response_with_policies
          description: Update Membership response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_api-response-common-failure'
          description: Update Membership response failure
      security:
        - api_email: []
          api_key: []
      summary: Update Membership
      tags:
        - User's Account Memberships
      x-api-token-group:
        - Memberships Write
    delete:
      description: Remove the associated member from an account.
      operationId: user'-s-account-memberships-delete-membership
      parameters:
        - in: path
          name: membership_id
          required: true
          schema:
            $ref: '#/components/schemas/iam_membership_components-schemas-identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/iam_api-response-single'
                  - properties:
                      result:
                        properties:
                          id:
                            $ref: >-
                              #/components/schemas/iam_membership_components-schemas-identifier
                    type: object
          description: Delete Membership response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_api-response-common-failure'
          description: Delete Membership response failure
      security:
        - api_email: []
          api_key: []
      summary: Delete Membership
      tags:
        - User's Account Memberships
      x-api-token-group:
        - Memberships Write
components:
  schemas:
    iam_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/iam_schemas-messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/iam_schemas-messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    iam_api-response-single:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-common'
      type: object
    iam_collection_membership_response:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/iam_membership'
              type: array
          type: object
      title: memberships_with_roles
    iam_collection_membership_response_with_policies:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/iam_membership-with-policies'
              type: array
          type: object
      title: memberships_with_policies
    iam_membership_components-schemas-identifier:
      description: Membership identifier tag.
      example: 4536bcfad5faccb111b47003c79917fa
      maxLength: 32
      readOnly: true
      type: string
      x-auditable: true
    iam_properties-name:
      description: Account name
      example: Demo Account
      maxLength: 100
      type: string
      x-auditable: true
    iam_single_membership_response_with_policies:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/iam_membership-with-policies'
          type: object
      title: response_with_policies
