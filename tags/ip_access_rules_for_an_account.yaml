openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/firewall/access_rules/rules:
    get:
      description: >-
        Fetches IP Access rules of an account. These rules apply to all the
        zones in the account. You can filter the results using several optional
        parameters.
      operationId: ip-access-rules-for-an-account-list-ip-access-rules
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_account_identifier'
        - in: query
          name: mode
          schema:
            $ref: '#/components/schemas/firewall_schemas-mode'
        - in: query
          name: configuration.target
          schema:
            description: Defines the target to search in existing rules.
            enum:
              - ip
              - ip_range
              - asn
              - country
            example: ip
            type: string
        - in: query
          name: configuration.value
          schema:
            description: >-
              Defines the target value to search for in existing rules: an IP
              address, an IP address range, or a country code, depending on the
              provided `configuration.target`.

              Notes: You can search for a single IPv4 address, an IP address
              range with a subnet of '/16' or '/24', or a two-letter ISO-3166-1
              alpha-2 country code.
            example: 198.51.100.4
            type: string
        - in: query
          name: notes
          schema:
            description: >-
              Defines the string to search for in the notes of existing IP
              Access rules.

              Notes: For example, the string 'attack' would match IP Access
              rules with notes 'Attack 26/02' and 'Attack 27/02'. The search is
              case insensitive.
            example: my note
            type: string
        - in: query
          name: match
          schema:
            default: all
            description: >-
              Defines the search requirements. When set to `all`, all the search
              requirements must match. When set to `any`, only one of the search
              requirements has to match.
            enum:
              - any
              - all
            type: string
        - in: query
          name: page
          schema:
            description: Defines the requested page within paginated list of results.
            example: 1
            type: number
        - in: query
          name: per_page
          schema:
            description: Defines the maximum number of results requested.
            example: 20
            type: number
        - in: query
          name: order
          schema:
            description: Defines the field used to sort returned rules.
            enum:
              - configuration.target
              - configuration.value
              - mode
            example: mode
            type: string
        - in: query
          name: direction
          schema:
            description: Defines the direction used to sort returned rules.
            enum:
              - asc
              - desc
            example: desc
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall_response_collection'
          description: List IP Access rules response.
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewall_response_collection'
                  - $ref: '#/components/schemas/firewall_api-response-common-failure'
          description: List IP Access rules response failure.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: List IP Access rules
      tags:
        - IP Access rules for an account
      x-api-token-group:
        - Account Firewall Access Rules Write
        - Account Firewall Access Rules Read
      x-cfPermissionsRequired:
        enum:
          - '#waf:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: >-
        Creates a new IP Access rule for an account. The rule will apply to all
        zones in the account.


        Note: To create an IP Access rule that applies to a single zone, refer
        to the [IP Access rules for a zone](#ip-access-rules-for-a-zone)
        endpoints.
      operationId: ip-access-rules-for-an-account-create-an-ip-access-rule
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                configuration:
                  $ref: '#/components/schemas/firewall_configuration'
                mode:
                  $ref: '#/components/schemas/firewall_schemas-mode'
                notes:
                  $ref: '#/components/schemas/firewall_notes'
              required:
                - mode
                - configuration
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall_response_single'
          description: Create an IP Access rule response.
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewall_response_single'
                  - $ref: '#/components/schemas/firewall_api-response-common-failure'
          description: Create an IP Access rule response failure.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Create an IP Access rule
      tags:
        - IP Access rules for an account
      x-api-token-group:
        - Account Firewall Access Rules Write
      x-cfPermissionsRequired:
        enum:
          - '#waf:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /accounts/{account_id}/firewall/access_rules/rules/{rule_id}:
    get:
      description: Fetches the details of an IP Access rule defined at the account level.
      operationId: ip-access-rules-for-an-account-get-an-ip-access-rule
      parameters:
        - in: path
          name: rule_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_rule_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall_response_single'
          description: Get an IP Access rule response.
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewall_response_single'
                  - $ref: '#/components/schemas/firewall_api-response-common-failure'
          description: Get an IP Access rule response failure.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Get an IP Access rule
      tags:
        - IP Access rules for an account
      x-api-token-group:
        - Account Firewall Access Rules Write
        - Account Firewall Access Rules Read
      x-cfPermissionsRequired:
        enum:
          - '#waf:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: |-
        Updates an IP Access rule defined at the account level.

        Note: This operation will affect all zones in the account.
      operationId: ip-access-rules-for-an-account-update-an-ip-access-rule
      parameters:
        - in: path
          name: rule_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_rule_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewall_schemas-rule'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall_response_single'
          description: Update an IP Access rule response.
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewall_response_single'
                  - $ref: '#/components/schemas/firewall_api-response-common-failure'
          description: Update an IP Access rule response failure.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update an IP Access rule
      tags:
        - IP Access rules for an account
      x-api-token-group:
        - Account Firewall Access Rules Write
      x-cfPermissionsRequired:
        enum:
          - '#waf:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    delete:
      description: |-
        Deletes an existing IP Access rule defined at the account level.

        Note: This operation will affect all zones in the account.
      operationId: ip-access-rules-for-an-account-delete-an-ip-access-rule
      parameters:
        - in: path
          name: rule_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_rule_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall_api-response-single-id'
          description: Delete an IP Access rule response.
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewall_api-response-single-id'
                  - $ref: '#/components/schemas/firewall_api-response-common-failure'
          description: Delete an IP Access rule response failure.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Delete an IP Access rule
      tags:
        - IP Access rules for an account
      x-api-token-group:
        - Account Firewall Access Rules Write
      x-cfPermissionsRequired:
        enum:
          - '#waf:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
components:
  schemas:
    firewall_account_identifier:
      description: Defines an account identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      type: string
    firewall_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/firewall_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/firewall_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Defines whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    firewall_api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/firewall_api-response-common'
        - properties:
            result:
              nullable: true
              properties:
                id:
                  $ref: '#/components/schemas/firewall_identifier'
              required:
                - id
              type: object
          type: object
      type: object
    firewall_configuration:
      description: The rule configuration.
      oneOf:
        - $ref: '#/components/schemas/firewall_ip_configuration'
        - $ref: '#/components/schemas/firewall_ipv6_configuration'
        - $ref: '#/components/schemas/firewall_cidr_configuration'
        - $ref: '#/components/schemas/firewall_asn_configuration'
        - $ref: '#/components/schemas/firewall_country_configuration'
      type: object
    firewall_notes:
      description: >-
        An informative summary of the rule, typically used as a reminder or
        explanation.
      example: This rule is enabled because of an event that occurred on date X.
      type: string
      x-auditable: true
    firewall_response_collection:
      allOf:
        - $ref: '#/components/schemas/firewall_api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/firewall_schemas-rule'
              type: array
          type: object
    firewall_response_single:
      allOf:
        - $ref: '#/components/schemas/firewall_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/firewall_schemas-rule'
          type: object
    firewall_rule_identifier:
      description: Unique identifier for a rule.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      type: string
    firewall_schemas-mode:
      description: The action to apply to a matched request.
      enum:
        - block
        - challenge
        - whitelist
        - js_challenge
        - managed_challenge
      example: challenge
      type: string
      x-auditable: true
    firewall_schemas-rule:
      allOf:
        - $ref: '#/components/schemas/firewall_rule'
        - properties:
            scope:
              description: All zones owned by the user will have the rule applied.
              properties:
                email:
                  $ref: '#/components/schemas/firewall_email'
                id:
                  $ref: '#/components/schemas/firewall_identifier'
                type:
                  description: Defines the scope of the rule.
                  enum:
                    - user
                    - organization
                  example: user
                  readOnly: true
                  type: string
              readOnly: true
              type: object
          type: object
      required:
        - id
        - mode
        - allowed_modes
        - configuration
        - scope
      type: object
