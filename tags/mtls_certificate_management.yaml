openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/mtls_certificates:
    get:
      description: Lists all mTLS certificates.
      operationId: m-tls-certificate-management-list-m-tls-certificates
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_collection
          description: List mTLS certificates response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
          description: List mTLS certificates response failure
      security:
        - api_email: []
          api_key: []
      summary: List mTLS certificates
      tags:
        - mTLS Certificate Management
      x-api-token-group:
        - 'Account: SSL and Certificates Read'
        - 'Account: SSL and Certificates Write'
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: >-
        Upload a certificate that you want to use with mTLS-enabled Cloudflare
        services.
      operationId: m-tls-certificate-management-upload-m-tls-certificate
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ca:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_ca'
                certificates:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_schemas-certificates
                name:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_schemas-name
                private_key:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_components-schemas-private_key
              required:
                - certificates
                - ca
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_response_single_post
          description: Upload mTLS certificate response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_response_single_post
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
          description: Upload mTLS certificate response failure
      security:
        - api_email: []
          api_key: []
      summary: Upload mTLS certificate
      tags:
        - mTLS Certificate Management
      x-api-token-group:
        - 'Account: SSL and Certificates Write'
      x-cfPermissionsRequired:
        enum:
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /accounts/{account_id}/mtls_certificates/{mtls_certificate_id}:
    get:
      description: Fetches a single mTLS certificate.
      operationId: m-tls-certificate-management-get-m-tls-certificate
      parameters:
        - in: path
          name: mtls_certificate_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_single
          description: Get mTLS certificate response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
          description: Get mTLS certificate response failure
      security:
        - api_email: []
          api_key: []
      summary: Get mTLS certificate
      tags:
        - mTLS Certificate Management
      x-api-token-group:
        - 'Account: SSL and Certificates Read'
        - 'Account: SSL and Certificates Write'
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    delete:
      description: >-
        Deletes the mTLS certificate unless the certificate is in use by one or
        more Cloudflare services.
      operationId: m-tls-certificate-management-delete-m-tls-certificate
      parameters:
        - in: path
          name: mtls_certificate_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_single
          description: Delete mTLS certificate response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
          description: Delete mTLS certificate response failure
      security:
        - api_email: []
          api_key: []
      summary: Delete mTLS certificate
      tags:
        - mTLS Certificate Management
      x-api-token-group:
        - 'Account: SSL and Certificates Write'
      x-cfPermissionsRequired:
        enum:
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /accounts/{account_id}/mtls_certificates/{mtls_certificate_id}/associations:
    get:
      description: >-
        Lists all active associations between the certificate and Cloudflare
        services.
      operationId: m-tls-certificate-management-list-m-tls-certificate-associations
      parameters:
        - in: path
          name: mtls_certificate_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_association_response_collection
          description: List mTLS certificate associations response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_association_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
          description: List mTLS certificate associations response failure
      security:
        - api_email: []
          api_key: []
      summary: List mTLS certificate associations
      tags:
        - mTLS Certificate Management
      x-api-token-group:
        - 'Account: SSL and Certificates Read'
        - 'Account: SSL and Certificates Write'
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
components:
  schemas:
    tls-certificates-and-hostnames_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/tls-certificates-and-hostnames_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/tls-certificates-and-hostnames_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    tls-certificates-and-hostnames_association_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              items:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_associationObject
              type: array
    tls-certificates-and-hostnames_ca:
      description: Indicates whether the certificate is a CA or leaf certificate.
      example: true
      type: boolean
      x-auditable: true
    tls-certificates-and-hostnames_certificate_response_single_post:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              allOf:
                - $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_certificateObjectPost
              type: object
    tls-certificates-and-hostnames_components-schemas-private_key:
      description: >-
        The private key for the certificate. This field is only needed for
        specific use cases such as using a custom certificate with Zero Trust's
        block page.
      example: >-
        -----BEGIN PRIVATE KEY-----

        MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDEXDkcICRU3XBv9hiiPnBWIjgTQyowmVFxDr11mONgZB/cMYjE/OvQjvnpwNcOaSK16MOpAjNbELKRx2lZiVJaLRDCccqCxXwP/CrdRChcqGzo7mbNksMlcidrErb0LlEBKLFC2QjRmRKqB+YOs4TD8WsZu2S667A2fZmjRlaqOxFi1h62ee0P+TLU628UC/nl41JifSt5Evt7hMDHakemdwZblNYr2p6T3NQjdhjYXTtP4UmOGJBhJ7i7Kicg3d3CIgdTMbggSeGWqjndr4ldVnD96FN3cVT5uDFsn2CJXTFgdeBWoUnMS4VnUZzPWGf4vSBXC8qV7Ls+w46yT7T1AgMBAAECggEAQZnp/oqCeNPOR6l5S2L+1tfx0gWjZ78hJVteUpZ0iHSK7F6kKeOxyOird7vUXV0kmo+cJq+0hp0Ke4eam640FCpwKfYoSQ4/R3vgujGWJnaihCN5tv5sMet0XeJPuz5qE7ALoKCvwI6aXLHs20aAeZIDTQJ9QbGSGnJVzOWn+JDTidIgZpN57RpXfSAwnJPTQK/PN8i5z108hsaDOdEgGmxYZ7kYqMqzX20KXmth58LDfPixs5JGtS60iiKC/wOcGzkB2/AdTSojR76oEU77cANP/3zO25NG//whUdYlW0t0d7PgXxIeJe+xgYnamDQJx3qonVyt4H77ha0ObRAj9QKBgQDicZr+VTwFMnELP3a+FXGnjehRiuS1i7MXGKxNweCD+dFlML0FplSQS8Ro2n+d8lu8BBXGx0qm6VXu8Rhn7TAUL6q+PCgfarzxfIhacb/TZCqfieIHsMlVBfhV5HCXnk+kis0tuC/PRArcWTwDHJUJXkBhvkUsNswvQzavDPI7KwKBgQDd/WgLkj7A3X5fgIHZH/GbDSBiXwzKb+rF4ZCT2XFgG/OAW7vapfcX/w+v+5lBLyrocmOAS3PGGAhM5T3HLnUCQfnK4qgps1Lqibkc9Tmnsn60LanUjuUMsYv/zSw70tozbzhJ0pioEpWfRxRZBztO2Rr8Ntm7h6Fk701EXGNAXwKBgQCD1xsjy2J3sCerIdcz0u5qXLAPkeuZW+34m4/ucdwTWwc0gEz9lhsULFj9p4G351zLuiEnq+7mAWLcDJlmIO3mQt6JhiLiL9Y0T4pgBmxmWqKKYtAsJB0EmMY+1BNN44mBRqMxZFTJu1cLdhT/xstrOeoIPqytknYNanfTMZlzIwKBgHrLXe5oq0XMP8dcMneEcAUwsaU4pr6kQd3L9EmUkl5zl7J9C+DaxWAEuwzBw/iGutlxzRB+rD/7szu14wJ29EqXbDGKRzMp+se5/yfBjm7xEZ1hVPw7PwBShfqt57X/4Ktq7lwHnmH6RcGhc+P7WBc5iO/S94YAdIp8xOT3pf9JAoGAE0QkqJUY+5Mgr+fBO0VNV72ZoPveGpW+De59uhKAOnu1zljQCUtk59m6+DXfm0tNYKtawa5n8iN71Zh+s62xXSt3pYi1Y5CCCmv8Y4BhwIcPwXKk3zEvLgSHVTpC0bayA9aSO4bbZgVXa5w+Z0w/vvfp9DWo1IS3EnQRrz6WMYA=

        -----END PRIVATE KEY-----
      type: string
      x-sensitive: true
    tls-certificates-and-hostnames_identifier:
      description: Identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      type: string
    tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              items:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificateObject
              type: array
        - properties:
            result_info:
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 50
                total_count:
                  example: 1
                total_pages:
                  description: Total pages available of results
                  example: 1
                  type: number
              type: object
    tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_single:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              allOf:
                - $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificateObject
              type: object
    tls-certificates-and-hostnames_schemas-certificates:
      description: The uploaded root CA certificate.
      example: >-
        -----BEGIN CERTIFICATE-----

        MIIDmDCCAoCgAwIBAgIUKTOAZNjcXVZRj4oQt0SHsl1c1vMwDQYJKoZIhvcNAQELBQAwUTELMAkGA1UEBhMCVVMxFjAUBgNVBAgMDVNhbiBGcmFuY2lzY28xEzARBgNVBAcMCkNhbGlmb3JuaWExFTATBgNVBAoMDEV4YW1wbGUgSW5jLjAgFw0yMjExMjIxNjU5NDdaGA8yMTIyMTAyOTE2NTk0N1owUTELMAkGA1UEBhMCVVMxFjAUBgNVBAgMDVNhbiBGcmFuY2lzY28xEzARBgNVBAcMCkNhbGlmb3JuaWExFTATBgNVBAoMDEV4YW1wbGUgSW5jLjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMRcORwgJFTdcG/2GKI+cFYiOBNDKjCZUXEOvXWY42BkH9wxiMT869CO+enA1w5pIrXow6kCM1sQspHHaVmJUlotEMJxyoLFfA/8Kt1EKFyobOjuZs2SwyVyJ2sStvQuUQEosULZCNGZEqoH5g6zhMPxaxm7ZLrrsDZ9maNGVqo7EWLWHrZ57Q/5MtTrbxQL+eXjUmJ9K3kS+3uEwMdqR6Z3BluU1ivanpPc1CN2GNhdO0/hSY4YkGEnuLsqJyDd3cIiB1MxuCBJ4ZaqOd2viV1WcP3oU3dxVPm4MWyfYIldMWB14FahScxLhWdRnM9YZ/i9IFcLypXsuz7DjrJPtPUCAwEAAaNmMGQwHQYDVR0OBBYEFP5JzLUawNF+c3AXsYTEWHh7z2czMB8GA1UdIwQYMBaAFP5JzLUawNF+c3AXsYTEWHh7z2czMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMA0GCSqGSIb3DQEBCwUAA4IBAQBc+Be7NDhpE09y7hLPZGRPl1cSKBw4RI0XIv6rlbSTFs5EebpTGjhx/whNxwEZhB9HZ7111Oa1YlT8xkI9DshB78mjAHCKBAJ76moK8tkG0aqdYpJ4ZcJTVBB7l98Rvgc7zfTii7WemTy72deBbSeiEtXavm4EF0mWjHhQ5Nxpnp00Bqn5g1x8CyTDypgmugnep+xG+iFzNmTdsz7WI9T/7kDMXqB7M/FPWBORyS98OJqNDswCLF8bIZYwUBEe+bRHFomoShMzaC3tvim7WCb16noDkSTMlfKO4pnvKhpcVdSgwcruATV7y+W+Lvmz2OT/Gui4JhqeoTewsxndhDDE

        -----END CERTIFICATE-----
      type: string
    tls-certificates-and-hostnames_schemas-name:
      description: >-
        Optional unique name for the certificate. Only used for human
        readability.
      example: example_ca_cert
      type: string
      x-auditable: true
