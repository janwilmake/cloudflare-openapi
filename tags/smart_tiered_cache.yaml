openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/cache/tiered_cache_smart_topology_enable:
    get:
      description: >-
        Smart Tiered Cache dynamically selects the single closest upper tier for
        each of your website’s origins with no configuration required, using our
        in-house performance and routing data. Cloudflare collects latency data
        for each request to an origin, and uses the latency data to determine
        how well any upper-tier data center is connected with an origin. As a
        result, Cloudflare can select the data center with the lowest latency to
        be the upper-tier for an origin.
      operationId: smart-tiered-cache-get-smart-tiered-cache-setting
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache-rules_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache-rules_smart_tiered_cache_response_value
                type: object
          description: Get Smart Tiered Cache setting response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Get Smart Tiered Cache setting response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get Smart Tiered Cache setting
      tags:
        - Smart Tiered Cache
      x-api-token-group:
        - Zone Settings Write
        - Zone Settings Read
        - Zone Read
        - Zone Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: >-
        Smart Tiered Cache dynamically selects the single closest upper tier for
        each of your website’s origins with no configuration required, using our
        in-house performance and routing data. Cloudflare collects latency data
        for each request to an origin, and uses the latency data to determine
        how well any upper-tier data center is connected with an origin. As a
        result, Cloudflare can select the data center with the lowest latency to
        be the upper-tier for an origin.
      operationId: smart-tiered-cache-patch-smart-tiered-cache-setting
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cache-rules_smart_tiered_cache_patch'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache-rules_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache-rules_smart_tiered_cache_response_value
                type: object
          description: Patch Smart Tiered Cache setting response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Patch Smart Tiered Cache setting response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Patch Smart Tiered Cache setting
      tags:
        - Smart Tiered Cache
      x-api-token-group:
        - Zone Settings Write
        - Zone Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    delete:
      description: >-
        Smart Tiered Cache dynamically selects the single closest upper tier for
        each of your website’s origins with no configuration required, using our
        in-house performance and routing data. Cloudflare collects latency data
        for each request to an origin, and uses the latency data to determine
        how well any upper-tier data center is connected with an origin. As a
        result, Cloudflare can select the data center with the lowest latency to
        be the upper-tier for an origin.
      operationId: smart-tiered-cache-delete-smart-tiered-cache-setting
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache-rules_zone_cache_settings_delete_response_single
                  - properties:
                      result:
                        $ref: '#/components/schemas/cache-rules_smart_tiered_cache'
                    type: object
                type: object
          description: Delete Smart Tiered Cache setting response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Delete Smart Tiered Cache setting response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Delete Smart Tiered Cache setting
      tags:
        - Smart Tiered Cache
      x-api-token-group:
        - Zone Settings Write
        - Zone Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
components:
  schemas:
    cache-rules_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/cache-rules_messages'
          example:
            - code: 7003
              message: No route for the URI
          items:
            type: object
          minLength: 1
          type: array
        messages:
          allOf:
            - $ref: '#/components/schemas/cache-rules_messages'
          example: []
          items:
            type: object
          type: array
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    cache-rules_identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
      x-auditable: true
    cache-rules_smart_tiered_cache:
      allOf:
        - $ref: '#/components/schemas/cache-rules_base'
        - properties:
            id:
              description: ID of the zone setting.
              enum:
                - tiered_cache_smart_topology_enable
              example: tiered_cache_smart_topology_enable
              type: string
              x-auditable: true
          type: object
      title: Smart Tiered Cache
      type: object
    cache-rules_smart_tiered_cache_patch:
      description: Update enablement of Smart Tiered Cache
      properties:
        value:
          description: Enable or disable the Smart Tiered Cache
          enum:
            - 'on'
            - 'off'
          example: 'on'
          type: string
          x-auditable: true
      required:
        - value
      type: object
    cache-rules_smart_tiered_cache_response_value:
      properties:
        result:
          allOf:
            - $ref: '#/components/schemas/cache-rules_smart_tiered_cache'
            - properties:
                value:
                  $ref: '#/components/schemas/cache-rules_smart_tiered_cache_value'
              required:
                - value
              type: object
          type: object
      type: object
    cache-rules_zone_cache_settings_delete_response_single:
      allOf:
        - $ref: '#/components/schemas/cache-rules_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/cache-rules_result-object-delete'
          type: object
      type: object
    cache-rules_zone_cache_settings_response_single:
      allOf:
        - $ref: '#/components/schemas/cache-rules_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/cache-rules_result-object'
          type: object
      type: object
