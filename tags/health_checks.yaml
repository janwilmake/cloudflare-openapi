openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/healthchecks:
    get:
      description: List configured health checks.
      operationId: health-checks-list-health-checks
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
        - $ref: '#/components/parameters/healthchecks_page'
        - $ref: '#/components/parameters/healthchecks_per_page'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_response_collection'
          description: List Health Checks response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_response_collection'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
          description: List Health Checks response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: List Health Checks
      tags:
        - Health Checks
      x-api-token-group:
        - Health Checks Write
        - Health Checks Read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    post:
      description: Create a new health check.
      operationId: health-checks-create-health-check
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/healthchecks_query_healthcheck'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_single_response'
          description: Create Health Check response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_single_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
          description: Create Health Check response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Create Health Check
      tags:
        - Health Checks
      x-api-token-group:
        - Health Checks Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  /zones/{zone_id}/healthchecks/preview:
    post:
      description: Create a new preview health check.
      operationId: health-checks-create-preview-health-check
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/healthchecks_query_healthcheck'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_single_response'
          description: Create Preview Health Check response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_single_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
          description: Create Preview Health Check response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Create Preview Health Check
      tags:
        - Health Checks
      x-api-token-group:
        - Health Checks Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  /zones/{zone_id}/healthchecks/preview/{healthcheck_id}:
    get:
      description: Fetch a single configured health check preview.
      operationId: health-checks-health-check-preview-details
      parameters:
        - in: path
          name: healthcheck_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_single_response'
          description: Health Check Preview Details response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_single_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
          description: Health Check Preview Details response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Health Check Preview Details
      tags:
        - Health Checks
      x-api-token-group:
        - Health Checks Write
        - Health Checks Read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    delete:
      description: Delete a health check.
      operationId: health-checks-delete-preview-health-check
      parameters:
        - in: path
          name: healthcheck_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_id_response'
          description: Delete Preview Health Check response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_id_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
          description: Delete Preview Health Check response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Delete Preview Health Check
      tags:
        - Health Checks
      x-api-token-group:
        - Health Checks Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
  /zones/{zone_id}/healthchecks/{healthcheck_id}:
    get:
      description: Fetch a single configured health check.
      operationId: health-checks-health-check-details
      parameters:
        - in: path
          name: healthcheck_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_single_response'
          description: Health Check Details response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_single_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
          description: Health Check Details response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Health Check Details
      tags:
        - Health Checks
      x-api-token-group:
        - Health Checks Write
        - Health Checks Read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    put:
      description: Update a configured health check.
      operationId: health-checks-update-health-check
      parameters:
        - in: path
          name: healthcheck_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/healthchecks_query_healthcheck'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_single_response'
          description: Update Health Check response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_single_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
          description: Update Health Check response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Update Health Check
      tags:
        - Health Checks
      x-api-token-group:
        - Health Checks Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    patch:
      description: Patch a configured health check.
      operationId: health-checks-patch-health-check
      parameters:
        - in: path
          name: healthcheck_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/healthchecks_query_healthcheck'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_single_response'
          description: Patch Health Check response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_single_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
          description: Patch Health Check response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Patch Health Check
      tags:
        - Health Checks
      x-api-token-group:
        - Health Checks Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
    delete:
      description: Delete a health check.
      operationId: health-checks-delete-health-check
      parameters:
        - in: path
          name: healthcheck_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_id_response'
          description: Delete Health Check response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_id_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
          description: Delete Health Check response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Delete Health Check
      tags:
        - Health Checks
      x-api-token-group:
        - Health Checks Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: false
        pro: true
components:
  schemas:
    healthchecks_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/healthchecks_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/healthchecks_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    healthchecks_id_response:
      allOf:
        - $ref: '#/components/schemas/healthchecks_api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/healthchecks_identifier'
              type: object
    healthchecks_identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    healthchecks_query_healthcheck:
      properties:
        address:
          $ref: '#/components/schemas/healthchecks_address'
        check_regions:
          $ref: '#/components/schemas/healthchecks_check_regions'
        consecutive_fails:
          $ref: '#/components/schemas/healthchecks_consecutive_fails'
        consecutive_successes:
          $ref: '#/components/schemas/healthchecks_consecutive_successes'
        description:
          $ref: '#/components/schemas/healthchecks_description'
        http_config:
          $ref: '#/components/schemas/healthchecks_http_config'
        interval:
          $ref: '#/components/schemas/healthchecks_interval'
        name:
          $ref: '#/components/schemas/healthchecks_name'
        retries:
          $ref: '#/components/schemas/healthchecks_retries'
        suspended:
          $ref: '#/components/schemas/healthchecks_suspended'
        tcp_config:
          $ref: '#/components/schemas/healthchecks_tcp_config'
        timeout:
          $ref: '#/components/schemas/healthchecks_timeout'
        type:
          $ref: '#/components/schemas/healthchecks_type'
      required:
        - name
        - address
      type: object
    healthchecks_response_collection:
      allOf:
        - $ref: '#/components/schemas/healthchecks_api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/healthchecks_healthchecks'
              type: array
    healthchecks_single_response:
      allOf:
        - $ref: '#/components/schemas/healthchecks_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/healthchecks_healthchecks'
  parameters:
    healthchecks_page:
      description: Page number of paginated results.
      in: query
      name: page
      schema:
        default: 1
        minimum: 1
        type: number
    healthchecks_per_page:
      description: Maximum number of results per page. Must be a multiple of 5.
      in: query
      name: per_page
      schema:
        default: 25
        maximum: 1000
        minimum: 5
        type: number
