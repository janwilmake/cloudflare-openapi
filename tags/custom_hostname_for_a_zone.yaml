openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/custom_hostnames:
    get:
      description: List, search, sort, and filter all of your custom hostnames.
      operationId: custom-hostname-for-a-zone-list-custom-hostnames
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - in: query
          name: hostname
          schema:
            description: >-
              Fully qualified domain name to match against. This parameter
              cannot be used with the 'id' parameter.
            example: app.example.com
            maxLength: 255
            type: string
        - in: query
          name: id
          schema:
            description: >-
              Hostname ID to match against. This ID was generated and returned
              during the initial custom_hostname creation. This parameter cannot
              be used with the 'hostname' parameter.
            example: 0d89c70d-ad9f-4843-b99f-6cc0252067e9
            maxLength: 36
            minLength: 36
            type: string
        - in: query
          name: page
          schema:
            default: 1
            description: Page number of paginated results.
            minimum: 1
            type: number
        - in: query
          name: per_page
          schema:
            default: 20
            description: Number of hostnames per page.
            maximum: 50
            minimum: 5
            type: number
        - in: query
          name: order
          schema:
            default: ssl
            description: Field to order hostnames by.
            enum:
              - ssl
              - ssl_status
            example: ssl
        - in: query
          name: direction
          schema:
            description: Direction to order hostnames.
            enum:
              - asc
              - desc
            example: desc
        - in: query
          name: ssl
          schema:
            default: '0'
            description: Whether to filter hostnames based on if they have SSL enabled.
            enum:
              - 0
              - 1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_collection
          description: List Custom Hostnames response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
          description: List Custom Hostnames response failure
      security:
        - api_email: []
          api_key: []
      summary: List Custom Hostnames
      tags:
        - Custom Hostname for a Zone
      x-api-token-group:
        - SSL and Certificates Write
        - SSL and Certificates Read
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: >-
        Add a new custom hostname and request that an SSL certificate be issued
        for it. One of three validation methods—http, txt, email—should be used,
        with 'http' recommended if the CNAME is already in place (or will be
        soon). Specifying 'email' will send an email to the WHOIS contacts on
        file for the base domain plus hostmaster, postmaster, webmaster, admin,
        administrator. If http is used and the domain is not already pointing to
        the Managed CNAME host, the PATCH method must be used once it is (to
        complete validation).  Enable bundling of certificates using the
        custom_cert_bundle field. The bundling process requires the following
        condition One certificate in the bundle must use an RSA, and the other
        must use an ECDSA.
      operationId: custom-hostname-for-a-zone-create-custom-hostname
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                custom_metadata:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_custom_metadata
                hostname:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_hostname_post
                ssl:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_sslpost'
              required:
                - hostname
                - ssl
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
          description: Create Custom Hostname response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
          description: Create Custom Hostname response failure
      security:
        - api_email: []
          api_key: []
      summary: Create Custom Hostname
      tags:
        - Custom Hostname for a Zone
      x-api-token-group:
        - SSL and Certificates Write
      x-cfPermissionsRequired:
        enum:
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /zones/{zone_id}/custom_hostnames/{custom_hostname_id}:
    get:
      operationId: custom-hostname-for-a-zone-custom-hostname-details
      parameters:
        - in: path
          name: custom_hostname_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
          description: Custom Hostname Details response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
          description: Custom Hostname Details response failure
      security:
        - api_email: []
          api_key: []
      summary: Custom Hostname Details
      tags:
        - Custom Hostname for a Zone
      x-api-token-group:
        - SSL and Certificates Write
        - SSL and Certificates Read
      x-cfPermissionsRequired:
        enum:
          - '#ssl:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: >-
        Modify SSL configuration for a custom hostname. When sent with SSL
        config that matches existing config, used to indicate that hostname
        should pass domain control validation (DCV). Can also be used to change
        validation type, e.g., from 'http' to 'email'. Bundle an existing
        certificate with another certificate by using the "custom_cert_bundle"
        field. The bundling process supports combining certificates as long as
        the following condition is met. One certificate must use the RSA
        algorithm, and the other must use the ECDSA algorithm.
      operationId: custom-hostname-for-a-zone-edit-custom-hostname
      parameters:
        - in: path
          name: custom_hostname_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                custom_metadata:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_custom_metadata
                custom_origin_server:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_custom_origin_server
                custom_origin_sni:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_custom_origin_sni
                ssl:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_sslpost'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
          description: Edit Custom Hostname response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
          description: Edit Custom Hostname response failure
      security:
        - api_email: []
          api_key: []
      summary: Edit Custom Hostname
      tags:
        - Custom Hostname for a Zone
      x-api-token-group:
        - SSL and Certificates Write
      x-cfPermissionsRequired:
        enum:
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    delete:
      operationId: >-
        custom-hostname-for-a-zone-delete-custom-hostname-(-and-any-issued-ssl-certificates)
      parameters:
        - in: path
          name: custom_hostname_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_identifier
                type: object
          description: Delete Custom Hostname (and any issued SSL certificates) response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      id:
                        $ref: >-
                          #/components/schemas/tls-certificates-and-hostnames_identifier
                    type: object
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
          description: >-
            Delete Custom Hostname (and any issued SSL certificates) response
            failure
      security:
        - api_email: []
          api_key: []
      summary: Delete Custom Hostname (and any issued SSL certificates)
      tags:
        - Custom Hostname for a Zone
      x-api-token-group:
        - SSL and Certificates Write
      x-cfPermissionsRequired:
        enum:
          - '#ssl:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /zones/{zone_id}/custom_hostnames/{custom_hostname_id}/certificate_pack/{certificate_pack_id}/certificates/{certificate_id}:
    put:
      description: >-
        Replace a single custom certificate within a certificate pack that
        contains two bundled certificates. The replacement must adhere to the
        following constraints. You can only replace an RSA certificate with
        another RSA certificate or an ECDSA certificate with another ECDSA
        certificate.
      operationId: custom-hostname-for-a-zone-edit-custom-certificate-custom-hostname
      parameters:
        - in: path
          name: custom_hostname_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - in: path
          name: certificate_pack_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - in: path
          name: certificate_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/tls-certificates-and-hostnames_custom_cert_and_key
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
          description: Edit Custom Certificate In a Custom Hostname response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
          description: Edit Custom Certificate In a Custom Hostname response failure
      security:
        - api_email: []
          api_key: []
      summary: Replace Custom Certificate and Custom Key In Custom Hostname
      tags:
        - Custom Hostname for a Zone
      x-api-token-group:
        - SSL and Certificates Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    delete:
      description: >-
        Delete a single custom certificate from a certificate pack that contains
        two bundled certificates. Deletion is subject to the following
        constraints. You cannot delete a certificate if it is the only remaining
        certificate in the pack. At least one certificate must remain in the
        pack.
      operationId: >-
        custom-hostname-for-a-zone-delete_single_certificate_and_key_in_a_custom_hostname
      parameters:
        - in: path
          name: custom_hostname_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - in: path
          name: certificate_pack_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - in: path
          name: certificate_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                properties:
                  id:
                    $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_identifier
                type: object
          description: Delete Single Certificate and Key In a Custom Hostname response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      id:
                        $ref: >-
                          #/components/schemas/tls-certificates-and-hostnames_identifier
                    type: object
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
          description: >-
            Delete Single Certificate and Key In a Custom Hostname response
            failure
      security:
        - api_email: []
          api_key: []
      summary: Delete Single Certificate And Key For Custom Hostname
      tags:
        - Custom Hostname for a Zone
      x-api-token-group:
        - SSL and Certificates Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
components:
  schemas:
    tls-certificates-and-hostnames_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/tls-certificates-and-hostnames_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/tls-certificates-and-hostnames_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    tls-certificates-and-hostnames_custom_cert_and_key:
      properties:
        custom_certificate:
          description: If a custom uploaded certificate is used.
          example: |
            -----BEGIN CERTIFICATE-----
            MIIDdjCCAl6gAwIBAgIJAPnMg0Fs+/B0MA0GCSqGSIb3DQEBCwUAMFsx...
            -----END CERTIFICATE-----
          type: string
        custom_key:
          description: The key for a custom uploaded certificate.
          example: |
            -----BEGIN PRIVATE KEY-----
            MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC/SCB5...
            -----END PRIVATE KEY-----
          type: string
          x-sensitive: true
      required:
        - custom_certificate
        - custom_key
      type: object
    tls-certificates-and-hostnames_custom_hostname_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              items:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_custom-hostname
              type: array
    tls-certificates-and-hostnames_custom_hostname_response_single:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              allOf:
                - $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_custom-hostname
              type: object
    tls-certificates-and-hostnames_custom_metadata:
      additionalProperties:
        type: string
        x-auditable: true
      description: >-
        Unique key/value metadata for this hostname. These are per-hostname
        (customer) settings.
      type: object
    tls-certificates-and-hostnames_custom_origin_server:
      description: >-
        a valid hostname that’s been added to your DNS zone as an A, AAAA, or
        CNAME record.
      example: origin2.example.com
      type: string
      x-auditable: true
    tls-certificates-and-hostnames_custom_origin_sni:
      description: >-
        A hostname that will be sent to your custom origin server as SNI for TLS
        handshake. This can be a valid subdomain of the zone or custom origin
        server name or the string ':request_host_header:' which will cause the
        host header in the request to be used as SNI. Not configurable with
        default/fallback origin server.
      example: sni.example.com
      type: string
      x-auditable: true
    tls-certificates-and-hostnames_hostname_post:
      description: The custom hostname that will point to your hostname via CNAME.
      example: app.example.com
      maxLength: 255
      type: string
      x-auditable: true
    tls-certificates-and-hostnames_identifier:
      description: Identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      type: string
    tls-certificates-and-hostnames_sslpost:
      description: SSL properties used when creating the custom hostname.
      oneOf:
        - properties:
            bundle_method:
              default: ubiquitous
              description: >-
                A ubiquitous bundle has the highest probability of being
                verified everywhere, even by clients using outdated or unusual
                trust stores. An optimal bundle uses the shortest chain and
                newest intermediates. And the force bundle verifies the chain,
                but does not otherwise modify it.
              enum:
                - ubiquitous
                - optimal
                - force
              example: ubiquitous
              type: string
              x-auditable: true
            certificate_authority:
              $ref: >-
                #/components/schemas/tls-certificates-and-hostnames_certificate_authority
            cloudflare_branding:
              description: >-
                Whether or not to add Cloudflare Branding for the order.  This
                will add a subdomain of sni.cloudflaressl.com as the Common Name
                if set to true
              example: false
              type: boolean
              x-auditable: true
            custom_cert_bundle:
              $ref: >-
                #/components/schemas/tls-certificates-and-hostnames_custom_cert_bundle
            custom_certificate:
              description: If a custom uploaded certificate is used.
              example: >-
                -----BEGIN
                CERTIFICATE-----\nMIIFJDCCBAygAwIBAgIQD0ifmj/Yi5NP/2gdUySbfzANBgkqhkiG9w0BAQsFADBN\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMScwJQYDVQQDEx5E...SzSHfXp5lnu/3V08I72q1QNzOCgY1XeL4GKVcj4or6cT6tX6oJH7ePPmfrBfqI/O\nOeH8gMJ+FuwtXYEPa4hBf38M5eU5xWG7\n-----END
                CERTIFICATE-----\n
              type: string
              x-auditable: true
            custom_key:
              description: The key for a custom uploaded certificate.
              example: |
                -----BEGIN RSA PRIVATE KEY-----
                MIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG
                dtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn
                abIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid
                tnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py
                FxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE
                ewooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb
                HBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/
                axiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb
                +ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g
                +j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv
                KLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7
                9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo
                /WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu
                iacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9
                N2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe
                VAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB
                vULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U
                lySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR
                9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7
                mEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX
                dFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe
                PG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS
                fhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W
                qu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T
                lv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi
                -----END RSA PRIVATE KEY-----
              type: string
              x-sensitive: true
            method:
              description: Domain control validation (DCV) method used for this hostname.
              enum:
                - http
                - txt
                - email
              example: http
              type: string
              x-auditable: true
            settings:
              $ref: '#/components/schemas/tls-certificates-and-hostnames_sslsettings'
            type:
              description: >-
                Level of validation to be used for this hostname. Domain
                validation (dv) must be used.
              enum:
                - dv
              example: dv
              type: string
              x-auditable: true
            wildcard:
              description: Indicates whether the certificate covers a wildcard.
              example: false
              type: boolean
              x-auditable: true
          type: object
      type: object
