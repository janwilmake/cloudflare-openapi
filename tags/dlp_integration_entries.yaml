openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/dlp/entries/integration:
    post:
      description: >-
        Integration entries can't be created, this will update an existing
        integration entry

        This is needed for our generated terraform API
      operationId: dlp-entries-create-integration-entry
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_NewPredefinedEntry'
        description: >-
          This endpoint will update an existing integration entry. It is not
          possible to create new integration entries
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dlp_IntegrationEntry'
                    type: object
          description: Create integration entry response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: Create entry failure response.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Create integration entry
      tags:
        - DLP Integration Entries
      x-api-token-group:
        - Zero Trust Write
  /accounts/{account_id}/dlp/entries/integration/{entry_id}:
    put:
      description: Updates a DLP entry.
      operationId: dlp-entries-update-integration-entry
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: entry_id
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_PredefinedEntryUpdate'
        description: enable or disable integration entry in owning profile
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dlp_IntegrationEntry'
                    type: object
          description: Update integration entry response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: Update entry failure response.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update integration entry
      tags:
        - DLP Integration Entries
      x-api-token-group:
        - Zero Trust Write
    delete:
      description: >-
        This is a no-op as integration entires can't be deleted but is needed
        for our generated terraform API
      operationId: dlp-entries-delete-integration-entry
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: entry_id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/dlp_Empty'
                    type: object
          description: Delete integration entry response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-common-failure'
          description: Delete entry failure response.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Delete integration entry
      tags:
        - DLP Integration Entries
      x-api-token-group:
        - Zero Trust Write
components:
  schemas:
    dlp_Empty:
      nullable: true
      type: object
    dlp_IntegrationEntry:
      properties:
        created_at:
          format: date-time
          type: string
        enabled:
          type: boolean
        id:
          format: uuid
          type: string
        name:
          type: string
        profile_id:
          format: uuid
          nullable: true
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - id
        - name
        - created_at
        - updated_at
        - enabled
      type: object
    dlp_NewPredefinedEntry:
      description: >-
        Struct for creating a new predefined or integration entry. Predefined or
        integration entries

        can not be updated via the API so these fields will simply update the
        entry's settings
      properties:
        enabled:
          type: boolean
        entry_id:
          format: uuid
          type: string
        profile_id:
          description: >-
            This field is not actually used as the owning profile for a
            predefined entry is already set

            to a predefined profile
          format: uuid
          nullable: true
          type: string
      required:
        - enabled
        - entry_id
      type: object
    dlp_PredefinedEntryUpdate:
      properties:
        enabled:
          type: boolean
      required:
        - enabled
      type: object
    dlp_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/dlp_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/dlp_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    dlp_api-response-single:
      allOf:
        - $ref: '#/components/schemas/dlp_api-response-common'
      type: object
