openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/secrets_store/quota:
    get:
      description: Lists the number of secrets used in the account.
      operationId: secrets-store-quota
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secrets-store_quota_response'
          description: Usage and quota
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secrets-store_api-response-common-failure
          description: List store secrets response failure
      security:
        - api_email: []
          api_key: []
      summary: View secret usage
      tags:
        - Secrets Store
      x-api-token-group:
        - Secrets Store Write
        - Secrets Store Read
      x-cfPermissionsRequired:
        enum:
          - '#com.cloudflare.api.account.secrets-store.secret.read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /accounts/{account_id}/secrets_store/stores:
    get:
      description: Lists all the stores in an account
      operationId: secrets-store-list
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_account_identifier'
        - $ref: '#/components/parameters/secrets-store_direction'
        - $ref: '#/components/parameters/secrets-store_page'
        - $ref: '#/components/parameters/secrets-store_per_page'
        - $ref: '#/components/parameters/secrets-store_order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secrets-store_stores_response_collection'
          description: List account stores response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secrets-store_api-response-common-failure
          description: List account stores response failure
      security:
        - api_email: []
          api_key: []
      summary: List account stores
      tags:
        - Secrets Store
      x-api-token-group:
        - Secrets Store Write
        - Secrets Store Read
      x-cfPermissionsRequired:
        enum:
          - '#com.cloudflare.api.account.secrets-store.secret.list'
          - '#com.cloudflare.api.account.secrets-store.secret.read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Creates a store in the account
      operationId: secrets-store-create
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/secrets-store_createStoreObject'
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secrets-store_stores_response_collection'
          description: store details
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secrets-store_api-response-common-failure
          description: List store secrets response failure
      security:
        - api_email: []
          api_key: []
      summary: Create a store
      tags:
        - Secrets Store
      x-api-token-group:
        - Secrets Store Write
      x-cfPermissionsRequired:
        enum:
          - '#com.cloudflare.api.account.secrets-store.secret.read'
          - '#com.cloudflare.api.account.secrets-store.secret.create'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /accounts/{account_id}/secrets_store/stores/{store_id}:
    delete:
      description: Deletes a single store
      operationId: secrets-store-delete-by-id
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_account_identifier'
        - in: path
          name: store_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_store_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secrets-store_store_response'
          description: store details
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secrets-store_api-response-common-failure
          description: failure
      security:
        - api_email: []
          api_key: []
      summary: Delete a store
      tags:
        - Secrets Store
      x-api-token-group:
        - Secrets Store Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /accounts/{account_id}/secrets_store/stores/{store_id}/secrets:
    get:
      description: Lists all store secrets
      operationId: secrets-store-secrets-list
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_account_identifier'
        - in: path
          name: store_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_store_identifier'
        - $ref: '#/components/parameters/secrets-store_direction'
        - $ref: '#/components/parameters/secrets-store_page'
        - $ref: '#/components/parameters/secrets-store_per_page'
        - $ref: '#/components/parameters/secrets-store_search'
        - $ref: '#/components/parameters/secrets-store_order'
        - $ref: '#/components/parameters/secrets-store_scopes_query'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secrets-store_secrets_response_collection'
          description: List store secrets response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secrets-store_api-response-common-failure
          description: List store secrets response failure
      security:
        - api_email: []
          api_key: []
      summary: List store secrets
      tags:
        - Secrets Store
      x-api-token-group:
        - Secrets Store Write
        - Secrets Store Read
      x-cfPermissionsRequired:
        enum:
          - '#com.cloudflare.api.account.secrets-store.secret.list'
          - '#com.cloudflare.api.account.secrets-store.secret.read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Creates a secret in the account
      operationId: secrets-store-secret-create
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_account_identifier'
        - in: path
          name: store_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_store_identifier'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/secrets-store_createSecretObject'
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secrets-store_secrets_response_collection'
          description: secret detail
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secrets-store_api-response-common-failure
          description: List store secrets response failure
      security:
        - api_email: []
          api_key: []
      summary: Create a secret
      tags:
        - Secrets Store
      x-api-token-group:
        - Secrets Store Write
      x-cfPermissionsRequired:
        enum:
          - '#com.cloudflare.api.account.secrets-store.secret.read'
          - '#com.cloudflare.api.account.secrets-store.secret.create'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    delete:
      description: Deletes one or more secrets
      operationId: secrets-store-delete-bulk
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_account_identifier'
        - in: path
          name: store_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_store_identifier'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/secrets-store_deleteSecretObject'
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secrets-store_secrets_response_collection'
          description: secret detail
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secrets-store_api-response-common-failure
          description: List store secrets response failure
      security:
        - api_email: []
          api_key: []
      summary: Delete secrets
      tags:
        - Secrets Store
      x-api-token-group:
        - Secrets Store Write
      x-cfPermissionsRequired:
        enum:
          - '#com.cloudflare.api.account.secrets-store.secret.read'
          - '#com.cloudflare.api.account.secrets-store.secret.delete'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /accounts/{account_id}/secrets_store/stores/{store_id}/secrets/{secret_id}:
    get:
      description: Returns details of a single secret
      operationId: secrets-store-get-by-id
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_account_identifier'
        - in: path
          name: store_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_store_identifier'
        - in: path
          name: secret_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secrets-store_secret_response'
          description: secret detail
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secrets-store_api-response-common-failure
          description: failure
      security:
        - api_email: []
          api_key: []
      summary: Get a secret by ID
      tags:
        - Secrets Store
      x-api-token-group:
        - Secrets Store Write
        - Secrets Store Read
      x-cfPermissionsRequired:
        enum:
          - '#com.cloudflare.api.account.secrets-store.secret.read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Updates a single secret
      operationId: secrets-store-patch-by-id
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_account_identifier'
        - in: path
          name: store_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_store_identifier'
        - in: path
          name: secret_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secrets-store_patchSecretObject'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secrets-store_secret_response'
          description: secret detail
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secrets-store_api-response-common-failure
          description: failure
      security:
        - api_email: []
          api_key: []
      summary: Patch a secret
      tags:
        - Secrets Store
      x-api-token-group:
        - Secrets Store Write
      x-cfPermissionsRequired:
        enum:
          - '#com.cloudflare.api.account.secrets-store.secret.read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    delete:
      description: Deletes a single secret
      operationId: secrets-store-secret-delete-by-id
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_account_identifier'
        - in: path
          name: store_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_store_identifier'
        - in: path
          name: secret_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secrets-store_secret_response'
          description: secret detail
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secrets-store_api-response-common-failure
          description: failure
      security:
        - api_email: []
          api_key: []
      summary: Delete a secret
      tags:
        - Secrets Store
      x-api-token-group:
        - Secrets Store Write
      x-cfPermissionsRequired:
        enum:
          - '#com.cloudflare.api.account.secrets-store.secret.read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /accounts/{account_id}/secrets_store/stores/{store_id}/secrets/{secret_id}/duplicate:
    post:
      description: Duplicates the secret, keeping the value
      operationId: secrets-store-duplicate-by-id
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_account_identifier'
        - in: path
          name: store_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_store_identifier'
        - in: path
          name: secret_id
          required: true
          schema:
            $ref: '#/components/schemas/secrets-store_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secrets-store_duplicateSecretObject'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secrets-store_secret_response'
          description: secret detail
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secrets-store_api-response-common-failure
          description: failure
      security:
        - api_email: []
          api_key: []
      summary: Duplicate Secret
      tags:
        - Secrets Store
      x-api-token-group:
        - Secrets Store Write
      x-cfPermissionsRequired:
        enum:
          - '#com.cloudflare.api.account.secrets-store.secret.read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
components:
  schemas:
    secrets-store_account_identifier:
      description: Account Identifier
      example: 985e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
    secrets-store_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/secrets-store_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/secrets-store_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    secrets-store_createSecretObject:
      properties:
        comment:
          $ref: '#/components/schemas/secrets-store_comment'
        name:
          $ref: '#/components/schemas/secrets-store_secret_name'
        scopes:
          $ref: '#/components/schemas/secrets-store_scopes'
        value:
          $ref: '#/components/schemas/secrets-store_value'
      required:
        - name
        - value
        - scopes
    secrets-store_createStoreObject:
      properties:
        name:
          $ref: '#/components/schemas/secrets-store_store_name'
      required:
        - name
    secrets-store_deleteSecretObject:
      properties:
        id:
          $ref: '#/components/schemas/secrets-store_identifier'
      required:
        - id
    secrets-store_duplicateSecretObject:
      properties:
        comment:
          $ref: '#/components/schemas/secrets-store_comment'
        name:
          $ref: '#/components/schemas/secrets-store_secret_name'
        scopes:
          $ref: '#/components/schemas/secrets-store_scopes'
      required:
        - name
        - scopes
    secrets-store_identifier:
      description: Secret identifier tag.
      example: 3fd85f74b32742f1bff64a85009dda07
      maxLength: 32
      readOnly: true
      type: string
      x-auditable: true
    secrets-store_patchSecretObject:
      properties:
        comment:
          $ref: '#/components/schemas/secrets-store_comment'
        scopes:
          $ref: '#/components/schemas/secrets-store_scopes'
      required:
        - name
    secrets-store_quota_response:
      allOf:
        - $ref: '#/components/schemas/secrets-store_api-response-collection'
        - properties:
            result:
              $ref: '#/components/schemas/secrets-store_secretsUsageObject'
    secrets-store_secret_response:
      allOf:
        - $ref: '#/components/schemas/secrets-store_api-response-collection'
        - properties:
            result:
              $ref: '#/components/schemas/secrets-store_secretObject'
    secrets-store_secrets_response_collection:
      allOf:
        - $ref: '#/components/schemas/secrets-store_api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/secrets-store_secretObject'
              type: array
    secrets-store_store_identifier:
      description: Store Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
      x-auditable: true
    secrets-store_store_response:
      allOf:
        - $ref: '#/components/schemas/secrets-store_api-response-collection'
        - properties:
            result:
              $ref: '#/components/schemas/secrets-store_storeObject'
    secrets-store_stores_response_collection:
      allOf:
        - $ref: '#/components/schemas/secrets-store_api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/secrets-store_storeObject'
              type: array
  parameters:
    secrets-store_direction:
      description: Direction to sort objects
      in: query
      name: direction
      schema:
        default: desc
        enum:
          - asc
          - desc
        type: string
    secrets-store_order:
      description: Order secrets by values in the given field
      in: query
      name: order
      schema:
        default: created
        enum:
          - name
          - comment
          - created
          - modified
          - status
        type: string
    secrets-store_page:
      description: Page number
      in: query
      name: page
      schema:
        example: 2
        minimum: 0
        multipleOf: 1
        type: integer
    secrets-store_per_page:
      description: Number of objects to return per page
      in: query
      name: per_page
      schema:
        example: 20
        maximum: 100
        minimum: 0
        multipleOf: 1
        type: integer
    secrets-store_scopes_query:
      description: Only secrets with the given scopes will be returned
      explode: false
      in: query
      name: scopes
      schema:
        items:
          $ref: '#/components/schemas/secrets-store_scopes'
        type: array
      style: form
    secrets-store_search:
      description: Search secrets using a filter string, filtering across name and comment
      in: query
      name: search
      schema:
        type: string
