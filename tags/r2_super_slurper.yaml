openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/slurper/jobs:
    get:
      operationId: slurper-list-jobs
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            maximum: 50
            type: integer
        - in: query
          name: offset
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2-slurper_api-v4-success'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/r2-slurper_JobResponse'
                        type: array
                    type: object
                type: object
          description: A list of jobs
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-slurper_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: List jobs
      tags:
        - R2 Super Slurper
    post:
      operationId: slurper-create-job
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/r2-slurper_CreateJobRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2-slurper_api-v4-success'
                  - properties:
                      result:
                        properties:
                          id:
                            type: string
                        type: object
                    type: object
                type: object
          description: Job created
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-slurper_api-v4-failure'
          description: Maximum number of concurrent jobs has been reached
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-slurper_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Create a job
      tags:
        - R2 Super Slurper
  /accounts/{account_id}/slurper/jobs/abortAll:
    put:
      operationId: slurper-abort-all-jobs
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2-slurper_api-v4-success'
                  - properties:
                      result:
                        type: string
                    type: object
                type: object
          description: All jobs aborted
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-slurper_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Abort all jobs
      tags:
        - R2 Super Slurper
  /accounts/{account_id}/slurper/jobs/{job_id}:
    get:
      operationId: slurper-get-job
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: job_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2-slurper_api-v4-success'
                  - properties:
                      result:
                        $ref: '#/components/schemas/r2-slurper_JobResponse'
                    type: object
                type: object
          description: Job details
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-slurper_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Get job details
      tags:
        - R2 Super Slurper
  /accounts/{account_id}/slurper/jobs/{job_id}/abort:
    put:
      operationId: slurper-abort-job
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: job_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2-slurper_api-v4-success'
                  - properties:
                      result:
                        type: string
                    type: object
                type: object
          description: Job aborted
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-slurper_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Abort a job
      tags:
        - R2 Super Slurper
  /accounts/{account_id}/slurper/jobs/{job_id}/logs:
    get:
      operationId: slurper-get-job-logs
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: job_id
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            maximum: 50
            type: integer
        - in: query
          name: offset
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2-slurper_api-v4-success'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/r2-slurper_JobLogResponse'
                        type: array
                    type: object
                type: object
          description: Job logs
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-slurper_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Get job logs
      tags:
        - R2 Super Slurper
  /accounts/{account_id}/slurper/jobs/{job_id}/pause:
    put:
      operationId: slurper-pause-job
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: job_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2-slurper_api-v4-success'
                  - properties:
                      result:
                        type: string
                    type: object
                type: object
          description: Job paused
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-slurper_api-v4-failure'
          description: Job is not paused
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-slurper_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Pause a job
      tags:
        - R2 Super Slurper
  /accounts/{account_id}/slurper/jobs/{job_id}/progress:
    get:
      operationId: slurper-get-job-progress
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: job_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2-slurper_api-v4-success'
                  - properties:
                      result:
                        $ref: '#/components/schemas/r2-slurper_JobProgressResponse'
                    type: object
                type: object
          description: Job progress
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-slurper_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Get job progress
      tags:
        - R2 Super Slurper
  /accounts/{account_id}/slurper/jobs/{job_id}/resume:
    put:
      operationId: slurper-resume-job
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: job_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2-slurper_api-v4-success'
                  - properties:
                      result:
                        type: string
                    type: object
                type: object
          description: Job resumed
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-slurper_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Resume a job
      tags:
        - R2 Super Slurper
  /accounts/{account_id}/slurper/source/connectivity-precheck:
    put:
      description: Check whether tokens are valid against the source bucket
      operationId: slurper-check-source-connectivity
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/r2-slurper_SourceJobSchema'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2-slurper_api-v4-success'
                  - properties:
                      result:
                        $ref: '#/components/schemas/r2-slurper_ConnectivityResponse'
                    type: object
                type: object
          description: Source connectivity checked
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-slurper_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Check source connectivity
      tags:
        - R2 Super Slurper
  /accounts/{account_id}/slurper/target/connectivity-precheck:
    put:
      description: Check whether tokens are valid against the target bucket
      operationId: slurper-check-target-connectivity
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/r2-slurper_R2TargetSchema'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2-slurper_api-v4-success'
                  - properties:
                      result:
                        $ref: '#/components/schemas/r2-slurper_ConnectivityResponse'
                    type: object
                type: object
          description: Target connectivity checked
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2-slurper_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Check target connectivity
      tags:
        - R2 Super Slurper
components:
  schemas:
    r2-slurper_ConnectivityResponse:
      properties:
        connectivityStatus:
          enum:
            - success
            - error
          type: string
      type: object
    r2-slurper_CreateJobRequest:
      properties:
        overwrite:
          default: true
          type: boolean
        source:
          $ref: '#/components/schemas/r2-slurper_SourceJobSchema'
        target:
          $ref: '#/components/schemas/r2-slurper_R2TargetSchema'
      type: object
    r2-slurper_JobLogResponse:
      properties:
        createdAt:
          type: string
        job:
          type: string
        logType:
          enum:
            - migrationStart
            - migrationComplete
            - migrationAbort
            - migrationError
            - migrationPause
            - migrationResume
            - migrationErrorFailedContinuation
            - importErrorRetryExhaustion
            - importSkippedStorageClass
            - importSkippedOversized
            - importSkippedEmptyObject
            - importSkippedUnsupportedContentType
            - importSkippedExcludedContentType
            - importSkippedInvalidMedia
            - importSkippedRequiresRetrieval
          type: string
        message:
          nullable: true
          type: string
        objectKey:
          nullable: true
          type: string
      type: object
    r2-slurper_JobProgressResponse:
      properties:
        createdAt:
          type: string
        failedObjects:
          type: integer
        id:
          type: string
        objects:
          type: integer
        skippedObjects:
          type: integer
        status:
          $ref: '#/components/schemas/r2-slurper_JobStatus'
        transferredObjects:
          type: integer
      type: object
    r2-slurper_JobResponse:
      properties:
        createdAt:
          type: string
        finishedAt:
          nullable: true
          type: string
        id:
          type: string
        overwrite:
          type: boolean
        source:
          oneOf:
            - properties:
                bucket:
                  type: string
                endpoint:
                  nullable: true
                  type: string
                pathPrefix:
                  nullable: true
                  type: string
                vendor:
                  enum:
                    - s3
                  type: string
              title: S3SourceResponseSchema
              type: object
            - properties:
                bucket:
                  type: string
                pathPrefix:
                  nullable: true
                  type: string
                vendor:
                  enum:
                    - gcs
                  type: string
              title: GCSSourceResponseSchema
              type: object
            - properties:
                bucket:
                  type: string
                jurisdiction:
                  $ref: '#/components/schemas/r2-slurper_Jurisdiction'
                pathPrefix:
                  nullable: true
                  type: string
                vendor:
                  enum:
                    - r2
                  type: string
              title: R2SourceResponseSchema
              type: object
        status:
          $ref: '#/components/schemas/r2-slurper_JobStatus'
        target:
          properties:
            bucket:
              type: string
            jurisdiction:
              $ref: '#/components/schemas/r2-slurper_Jurisdiction'
            vendor:
              enum:
                - r2
              type: string
          title: R2TargetResponseSchema
          type: object
      type: object
    r2-slurper_R2TargetSchema:
      allOf:
        - $ref: '#/components/schemas/r2-slurper_R2SourceSchema'
      type: object
    r2-slurper_SourceJobSchema:
      oneOf:
        - $ref: '#/components/schemas/r2-slurper_S3SourceSchema'
        - $ref: '#/components/schemas/r2-slurper_GCSSourceSchema'
        - $ref: '#/components/schemas/r2-slurper_R2SourceSchema'
      type: object
    r2-slurper_api-v4-failure:
      properties:
        errors:
          $ref: '#/components/schemas/r2-slurper_api-v4-error'
        messages:
          $ref: '#/components/schemas/r2-slurper_api-v4-message'
        success:
          description: Indicates if the API call was successful or not.
          enum:
            - false
          example: false
          type: boolean
          x-auditable: true
      type: object
    r2-slurper_api-v4-success:
      properties:
        errors:
          $ref: '#/components/schemas/r2-slurper_api-v4-error'
        messages:
          $ref: '#/components/schemas/r2-slurper_api-v4-message'
        success:
          description: Indicates if the API call was successful or not.
          enum:
            - true
          type: boolean
          x-auditable: true
      type: object
