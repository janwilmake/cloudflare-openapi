openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/argo/tiered_caching:
    get:
      description: >-
        Tiered Cache works by dividing Cloudflare's data centers into a
        hierarchy of lower-tiers and upper-tiers. If content is not cached in
        lower-tier data centers (generally the ones closest to a visitor), the
        lower-tier must ask an upper-tier to see if it has the content. If the
        upper-tier does not have the content, only the upper-tier can ask the
        origin for content. This practice improves bandwidth efficiency by
        limiting the number of data centers that can ask the origin for content,
        which reduces origin load and makes websites more cost-effective to
        operate. Additionally, Tiered Cache concentrates connections to origin
        servers so they come from a small number of data centers rather than the
        full set of network locations. This results in fewer open connections
        using server resources.
      operationId: tiered-caching-get-tiered-caching-setting
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache-rules_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache-rules_tiered_cache_response_value
                type: object
          description: Get Tiered Caching setting response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Get Tiered Caching setting response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get Tiered Caching setting
      tags:
        - Tiered Caching
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: >-
        Tiered Cache works by dividing Cloudflare's data centers into a
        hierarchy of lower-tiers and upper-tiers. If content is not cached in
        lower-tier data centers (generally the ones closest to a visitor), the
        lower-tier must ask an upper-tier to see if it has the content. If the
        upper-tier does not have the content, only the upper-tier can ask the
        origin for content. This practice improves bandwidth efficiency by
        limiting the number of data centers that can ask the origin for content,
        which reduces origin load and makes websites more cost-effective to
        operate. Additionally, Tiered Cache concentrates connections to origin
        servers so they come from a small number of data centers rather than the
        full set of network locations. This results in fewer open connections
        using server resources.
      operationId: tiered-caching-patch-tiered-caching-setting
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/cache-rules_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cache-rules_patch'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache-rules_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache-rules_tiered_cache_response_value
                type: object
          description: Patch Tiered Caching setting response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache-rules_api-response-common-failure'
          description: Patch Tiered Caching setting response failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Patch Tiered Caching setting
      tags:
        - Tiered Caching
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
components:
  schemas:
    cache-rules_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/cache-rules_messages'
          example:
            - code: 7003
              message: No route for the URI
          items:
            type: object
          minLength: 1
          type: array
        messages:
          allOf:
            - $ref: '#/components/schemas/cache-rules_messages'
          example: []
          items:
            type: object
          type: array
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    cache-rules_identifier:
      description: Identifier
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
      x-auditable: true
    cache-rules_patch:
      description: Update enablement of Tiered Caching
      properties:
        value:
          $ref: '#/components/schemas/cache-rules_value'
      required:
        - value
      type: object
    cache-rules_tiered_cache_response_value:
      properties:
        result:
          allOf:
            - $ref: '#/components/schemas/cache-rules_tiered_cache'
            - properties:
                value:
                  $ref: '#/components/schemas/cache-rules_tiered_cache_value'
              required:
                - value
              type: object
          type: object
      type: object
    cache-rules_zone_cache_settings_response_single:
      allOf:
        - $ref: '#/components/schemas/cache-rules_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/cache-rules_result-object'
          type: object
      type: object
