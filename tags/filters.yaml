openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/filters:
    get:
      deprecated: true
      description: >-
        Fetches filters in a zone. You can filter the results using several
        optional parameters.
      operationId: filters-list-filters
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_identifier'
        - in: query
          name: paused
          schema:
            oneOf:
              - $ref: >-
                  #/components/schemas/firewall_filters_components-schemas-paused
        - in: query
          name: expression
          schema:
            description: A case-insensitive string to find in the expression.
            example: php
            type: string
        - in: query
          name: description
          schema:
            description: A case-insensitive string to find in the description.
            example: browsers
            type: string
        - in: query
          name: ref
          schema:
            description: >-
              The filter ref (a short reference tag) to search for. Must be an
              exact match.
            example: FIL-100
            type: string
        - in: query
          name: page
          schema:
            default: 1
            description: Page number of paginated results.
            minimum: 1
            type: number
        - in: query
          name: per_page
          schema:
            default: 25
            description: Number of filters per page.
            maximum: 100
            minimum: 5
            type: number
        - in: query
          name: id
          schema:
            description: The unique identifier of the filter.
            example: 372e67954025e0ba6aaa6d586b9e0b61
            maxLength: 32
            minLength: 32
            readOnly: true
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall_filter-response-collection'
          description: List filters response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewall_filter-response-collection'
                  - $ref: '#/components/schemas/firewall_api-response-common-failure'
          description: List filters response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: List filters
      tags:
        - Filters
      x-api-token-group:
        - Firewall Services Write
        - Firewall Services Read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      deprecated: true
      description: Creates one or more filters.
      operationId: filters-create-filters
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                expression:
                  $ref: '#/components/schemas/firewall_expression'
              required:
                - expression
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewall_filter-response-collection'
          description: Create filters response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewall_filter-response-collection'
                  - $ref: '#/components/schemas/firewall_api-response-common-failure'
          description: Create filters response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Create filters
      tags:
        - Filters
      x-api-token-group:
        - Firewall Services Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      deprecated: true
      description: Updates one or more existing filters.
      operationId: filters-update-filters
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  $ref: '#/components/schemas/firewall_components-schemas-identifier'
              required:
                - id
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall_filter-response-collection'
          description: Update filters response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewall_filter-response-collection'
                  - $ref: '#/components/schemas/firewall_api-response-common-failure'
          description: Update filters response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update filters
      tags:
        - Filters
      x-api-token-group:
        - Firewall Services Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    delete:
      deprecated: true
      description: Deletes one or more existing filters.
      operationId: filters-delete-filters
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  $ref: '#/components/schemas/firewall_filters_components-schemas-id'
              required:
                - id
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/firewall_filter-delete-response-collection
          description: Delete filters response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/firewall_filter-delete-response-collection
                  - $ref: '#/components/schemas/firewall_api-response-common-failure'
          description: Delete filters response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Delete filters
      tags:
        - Filters
      x-api-token-group:
        - Firewall Services Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /zones/{zone_id}/filters/{filter_id}:
    get:
      deprecated: true
      description: Fetches the details of a filter.
      operationId: filters-get-a-filter
      parameters:
        - in: path
          name: filter_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_filters_components-schemas-id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall_filter-response-single'
          description: Get a filter response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewall_filter-response-single'
                  - $ref: '#/components/schemas/firewall_api-response-common-failure'
          description: Get a filter response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Get a filter
      tags:
        - Filters
      x-api-token-group:
        - Firewall Services Write
        - Firewall Services Read
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      deprecated: true
      description: Updates an existing filter.
      operationId: filters-update-a-filter
      parameters:
        - in: path
          name: filter_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_filters_components-schemas-id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_identifier'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall_filter-response-single'
          description: Update a filter response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/firewall_filter-response-single'
                  - $ref: '#/components/schemas/firewall_api-response-common-failure'
          description: Update a filter response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update a filter
      tags:
        - Filters
      x-api-token-group:
        - Firewall Services Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    delete:
      deprecated: true
      description: Deletes an existing filter.
      operationId: filters-delete-a-filter
      parameters:
        - in: path
          name: filter_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_filters_components-schemas-id'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/firewall_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall_filter-delete-response-single'
          description: Delete a filter response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/firewall_filter-delete-response-single
                  - $ref: '#/components/schemas/firewall_api-response-common-failure'
          description: Delete a filter response failure
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Delete a filter
      tags:
        - Filters
      x-api-token-group:
        - Firewall Services Write
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
components:
  schemas:
    firewall_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/firewall_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/firewall_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Defines whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    firewall_components-schemas-identifier:
      description: The unique identifier of the resource.
      example: de677e5818985db1285d0e80225f06e5
      maxLength: 32
      readOnly: true
      type: string
    firewall_expression:
      description: >-
        The filter expression. For more information, refer to
        [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).
      example: >-
        (http.request.uri.path ~ ".*wp-login.php" or http.request.uri.path ~
        ".*xmlrpc.php") and ip.addr ne 172.16.22.155
      type: string
    firewall_filter-delete-response-collection:
      allOf:
        - $ref: '#/components/schemas/firewall_api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/firewall_filter'
              type: array
          type: object
    firewall_filter-delete-response-single:
      allOf:
        - $ref: '#/components/schemas/firewall_api-response-single'
        - properties:
            result:
              allOf:
                - $ref: '#/components/schemas/firewall_filter'
                - required:
                    - id
                  type: object
          required:
            - result
          type: object
    firewall_filter-response-collection:
      allOf:
        - $ref: '#/components/schemas/firewall_api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/firewall_filter'
              type: array
          type: object
    firewall_filter-response-single:
      allOf:
        - $ref: '#/components/schemas/firewall_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/firewall_filter'
          required:
            - result
          type: object
    firewall_filters_components-schemas-id:
      description: The unique identifier of the filter.
      example: 372e67954025e0ba6aaa6d586b9e0b61
      maxLength: 32
      minLength: 32
      readOnly: true
      type: string
    firewall_filters_components-schemas-paused:
      description: When true, indicates that the filter is currently paused.
      example: false
      type: boolean
    firewall_identifier:
      description: Defines an identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
