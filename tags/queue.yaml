openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/event_subscriptions/subscriptions:
    get:
      description: >-
        Get a paginated list of event subscriptions with optional sorting and
        filtering
      operationId: subscriptions-list
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - description: Page number for pagination
          in: query
          name: page
          schema:
            default: 1
            minimum: 1
            type: integer
        - description: Number of items per page
          in: query
          name: per_page
          schema:
            default: 20
            maximum: 100
            minimum: 1
            type: integer
        - description: Field to sort by
          in: query
          name: order
          schema:
            default: name
            enum:
              - created_at
              - name
              - enabled
              - source
            type: string
        - description: Sort direction
          in: query
          name: direction
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/mq_event-subscription'
                        type: array
                      result_info:
                        properties:
                          count:
                            description: Number of items in current page
                            type: integer
                          page:
                            description: Current page number
                            type: integer
                          per_page:
                            description: Items per page
                            type: integer
                          total_count:
                            description: Total number of items
                            type: integer
                          total_pages:
                            description: Total number of pages
                            type: integer
                        required:
                          - count
                          - total_count
                          - page
                          - per_page
                          - total_pages
                        type: object
                    type: object
                type: object
          description: List of event subscriptions
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: List Event Subscriptions
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Queues Read
        - Workers Scripts Write
        - Workers Scripts Read
    post:
      description: Create a new event subscription for a queue
      operationId: subscriptions-create
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                destination:
                  $ref: '#/components/schemas/mq_event-destination'
                enabled:
                  description: Whether the subscription is active
                  type: boolean
                  x-auditable: true
                events:
                  description: List of event types this subscription handles
                  items:
                    type: string
                  minItems: 1
                  type: array
                  x-auditable: true
                name:
                  description: Name of the subscription
                  type: string
                  x-auditable: true
                source:
                  $ref: '#/components/schemas/mq_event-source'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        $ref: '#/components/schemas/mq_event-subscription'
                    type: object
                type: object
          description: Successfully created event subscription
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Invalid request body or validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Queue does not exist or resource not found on source
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Multiple subscriptions on same resource not supported
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Create Event Subscription
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
  /accounts/{account_id}/event_subscriptions/subscriptions/{subscription_id}:
    patch:
      description: Update an existing event subscription
      operationId: subscriptions-patch
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: subscription_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                destination:
                  $ref: '#/components/schemas/mq_event-destination'
                enabled:
                  description: Whether the subscription is active
                  type: boolean
                  x-auditable: true
                events:
                  description: List of event types this subscription handles
                  items:
                    type: string
                  minItems: 1
                  type: array
                  x-auditable: true
                name:
                  description: Name of the subscription
                  type: string
                  x-auditable: true
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        $ref: '#/components/schemas/mq_event-subscription'
                    type: object
                type: object
          description: Successfully created event subscription
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Invalid request body or validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Queue does not exist or resource not found on source
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update Event Subscription
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
    delete:
      description: Delete an existing event subscription
      operationId: subscriptions-delete
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: subscription_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        $ref: '#/components/schemas/mq_event-subscription'
                    type: object
                type: object
          description: Successfully created event subscription
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Delete Event Subscription
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
  /accounts/{account_id}/queues:
    get:
      description: Returns the queues owned by an account.
      operationId: queues-list
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/mq_queue'
                        type: array
                      result_info:
                        properties:
                          count:
                            description: Total number of queues
                            example: 1
                            type: number
                          page:
                            description: Current page within paginated list of queues
                            example: 1
                            type: number
                          per_page:
                            description: Number of queues per page
                            example: 20
                            type: number
                          total_count:
                            description: >-
                              Total queues available without any search
                              parameters
                            example: 2000
                            type: number
                          total_pages:
                            description: >-
                              Total pages available without any search
                              parameters
                            example: 100
                            type: number
                        type: object
                    type: object
                type: object
          description: List of all Queues that belong to this account
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: List Queues
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Queues Read
        - Workers Scripts Write
        - Workers Scripts Read
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.list
    post:
      description: Create a new queue
      operationId: queues-create
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                queue_name:
                  $ref: '#/components/schemas/mq_queue-name'
              required:
                - queue_name
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        $ref: '#/components/schemas/mq_queue'
                    type: object
                type: object
          description: Created Queue
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Create Queue
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.create
  /accounts/{account_id}/queues/{queue_id}:
    get:
      description: Get details about a specific queue.
      operationId: queues-get
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        $ref: '#/components/schemas/mq_queue'
                    type: object
                type: object
          description: Details of the requested Queue
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Get Queue
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Queues Read
        - Workers Scripts Write
        - Workers Scripts Read
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.read
    put:
      description: >-
        Updates a Queue. Note that this endpoint does not support partial
        updates. If successful, the Queue's configuration is overwritten with
        the supplied configuration.
      operationId: queues-update
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mq_queue'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/mq_queue'
                        type: object
                    type: object
                type: object
          description: Updated Queue
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update Queue
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.update
    patch:
      description: Updates a Queue.
      operationId: queues-update-partial
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mq_queue'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/mq_queue'
                        type: object
                    type: object
                type: object
          description: Updated Queue
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update Queue
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.update
    delete:
      description: Deletes a queue
      operationId: queues-delete
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-success'
          description: Successful delete
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Delete Queue
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.delete
  /accounts/{account_id}/queues/{queue_id}/consumers:
    get:
      description: Returns the consumers for a Queue
      operationId: queues-list-consumers
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        items:
                          $ref: '#/components/schemas/mq_consumer'
                        type: array
                    type: object
                type: object
          description: All consumers attached to this Queue
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: List Queue Consumers
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Queues Read
        - Workers Scripts Write
        - Workers Scripts Read
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.list
    post:
      description: Creates a new consumer for a Queue
      operationId: queues-create-consumer
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/mq_consumer'
                - properties:
                    dead_letter_queue:
                      $ref: '#/components/schemas/mq_queue-name'
                  type: object
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        $ref: '#/components/schemas/mq_consumer'
                    type: object
                type: object
          description: Create Queue Consumer response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Create a Queue Consumer
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.create
  /accounts/{account_id}/queues/{queue_id}/consumers/{consumer_id}:
    get:
      description: Fetches the consumer for a queue by consumer id
      operationId: queues-get-consumer
      parameters:
        - in: path
          name: consumer_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        $ref: '#/components/schemas/mq_consumer'
                    type: object
                type: object
          description: Get Queue Consumer response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Get Queue Consumer response failure.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Get Queue Consumer
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Queues Read
        - Workers Scripts Write
        - Workers Scripts Read
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.read
    put:
      description: Updates the consumer for a queue, or creates one if it does not exist.
      operationId: queues-update-consumer
      parameters:
        - in: path
          name: consumer_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/mq_consumer'
                - properties:
                    dead_letter_queue:
                      $ref: '#/components/schemas/mq_queue-name'
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        $ref: '#/components/schemas/mq_consumer'
                    type: object
                type: object
          description: Update Queue Consumer response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Update Queue Consumer response failure.
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Update Queue Consumer
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.update
    delete:
      description: Deletes the consumer for a queue.
      operationId: queues-delete-consumer
      parameters:
        - in: path
          name: consumer_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-success'
          description: Successful consumer delete
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Delete Queue Consumer
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.delete
  /accounts/{account_id}/queues/{queue_id}/messages:
    post:
      description: Push a message to a Queue
      operationId: queues-push-message
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mq_queue-message'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-success'
          description: Successful message ingestion
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Push Message
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.update
  /accounts/{account_id}/queues/{queue_id}/messages/ack:
    post:
      description: Acknowledge + Retry messages from a Queue
      operationId: queues-ack-messages
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                acks:
                  items:
                    properties:
                      lease_id:
                        $ref: '#/components/schemas/mq_lease-id'
                    type: object
                  type: array
                retries:
                  items:
                    properties:
                      delay_seconds:
                        $ref: '#/components/schemas/mq_retry-delay'
                      lease_id:
                        $ref: '#/components/schemas/mq_lease-id'
                    type: object
                  type: array
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        properties:
                          ackCount:
                            description: >-
                              The number of messages that were succesfully
                              acknowledged.
                            example: 5
                            type: number
                          retryCount:
                            description: >-
                              The number of messages that were succesfully
                              retried.
                            example: 5
                            type: number
                          warnings:
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                type: object
          description: Details of ACKs and retries
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Acknowledge + Retry Queue Messages
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.update
  /accounts/{account_id}/queues/{queue_id}/messages/batch:
    post:
      description: Push a batch of message to a Queue
      operationId: queues-push-messages
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mq_queue-batch'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-success'
          description: Successful batch ingestion
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Push Message Batch
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
  /accounts/{account_id}/queues/{queue_id}/messages/pull:
    post:
      description: Pull a batch of messages from a Queue
      operationId: queues-pull-messages
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                batch_size:
                  $ref: '#/components/schemas/mq_batch-size'
                visibility_timeout_ms:
                  $ref: '#/components/schemas/mq_visibility-timeout'
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        properties:
                          message_backlog_count:
                            description: The number of unacknowledged messages in the queue
                            example: 5
                            type: number
                          messages:
                            $ref: '#/components/schemas/mq_queue-pull-batch'
                        type: object
                    type: object
                type: object
          description: A batch of messages in the Queue
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Pull Queue Messages
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.update
  /accounts/{account_id}/queues/{queue_id}/purge:
    get:
      description: Get details about a Queue's purge status.
      operationId: queues-purge-get
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        properties:
                          completed:
                            description: >-
                              Indicates if the last purge operation completed
                              successfully.
                            readOnly: true
                            type: string
                            x-auditable: true
                          started_at:
                            description: Timestamp when the last purge operation started.
                            readOnly: true
                            type: string
                            x-auditable: true
                        type: object
                    type: object
                type: object
          description: Details of the requested Queue
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Get Queue Purge Status
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Queues Read
        - Workers Scripts Write
        - Workers Scripts Read
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.read
    post:
      description: Deletes all messages from the Queue.
      operationId: queues-purge
      parameters:
        - in: path
          name: queue_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/mq_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete_messages_permanently:
                  description: Confimation that all messages will be deleted permanently.
                  example: true
                  type: boolean
                  x-auditable: true
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/mq_api-v4-success'
                  - properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/mq_queue'
                        type: object
                    type: object
                type: object
          description: Updated Queue
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mq_api-v4-failure'
          description: Failure response
      security:
        - api_email: []
          api_key: []
          api_token: []
      summary: Purge Queue
      tags:
        - Queue
      x-api-token-group:
        - Queues Write
        - Workers Scripts Write
      x-cfPermissionsRequired:
        enum:
          - com.cloudflare.edge.worker.queue.update
components:
  schemas:
    mq_api-v4-failure:
      properties:
        errors:
          $ref: '#/components/schemas/mq_api-v4-error'
        messages:
          $ref: '#/components/schemas/mq_api-v4-message'
        success:
          description: Indicates if the API call was successful or not.
          enum:
            - false
          example: false
          type: boolean
          x-auditable: true
      type: object
    mq_api-v4-success:
      properties:
        errors:
          $ref: '#/components/schemas/mq_api-v4-error'
        messages:
          $ref: '#/components/schemas/mq_api-v4-message'
        success:
          description: Indicates if the API call was successful or not.
          enum:
            - true
          type: boolean
          x-auditable: true
      type: object
    mq_batch-size:
      description: The maximum number of messages to include in a batch.
      example: 50
      type: number
      x-auditable: true
    mq_consumer:
      oneOf:
        - $ref: '#/components/schemas/mq_worker-consumer'
        - $ref: '#/components/schemas/mq_http-consumer'
      type: object
    mq_event-destination:
      description: Destination configuration for the subscription
      oneOf:
        - $ref: '#/components/schemas/mq_event-destination-queue'
      type: object
    mq_event-source:
      description: Source configuration for the subscription
      oneOf:
        - $ref: '#/components/schemas/mq_event-source-access'
        - $ref: '#/components/schemas/mq_event-source-access-application'
        - $ref: '#/components/schemas/mq_event-source-clipboards'
        - $ref: '#/components/schemas/mq_event-source-clipboards-clipboard'
        - $ref: '#/components/schemas/mq_event-source-dns-zone'
        - $ref: '#/components/schemas/mq_event-source-images'
        - $ref: '#/components/schemas/mq_event-source-kv'
        - $ref: '#/components/schemas/mq_event-source-kv-namespace'
        - $ref: '#/components/schemas/mq_event-source-r2'
        - $ref: '#/components/schemas/mq_event-source-r2-bucket'
        - $ref: '#/components/schemas/mq_event-source-secrets-store'
        - $ref: '#/components/schemas/mq_event-source-secrets-store-store'
        - $ref: '#/components/schemas/mq_event-source-super-slurper'
        - $ref: '#/components/schemas/mq_event-source-vectorize'
        - $ref: '#/components/schemas/mq_event-source-vectorize-index'
        - $ref: '#/components/schemas/mq_event-source-workers-ai-model'
        - $ref: '#/components/schemas/mq_event-source-workers-builds-worker'
        - $ref: '#/components/schemas/mq_event-source-workflows'
        - $ref: '#/components/schemas/mq_event-source-workflows-workflow'
      type: object
    mq_event-subscription:
      properties:
        created_at:
          description: When the subscription was created
          format: date-time
          type: string
          x-auditable: true
        destination:
          $ref: '#/components/schemas/mq_event-destination'
        enabled:
          description: Whether the subscription is active
          type: boolean
          x-auditable: true
        events:
          description: List of event types this subscription handles
          items:
            type: string
          minItems: 1
          type: array
          x-auditable: true
        id:
          description: Unique identifier for the subscription
          type: string
          x-auditable: true
        modified_at:
          description: When the subscription was last modified
          format: date-time
          type: string
          x-auditable: true
        name:
          description: Name of the subscription
          type: string
          x-auditable: true
        source:
          $ref: '#/components/schemas/mq_event-source'
      required:
        - id
        - created_at
        - modified_at
        - name
        - enabled
        - source
        - destination
        - events
      type: object
    mq_identifier:
      description: A Resource identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      readOnly: true
      type: string
      x-auditable: true
    mq_lease-id:
      description: >-
        An ID that represents an "in-flight" message that has been pulled from a
        Queue. You must hold on to this ID and use it to acknowledge this
        message.
      example: >-
        eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2Q0JDLUhTNTEyIn0..Q8p21d7dceR6vUfwftONdQ.JVqZgAS-Zk7MqmqccYtTHeeMElNHaOMigeWdb8LyMOg.T2_HV99CYzGaQuhTyW8RsgbnpTRZHRM6N7UoSaAKeK0
      type: string
      x-auditable: true
    mq_queue:
      properties:
        consumers:
          items:
            $ref: '#/components/schemas/mq_consumer'
          readOnly: true
          type: array
        consumers_total_count:
          readOnly: true
          type: number
        created_on:
          readOnly: true
          type: string
          x-auditable: true
        modified_on:
          readOnly: true
          type: string
          x-auditable: true
        producers:
          items:
            $ref: '#/components/schemas/mq_producer'
          readOnly: true
          type: array
        producers_total_count:
          readOnly: true
          type: number
          x-auditable: true
        queue_id:
          readOnly: true
          type: string
          x-auditable: true
        queue_name:
          $ref: '#/components/schemas/mq_queue-name'
        settings:
          $ref: '#/components/schemas/mq_queue-settings'
      type: object
    mq_queue-batch:
      properties:
        delay_seconds:
          description: >-
            The number of seconds to wait for attempting to deliver this batch
            to consumers
          example: text
          type: number
          x-auditable: true
        messages:
          items:
            $ref: '#/components/schemas/mq_queue-message'
          type: array
      type: object
    mq_queue-message:
      allOf:
        - properties:
            delay_seconds:
              description: >-
                The number of seconds to wait for attempting to deliver this
                message to consumers
              example: text
              type: number
              x-auditable: true
          type: object
        - oneOf:
            - $ref: '#/components/schemas/mq_queue-message-text'
            - $ref: '#/components/schemas/mq_queue-message-json'
    mq_queue-name:
      example: example-queue
      type: string
      x-auditable: true
    mq_queue-pull-batch:
      items:
        properties:
          attempts:
            example: 1
            readOnly: true
            type: number
            x-auditable: true
          body:
            example: hello world
            readOnly: true
            type: string
          id:
            example: b01b5594f784d0165c2985833f5660dd
            readOnly: true
            type: string
            x-auditable: true
          lease_id:
            $ref: '#/components/schemas/mq_lease-id'
          metadata:
            example:
              CF-Content-Type: text
              CF-sourceMessageSource: dash
            readOnly: true
            type: object
          timestamp_ms:
            example: 1710950954154
            readOnly: true
            type: number
            x-auditable: true
        type: object
      type: array
    mq_retry-delay:
      description: >-
        The number of seconds to delay before making the message available for
        another attempt.
      example: 10
      type: number
      x-auditable: true
    mq_visibility-timeout:
      description: >-
        The number of milliseconds that a message is exclusively leased. After
        the timeout, the message becomes available for another attempt.
      example: 6000
      type: number
      x-auditable: true
