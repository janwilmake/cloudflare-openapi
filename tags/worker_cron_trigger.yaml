openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/workers/scripts/{script_name}/schedules:
    get:
      description: Fetches Cron Triggers for a Worker.
      operationId: worker-cron-trigger-get-cron-triggers
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - properties:
                      result:
                        properties:
                          schedules:
                            items:
                              $ref: '#/components/schemas/workers_schedule'
                            type: array
                        required:
                          - schedules
                        type: object
                    required:
                      - result
                    type: object
          description: Get Cron Triggers response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Get Cron Triggers response failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Get Cron Triggers
      tags:
        - Worker Cron Trigger
      x-api-token-group:
        - Workers Scripts Write
        - Workers Scripts Read
    put:
      description: Updates Cron Triggers for a Worker.
      operationId: worker-cron-trigger-update-cron-triggers
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - in: path
          name: script_name
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/workers_schedule'
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - properties:
                      result:
                        properties:
                          schedules:
                            items:
                              $ref: '#/components/schemas/workers_schedule'
                            type: array
                        required:
                          - schedules
                        type: object
                    required:
                      - result
                    type: object
          description: Update Cron Triggers response.
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
          description: Update Cron Triggers response failure.
      security:
        - api_token: []
        - api_email: []
          api_key: []
      summary: Update Cron Triggers
      tags:
        - Worker Cron Trigger
      x-api-token-group:
        - Workers Scripts Write
components:
  schemas:
    workers_api-response-common:
      properties:
        errors:
          $ref: '#/components/schemas/workers_messages'
        messages:
          $ref: '#/components/schemas/workers_messages'
        success:
          description: Whether the API call was successful.
          enum:
            - true
          example: true
          type: boolean
      required:
        - success
        - errors
        - messages
      type: object
    workers_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/workers_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/workers_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    workers_identifier:
      description: Identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      type: string
      x-auditable: true
    workers_schedule:
      properties:
        created_on:
          readOnly: true
          type: string
          x-auditable: true
        cron:
          example: '*/30 * * * *'
          type: string
          x-auditable: true
        modified_on:
          readOnly: true
          type: string
      required:
        - cron
      type: object
    workers_script_name:
      description: Name of the script, used in URLs and route configuration.
      example: this-is_my_script-01
      pattern: ^[a-z0-9_][a-z0-9-_]*$
      type: string
      x-auditable: true
