openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/dnssec:
    get:
      description: Details about DNSSEC status and configuration.
      operationId: dnssec-dnssec-details
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/dnssec_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dnssec_dnssec_response_single'
          description: DNSSEC Details response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dnssec_dnssec_response_single'
                  - $ref: '#/components/schemas/dnssec_api-response-common-failure'
          description: DNSSEC Details response failure
      security:
        - api_email: []
          api_key: []
      summary: DNSSEC Details
      tags:
        - DNSSEC
      x-api-token-group:
        - DNS Read
        - DNS Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    patch:
      description: Enable or disable DNSSEC.
      operationId: dnssec-edit-dnssec-status
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/dnssec_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dnssec_multi_signer:
                  $ref: '#/components/schemas/dnssec_dnssec_multi_signer'
                dnssec_presigned:
                  $ref: '#/components/schemas/dnssec_dnssec_presigned'
                dnssec_use_nsec3:
                  $ref: '#/components/schemas/dnssec_dnssec_use_nsec3'
                status:
                  description: >-
                    Status of DNSSEC, based on user-desired state and presence
                    of necessary records.
                  enum:
                    - active
                    - disabled
                  example: active
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dnssec_dnssec_response_single'
          description: Edit DNSSEC Status response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dnssec_dnssec_response_single'
                  - $ref: '#/components/schemas/dnssec_api-response-common-failure'
          description: Edit DNSSEC Status response failure
      security:
        - api_email: []
          api_key: []
      summary: Edit DNSSEC Status
      tags:
        - DNSSEC
      x-api-token-group:
        - DNS Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    delete:
      description: Delete DNSSEC.
      operationId: dnssec-delete-dnssec-records
      parameters:
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/dnssec_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dnssec_delete_dnssec_response_single'
          description: Delete DNSSEC records response
        4XX:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dnssec_delete_dnssec_response_single'
                  - $ref: '#/components/schemas/dnssec_api-response-common-failure'
          description: Delete DNSSEC records response failure
      security:
        - api_email: []
          api_key: []
      summary: Delete DNSSEC records
      tags:
        - DNSSEC
      x-api-token-group:
        - DNS Write
      x-cfPermissionsRequired:
        enum:
          - '#zone_settings:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
components:
  schemas:
    dnssec_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/dnssec_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/dnssec_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    dnssec_delete_dnssec_response_single:
      allOf:
        - $ref: '#/components/schemas/dnssec_api-response-single'
        - properties:
            result:
              example: ''
              type: string
    dnssec_dnssec_multi_signer:
      description: >-
        If true, multi-signer DNSSEC is enabled on the zone, allowing multiple

        providers to serve a DNSSEC-signed zone at the same time.

        This is required for DNSKEY records (except those automatically

        generated by Cloudflare) to be added to the zone.


        See [Multi-signer
        DNSSEC](https://developers.cloudflare.com/dns/dnssec/multi-signer-dnssec/)
        for details.
      example: false
      type: boolean
      x-auditable: true
    dnssec_dnssec_presigned:
      description: >-
        If true, allows Cloudflare to transfer in a DNSSEC-signed zone

        including signatures from an external provider, without requiring

        Cloudflare to sign any records on the fly.


        Note that this feature has some limitations.

        See [Cloudflare as
        Secondary](https://developers.cloudflare.com/dns/zone-setups/zone-transfers/cloudflare-as-secondary/setup/#dnssec)
        for details.
      example: true
      type: boolean
      x-auditable: true
    dnssec_dnssec_response_single:
      allOf:
        - $ref: '#/components/schemas/dnssec_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/dnssec_dnssec'
    dnssec_dnssec_use_nsec3:
      description: >-
        If true, enables the use of NSEC3 together with DNSSEC on the zone.

        Combined with setting dnssec_presigned to true, this enables the use of

        NSEC3 records when transferring in from an external provider.

        If dnssec_presigned is instead set to false (default), NSEC3 records
        will be

        generated and signed at request time.


        See [DNSSEC with
        NSEC3](https://developers.cloudflare.com/dns/dnssec/enable-nsec3/) for
        details.
      example: false
      type: boolean
      x-auditable: true
    dnssec_identifier:
      description: Identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      type: string
      x-auditable: true
