openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /zones/{zone_id}/access/apps/{app_id}/policies:
    get:
      description: Lists Access policies configured for an application.
      operationId: zone-level-access-policies-list-access-policies
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_policies_components-schemas-response_collection
          description: List Access policies response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
          description: List Access policies response failure
      security:
        - api_email: []
          api_key: []
      summary: List Access policies
      tags:
        - Zone-Level Access policies
      x-api-token-group:
        - 'Access: Apps and Policies Write'
        - 'Access: Apps and Policies Read'
        - 'Access: Apps and Policies Write'
        - 'Access: Apps and Policies Read'
    post:
      description: Create a new Access policy for an application.
      operationId: zone-level-access-policies-create-an-access-policy
      parameters:
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                approval_groups:
                  $ref: '#/components/schemas/access_schemas-approval_groups'
                approval_required:
                  $ref: '#/components/schemas/access_schemas-approval_required'
                decision:
                  $ref: '#/components/schemas/access_schemas-decision'
                exclude:
                  $ref: '#/components/schemas/access_components-schemas-exclude'
                include:
                  $ref: '#/components/schemas/access_include'
                isolation_required:
                  $ref: '#/components/schemas/access_schemas-isolation_required'
                name:
                  $ref: '#/components/schemas/access_policies_components-schemas-name'
                precedence:
                  $ref: '#/components/schemas/access_schemas-precedence'
                purpose_justification_prompt:
                  $ref: '#/components/schemas/access_purpose_justification_prompt'
                purpose_justification_required:
                  $ref: >-
                    #/components/schemas/access_schemas-purpose_justification_required
                require:
                  $ref: '#/components/schemas/access_components-schemas-require'
              required:
                - name
                - decision
                - include
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_policies_components-schemas-single_response
          description: Create an Access policy response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
          description: Create an Access policy response failure
      security:
        - api_email: []
          api_key: []
      summary: Create an Access policy
      tags:
        - Zone-Level Access policies
      x-api-token-group:
        - 'Access: Apps and Policies Write'
        - 'Access: Apps and Policies Write'
  /zones/{zone_id}/access/apps/{app_id}/policies/{policy_id}:
    get:
      description: Fetches a single Access policy.
      operationId: zone-level-access-policies-get-an-access-policy
      parameters:
        - in: path
          name: policy_id
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_policies_components-schemas-single_response
          description: Get an Access policy response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
          description: Get an Access policy response failure
      security:
        - api_email: []
          api_key: []
      summary: Get an Access policy
      tags:
        - Zone-Level Access policies
      x-api-token-group:
        - 'Access: Apps and Policies Write'
        - 'Access: Apps and Policies Read'
        - 'Access: Apps and Policies Write'
        - 'Access: Apps and Policies Read'
    put:
      description: Update a configured Access policy.
      operationId: zone-level-access-policies-update-an-access-policy
      parameters:
        - in: path
          name: policy_id
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                approval_groups:
                  $ref: '#/components/schemas/access_schemas-approval_groups'
                approval_required:
                  $ref: '#/components/schemas/access_schemas-approval_required'
                decision:
                  $ref: '#/components/schemas/access_schemas-decision'
                exclude:
                  $ref: '#/components/schemas/access_components-schemas-exclude'
                include:
                  $ref: '#/components/schemas/access_include'
                isolation_required:
                  $ref: '#/components/schemas/access_schemas-isolation_required'
                name:
                  $ref: '#/components/schemas/access_policies_components-schemas-name'
                precedence:
                  $ref: '#/components/schemas/access_schemas-precedence'
                purpose_justification_prompt:
                  $ref: '#/components/schemas/access_purpose_justification_prompt'
                purpose_justification_required:
                  $ref: >-
                    #/components/schemas/access_schemas-purpose_justification_required
                require:
                  $ref: '#/components/schemas/access_components-schemas-require'
              required:
                - name
                - decision
                - include
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_policies_components-schemas-single_response
          description: Update an Access policy response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
          description: Update an Access policy response failure
      security:
        - api_email: []
          api_key: []
      summary: Update an Access policy
      tags:
        - Zone-Level Access policies
      x-api-token-group:
        - 'Access: Apps and Policies Write'
        - 'Access: Apps and Policies Write'
    delete:
      description: Delete an Access policy.
      operationId: zone-level-access-policies-delete-an-access-policy
      parameters:
        - in: path
          name: policy_id
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - in: path
          name: app_id
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - in: path
          name: zone_id
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_id_response'
          description: Delete an Access policy response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
          description: Delete an Access policy response failure
      security:
        - api_email: []
          api_key: []
      summary: Delete an Access policy
      tags:
        - Zone-Level Access policies
      x-api-token-group:
        - 'Access: Apps and Policies Write'
        - 'Access: Apps and Policies Write'
components:
  schemas:
    access_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/access_messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/access_messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    access_components-schemas-exclude:
      description: >-
        Rules evaluated with a NOT logical operator. To match the policy, a user
        cannot meet any of the Exclude rules.
      items:
        $ref: '#/components/schemas/access_rule'
      type: array
    access_components-schemas-require:
      description: >-
        Rules evaluated with an AND logical operator. To match the policy, a
        user must meet all of the Require rules.
      items:
        $ref: '#/components/schemas/access_rule'
      type: array
    access_id_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              properties:
                id:
                  $ref: '#/components/schemas/access_uuid'
              type: object
      type: object
    access_identifier:
      description: Identifier.
      example: 023e105f4ecef8ad9ca31a8372d0c353
      maxLength: 32
      type: string
      x-auditable: true
    access_include:
      description: >-
        Rules evaluated with an OR logical operator. A user needs to meet only
        one of the Include rules.
      items:
        $ref: '#/components/schemas/access_rule'
      type: array
    access_policies_components-schemas-name:
      description: The name of the Access policy.
      example: Allow devs
      type: string
    access_policies_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/access_policies'
              type: array
      type: object
    access_policies_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_policies'
      type: object
    access_purpose_justification_prompt:
      description: A custom message that will appear on the purpose justification screen.
      example: Please enter a justification for entering this protected domain.
      type: string
    access_schemas-approval_groups:
      description: Administrators who can approve a temporary authentication request.
      example:
        - approvals_needed: 1
          email_addresses:
            - test1@cloudflare.com
            - test2@cloudflare.com
        - approvals_needed: 3
          email_list_uuid: 597147a1-976b-4ef2-9af0-81d5d007fc34
      items:
        $ref: '#/components/schemas/access_schemas-approval_group'
      type: array
    access_schemas-approval_required:
      default: false
      description: >-
        Requires the user to request access from an administrator at the start
        of each session.
      example: true
      type: boolean
    access_schemas-decision:
      description: The action Access will take if a user matches this policy.
      enum:
        - allow
        - deny
        - non_identity
        - bypass
      example: allow
      type: string
    access_schemas-isolation_required:
      default: false
      description: >-
        Require this application to be served in an isolated browser for users
        matching this policy.
      example: false
      type: boolean
    access_schemas-precedence:
      description: The order of execution for this policy. Must be unique for each policy.
      type: integer
    access_schemas-purpose_justification_required:
      default: false
      description: >-
        Require users to enter a justification when they log in to the
        application.
      example: true
      type: boolean
    access_uuid:
      description: UUID.
      example: f174e90a-fafe-4643-bbbc-4a0ed4fc8415
      maxLength: 36
      type: string
      x-auditable: true
