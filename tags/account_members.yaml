openapi: 3.0.3
info:
  description: >-
    Welcome to Cloudflare's API documentation site. We are experimenting with an
    updated version of our API documentation - check out
    [developers.cloudflare.com/api-next/](https://developers.cloudflare.com/api-next/)
    to test out the new experience.


    To get started using Cloudflare's products and services via the API, refer
    to [how to interact with
    Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/),
    which covers using tools like
    [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform)
    and the [official
    SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to
    maintain your Cloudflare resources.


    Using the Cloudflare API requires authentication so that Cloudflare knows
    who is making requests and what permissions you have. Create an API token to
    grant access to the API to perform actions. You can also authenticate with
    [API
    keys](https://developers.cloudflare.com/fundamentals/api/get-started/keys/),
    but these keys have [several
    limitations](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations)
    that make them less secure than API tokens. Whenever possible, use API
    tokens to interact with the Cloudflare API.


    To create an API token, from the Cloudflare dashboard, go to My Profile >
    API Tokens and select Create Token. For more information on how to create
    and troubleshoot API tokens, refer to

    our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).


    For information regarding rate limits, refer to our [API Rate
    Limits](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/platform/limits/#api-rate-limits).


    Totally new to Cloudflare? [Start
    here](https://developers.cloudflare.com/fundamentals/get-started/).
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  title: Cloudflare API
  version: 4.0.0
servers:
  - description: Client API
    url: https://api.cloudflare.com/client/v4
paths:
  /accounts/{account_id}/members:
    get:
      description: List all members of an account.
      operationId: account-members-list-members
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/iam_account_identifier'
        - in: query
          name: order
          schema:
            description: Field to order results by.
            enum:
              - user.first_name
              - user.last_name
              - user.email
              - status
            example: status
        - in: query
          name: status
          schema:
            description: A member's status in the account.
            enum:
              - accepted
              - pending
              - rejected
            example: accepted
            type: string
        - in: query
          name: page
          schema:
            default: 1
            description: Page number of paginated results.
            minimum: 1
            type: number
        - in: query
          name: per_page
          schema:
            default: 20
            description: Maximum number of results per page.
            maximum: 50
            minimum: 5
            type: number
        - in: query
          name: direction
          schema:
            description: Direction to order results.
            enum:
              - asc
              - desc
            example: desc
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/iam_collection_member_response_with_policies
          description: List Members response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_api-response-common-failure'
          description: List Members response failure
      security:
        - api_email: []
          api_key: []
      summary: List Members
      tags:
        - Account Members
      x-api-token-group:
        - SCIM Provisioning
        - Account Settings Write
        - Account Settings Read
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    post:
      description: Add a user to the list of members for this account.
      operationId: account-members-add-member
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/iam_account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/iam_create-member-with-roles'
                - $ref: '#/components/schemas/iam_create-member-with-policies'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_single_member_response_with_policies'
          description: Add Member response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_api-response-common-failure'
          description: Add Member response failure
      security:
        - api_email: []
          api_key: []
      summary: Add Member
      tags:
        - Account Members
      x-api-token-group:
        - SCIM Provisioning
        - Account Settings Write
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
  /accounts/{account_id}/members/{member_id}:
    get:
      description: Get information about a specific member of an account.
      operationId: account-members-member-details
      parameters:
        - in: path
          name: member_id
          required: true
          schema:
            $ref: '#/components/schemas/iam_membership_components-schemas-identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/iam_account_identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_single_member_response_with_policies'
          description: Member Details response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_api-response-common-failure'
          description: Member Details response failure
      security:
        - api_email: []
          api_key: []
      summary: Member Details
      tags:
        - Account Members
      x-api-token-group:
        - SCIM Provisioning
        - Account Settings Write
        - Account Settings Read
      x-cfPermissionsRequired:
        enum:
          - '#organization:read'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    put:
      description: Modify an account member.
      operationId: account-members-update-member
      parameters:
        - in: path
          name: member_id
          required: true
          schema:
            $ref: '#/components/schemas/iam_membership_components-schemas-identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/iam_account_identifier'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/iam_update-member-with-roles'
                - $ref: '#/components/schemas/iam_update-member-with-policies'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_single_member_response_with_policies'
          description: Update Member response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_api-response-common-failure'
          description: Update Member response failure
      security:
        - api_email: []
          api_key: []
      summary: Update Member
      tags:
        - Account Members
      x-api-token-group:
        - SCIM Provisioning
        - Account Settings Write
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
    delete:
      description: Remove a member from an account.
      operationId: account-members-remove-member
      parameters:
        - in: path
          name: member_id
          required: true
          schema:
            $ref: '#/components/schemas/iam_membership_components-schemas-identifier'
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/iam_account_identifier'
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_api-response-single-id'
          description: Remove Member response
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_api-response-common-failure'
          description: Remove Member response failure
      security:
        - api_email: []
          api_key: []
      summary: Remove Member
      tags:
        - Account Members
      x-api-token-group:
        - SCIM Provisioning
        - Account Settings Write
      x-cfPermissionsRequired:
        enum:
          - '#organization:edit'
      x-cfPlanAvailability:
        business: true
        enterprise: true
        free: true
        pro: true
components:
  schemas:
    iam_account_identifier:
      allOf:
        - $ref: '#/components/schemas/iam_common_components-schemas-identifier'
      description: Account identifier tag.
      title: Account Identifier
    iam_api-response-common-failure:
      properties:
        errors:
          allOf:
            - $ref: '#/components/schemas/iam_schemas-messages'
          example:
            - code: 7003
              message: No route for the URI
          minLength: 1
        messages:
          allOf:
            - $ref: '#/components/schemas/iam_schemas-messages'
          example: []
        result:
          enum:
            - null
          nullable: true
          type: object
        success:
          description: Whether the API call was successful.
          enum:
            - false
          example: false
          type: boolean
      required:
        - success
        - errors
        - messages
        - result
      type: object
    iam_api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-common'
        - properties:
            result:
              nullable: true
              properties:
                id:
                  $ref: >-
                    #/components/schemas/iam_common_components-schemas-identifier
              required:
                - id
              type: object
      type: object
    iam_collection_member_response_with_policies:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-collection'
        - properties:
            result:
              items:
                $ref: '#/components/schemas/iam_member_with_policies'
              type: array
          type: object
      title: Members with Policies
    iam_create-member-with-policies:
      properties:
        email:
          $ref: '#/components/schemas/iam_email'
        policies:
          description: Array of policies associated with this member.
          items:
            $ref: '#/components/schemas/iam_create_member_policy'
          type: array
        status:
          default: pending
          enum:
            - accepted
            - pending
          x-auditable: true
      required:
        - email
        - policies
      title: Add Member with Policies
      type: object
    iam_create-member-with-roles:
      properties:
        email:
          $ref: '#/components/schemas/iam_email'
        roles:
          description: Array of roles associated with this member.
          items:
            $ref: '#/components/schemas/iam_role_components-schemas-identifier'
          type: array
        status:
          default: pending
          enum:
            - accepted
            - pending
          x-auditable: true
      required:
        - email
        - roles
      title: Add Member with Account Roles
      type: object
    iam_membership_components-schemas-identifier:
      description: Membership identifier tag.
      example: 4536bcfad5faccb111b47003c79917fa
      maxLength: 32
      readOnly: true
      type: string
      x-auditable: true
    iam_single_member_response_with_policies:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/iam_member_with_policies'
          type: object
      title: Response with Policies
    iam_update-member-with-policies:
      properties:
        policies:
          description: Array of policies associated with this member.
          items:
            $ref: '#/components/schemas/iam_create_member_policy'
          type: array
      required:
        - policies
      title: Update Member with Policies
      type: object
    iam_update-member-with-roles:
      properties:
        id:
          $ref: '#/components/schemas/iam_membership_components-schemas-identifier'
        roles:
          description: Roles assigned to this member.
          items:
            $ref: '#/components/schemas/iam_role'
          type: array
        status:
          description: A member's status in the account.
          enum:
            - accepted
            - pending
          example: accepted
          readOnly: true
          x-auditable: true
        user:
          description: Details of the user associated to the membership.
          properties:
            email:
              $ref: '#/components/schemas/iam_email'
            first_name:
              $ref: '#/components/schemas/iam_first_name'
            id:
              $ref: '#/components/schemas/iam_common_components-schemas-identifier'
            last_name:
              $ref: '#/components/schemas/iam_last_name'
            two_factor_authentication_enabled:
              $ref: '#/components/schemas/iam_two_factor_authentication_enabled'
          readOnly: true
          required:
            - email
          type: object
      title: Update Member with Account Roles
      type: object
